

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jul 06 18:54:50 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	functab,global,class=ENTRY,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001B                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0086                     	;# 
   232  0087                     	;# 
   233  0088                     	;# 
   234  0089                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0094                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  010C                     	;# 
   249  010D                     	;# 
   250  010E                     	;# 
   251  010F                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0088                     	;# 
   294  0089                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  010E                     	;# 
   431  010F                     	;# 
   432  018C                     	;# 
   433  018D                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000D                     	;# 
   448  000E                     	;# 
   449  000E                     	;# 
   450  000F                     	;# 
   451  0010                     	;# 
   452  0011                     	;# 
   453  0012                     	;# 
   454  0013                     	;# 
   455  0014                     	;# 
   456  0015                     	;# 
   457  0015                     	;# 
   458  0016                     	;# 
   459  0017                     	;# 
   460  0018                     	;# 
   461  0019                     	;# 
   462  001A                     	;# 
   463  001B                     	;# 
   464  001B                     	;# 
   465  001C                     	;# 
   466  001D                     	;# 
   467  001E                     	;# 
   468  001F                     	;# 
   469  0081                     	;# 
   470  0085                     	;# 
   471  0086                     	;# 
   472  0087                     	;# 
   473  0088                     	;# 
   474  0089                     	;# 
   475  008C                     	;# 
   476  008D                     	;# 
   477  008E                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0098                     	;# 
   483  0099                     	;# 
   484  009C                     	;# 
   485  009D                     	;# 
   486  009E                     	;# 
   487  009F                     	;# 
   488  010C                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  018C                     	;# 
   493  018D                     	;# 
   494  0000                     	;# 
   495  0001                     	;# 
   496  0002                     	;# 
   497  0003                     	;# 
   498  0004                     	;# 
   499  0005                     	;# 
   500  0006                     	;# 
   501  0007                     	;# 
   502  0008                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  001D                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  0081                     	;# 
   530  0085                     	;# 
   531  0086                     	;# 
   532  0087                     	;# 
   533  0088                     	;# 
   534  0089                     	;# 
   535  008C                     	;# 
   536  008D                     	;# 
   537  008E                     	;# 
   538  0091                     	;# 
   539  0092                     	;# 
   540  0093                     	;# 
   541  0094                     	;# 
   542  0098                     	;# 
   543  0099                     	;# 
   544  009C                     	;# 
   545  009D                     	;# 
   546  009E                     	;# 
   547  009F                     	;# 
   548  010C                     	;# 
   549  010D                     	;# 
   550  010E                     	;# 
   551  010F                     	;# 
   552  018C                     	;# 
   553  018D                     	;# 
   554  0000                     	;# 
   555  0001                     	;# 
   556  0002                     	;# 
   557  0003                     	;# 
   558  0004                     	;# 
   559  0005                     	;# 
   560  0006                     	;# 
   561  0007                     	;# 
   562  0008                     	;# 
   563  0009                     	;# 
   564  000A                     	;# 
   565  000B                     	;# 
   566  000C                     	;# 
   567  000D                     	;# 
   568  000E                     	;# 
   569  000E                     	;# 
   570  000F                     	;# 
   571  0010                     	;# 
   572  0011                     	;# 
   573  0012                     	;# 
   574  0013                     	;# 
   575  0014                     	;# 
   576  0015                     	;# 
   577  0015                     	;# 
   578  0016                     	;# 
   579  0017                     	;# 
   580  0018                     	;# 
   581  0019                     	;# 
   582  001A                     	;# 
   583  001B                     	;# 
   584  001B                     	;# 
   585  001C                     	;# 
   586  001D                     	;# 
   587  001E                     	;# 
   588  001F                     	;# 
   589  0081                     	;# 
   590  0085                     	;# 
   591  0086                     	;# 
   592  0087                     	;# 
   593  0088                     	;# 
   594  0089                     	;# 
   595  008C                     	;# 
   596  008D                     	;# 
   597  008E                     	;# 
   598  0091                     	;# 
   599  0092                     	;# 
   600  0093                     	;# 
   601  0094                     	;# 
   602  0098                     	;# 
   603  0099                     	;# 
   604  009C                     	;# 
   605  009D                     	;# 
   606  009E                     	;# 
   607  009F                     	;# 
   608  010C                     	;# 
   609  010D                     	;# 
   610  010E                     	;# 
   611  010F                     	;# 
   612  018C                     	;# 
   613  018D                     	;# 
   614  0013                     _SSPBUF	set	19
   615  000C                     _PIR1	set	12
   616  0009                     _PORTE	set	9
   617  0008                     _PORTD	set	8
   618  0007                     _PORTC	set	7
   619  0005                     _PORTA	set	5
   620  0006                     _PORTB	set	6
   621  00A0                     _SSPM0	set	160
   622  00A1                     _SSPM1	set	161
   623  00A2                     _SSPM2	set	162
   624  00A3                     _SSPM3	set	163
   625  00A5                     _SSPEN	set	165
   626  00A6                     _SSPOV	set	166
   627  00A7                     _WCOL	set	167
   628  005D                     _TMR0IE	set	93
   629  005F                     _GIE	set	95
   630  005E                     _PEIE	set	94
   631  0061                     _TMR2IF	set	97
   632  0060                     _TMR1IF	set	96
   633  005A                     _TMR0IF	set	90
   634  0094                     _SSPSTAT	set	148
   635  0093                     _SSPADD	set	147
   636  0091                     _SSPCON2	set	145
   637  0089                     _TRISE	set	137
   638  0088                     _TRISD	set	136
   639  0087                     _TRISC	set	135
   640  0086                     _TRISB	set	134
   641  0085                     _TRISA	set	133
   642  048C                     _ACKEN	set	1164
   643  048D                     _ACKDT	set	1165
   644  048B                     _RCEN	set	1163
   645  048A                     _PEN	set	1162
   646  0488                     _SEN	set	1160
   647  040A                     _PS2	set	1034
   648  0409                     _PS1	set	1033
   649  0408                     _PS0	set	1032
   650  040B                     _PSA	set	1035
   651  040D                     _T0CS	set	1037
   652  010C                     _EEDATA	set	268
   653  010D                     _EEADR	set	269
   654  018D                     _EECON2	set	397
   655  0C60                     _RD	set	3168
   656  0C62                     _WREN	set	3170
   657  0C61                     _WR	set	3169
   658                           
   659                           ; #config settings
   660  0000                     
   661                           	psect	cinit
   662  0015                     start_initialization:	
   663  0015                     __initialization:	
   664                           
   665                           ; Clear objects allocated to COMMON
   666  0015  01FB               	clrf	__pbssCOMMON& (0+127)
   667  0016  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   668  0017  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   669                           
   670                           ; Clear objects allocated to BANK0
   671  0018  1383               	bcf	3,7	;select IRP bank0
   672  0019  3020               	movlw	low __pbssBANK0
   673  001A  0084               	movwf	4
   674  001B  304B               	movlw	low (__pbssBANK0+43)
   675  001C  120A  118A  27F6  120A  118A  	fcall	clear_ram0
   676  0021                     end_of_initialization:	
   677                           ;End of C runtime variable initialization code
   678                           
   679  0021                     __end_of__initialization:	
   680  0021  0183               	clrf	3
   681  0022  120A  118A  2D44   	ljmp	_main	;jump to C main() function
   682                           
   683                           	psect	bssCOMMON
   684  007B                     __pbssCOMMON:	
   685  007B                     _timer2_isr:	
   686  007B                     	ds	1
   687  007C                     _timer1_isr:	
   688  007C                     	ds	1
   689  007D                     _timer0_isr:	
   690  007D                     	ds	1
   691                           
   692                           	psect	bssBANK0
   693  0020                     __pbssBANK0:	
   694  0020                     _sch_tasks:	
   695  0020                     	ds	39
   696  0047                     _counter:	
   697  0047                     	ds	2
   698  0049                     _buttonPressedFlag:	
   699  0049                     	ds	1
   700  004A                     _setTemperature:	
   701  004A                     	ds	1
   702                           
   703                           	psect	clrtext
   704  07F6                     clear_ram0:	
   705                           ;	Called with FSR containing the base address, and
   706                           ;	W with the last address+1
   707                           
   708  07F6  0064               	clrwdt	;clear the watchdog before getting into this loop
   709  07F7                     clrloop0:	
   710  07F7  0180               	clrf	0	;clear RAM location pointed to by FSR
   711  07F8  0A84               	incf	4,f	;increment pointer
   712  07F9  0604               	xorwf	4,w	;XOR with final address
   713  07FA  1903               	btfsc	3,2	;have we reached the end yet?
   714  07FB  3400               	retlw	0	;all done for this memory range, return
   715  07FC  0604               	xorwf	4,w	;XOR again to restore value
   716  07FD  2FF7               	goto	clrloop0	;do the next byte
   717                           
   718                           	psect	cstackCOMMON
   719  0070                     __pcstackCOMMON:	
   720  0070                     ?_ssd_set_state:	
   721  0070                     ?_ssd_init:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_eeprom_u8_read:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_sch_vid_init:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_sch_vid_dispatch_tasks:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_sch_vid_delete_task:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_timer_vid_set_isr_0:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_sch_update:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_showNumber25:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_checkButtons:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_dio_u8_read_port_value:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_ssd_get_number:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_timer_isr:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?i1___bmul:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_main:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     i1___bmul@multiplicand:	
   764                           ; 2 bytes @ 0x0
   765                           
   766                           
   767                           ; 1 bytes @ 0x0
   768  0070                     	ds	1
   769  0071                     ??i1___bmul:	
   770                           
   771                           ; 1 bytes @ 0x1
   772  0071                     	ds	1
   773  0072                     i1___bmul@multiplier:	
   774                           
   775                           ; 1 bytes @ 0x2
   776  0072                     	ds	1
   777  0073                     i1___bmul@product:	
   778                           
   779                           ; 1 bytes @ 0x3
   780  0073                     	ds	1
   781  0074                     ??_sch_update:	
   782                           
   783                           ; 1 bytes @ 0x4
   784  0074                     	ds	6
   785  007A                     sch_update@index:	
   786                           
   787                           ; 1 bytes @ 0xA
   788  007A                     	ds	1
   789                           
   790                           	psect	cstackBANK0
   791  004B                     __pcstackBANK0:	
   792  004B                     ??_timer_isr:	
   793                           
   794                           ; 1 bytes @ 0x0
   795  004B                     	ds	6
   796  0051                     ?_eeprom_vid_write:	
   797  0051                     ?_dio_vid_set_port_direction:	
   798                           ; 1 bytes @ 0x6
   799                           
   800  0051                     ??_eeprom_u8_read:	
   801                           ; 1 bytes @ 0x6
   802                           
   803  0051                     ??_timer_vid_set_isr_0:	
   804                           ; 1 bytes @ 0x6
   805                           
   806  0051                     ?_timer_vid_init_0:	
   807                           ; 1 bytes @ 0x6
   808                           
   809  0051                     ??_dio_u8_read_port_value:	
   810                           ; 1 bytes @ 0x6
   811                           
   812  0051                     ?_dio_vid_set_pin_value:	
   813                           ; 1 bytes @ 0x6
   814                           
   815  0051                     ?_dio_vid_set_pin_direction:	
   816                           ; 1 bytes @ 0x6
   817                           
   818  0051                     ??_ssd_get_number:	
   819                           ; 1 bytes @ 0x6
   820                           
   821  0051                     ?___bmul:	
   822                           ; 1 bytes @ 0x6
   823                           
   824  0051                     ?___awdiv:	
   825                           ; 1 bytes @ 0x6
   826                           
   827  0051                     ?___awmod:	
   828                           ; 2 bytes @ 0x6
   829                           
   830  0051                     dio_vid_set_port_direction@direction:	
   831                           ; 2 bytes @ 0x6
   832                           
   833  0051                     dio_vid_set_pin_value@index:	
   834                           ; 1 bytes @ 0x6
   835                           
   836  0051                     dio_vid_set_pin_direction@index:	
   837                           ; 1 bytes @ 0x6
   838                           
   839  0051                     eeprom_vid_write@data:	
   840                           ; 1 bytes @ 0x6
   841                           
   842  0051                     eeprom_u8_read@address:	
   843                           ; 1 bytes @ 0x6
   844                           
   845  0051                     ___bmul@multiplicand:	
   846                           ; 1 bytes @ 0x6
   847                           
   848  0051                     timer_vid_init_0@prescaler:	
   849                           ; 1 bytes @ 0x6
   850                           
   851  0051                     ___awdiv@divisor:	
   852                           ; 2 bytes @ 0x6
   853                           
   854  0051                     ___awmod@divisor:	
   855                           ; 2 bytes @ 0x6
   856                           
   857                           
   858                           ; 2 bytes @ 0x6
   859  0051                     	ds	1
   860  0052                     ??_eeprom_vid_write:	
   861  0052                     ??_dio_vid_set_port_direction:	
   862                           ; 1 bytes @ 0x7
   863                           
   864  0052                     ??___bmul:	
   865                           ; 1 bytes @ 0x7
   866                           
   867  0052                     dio_vid_set_pin_value@value:	
   868                           ; 1 bytes @ 0x7
   869                           
   870  0052                     dio_vid_set_pin_direction@direction:	
   871                           ; 1 bytes @ 0x7
   872                           
   873  0052                     timer_vid_set_isr_0@callback_function:	
   874                           ; 1 bytes @ 0x7
   875                           
   876  0052                     eeprom_vid_write@address:	
   877                           ; 1 bytes @ 0x7
   878                           
   879                           
   880                           ; 1 bytes @ 0x7
   881  0052                     	ds	1
   882  0053                     ??_dio_vid_set_pin_value:	
   883  0053                     ??_dio_vid_set_pin_direction:	
   884                           ; 1 bytes @ 0x8
   885                           
   886  0053                     dio_u8_read_port_value@portNumber:	
   887                           ; 1 bytes @ 0x8
   888                           
   889  0053                     ssd_get_number@number:	
   890                           ; 1 bytes @ 0x8
   891                           
   892  0053                     timer_vid_init_0@interruptEnable:	
   893                           ; 1 bytes @ 0x8
   894                           
   895  0053                     eeprom_vid_write@gie_Status:	
   896                           ; 1 bytes @ 0x8
   897                           
   898  0053                     ___bmul@product:	
   899                           ; 1 bytes @ 0x8
   900                           
   901  0053                     ___awdiv@dividend:	
   902                           ; 1 bytes @ 0x8
   903                           
   904  0053                     ___awmod@dividend:	
   905                           ; 2 bytes @ 0x8
   906                           
   907                           
   908                           ; 2 bytes @ 0x8
   909  0053                     	ds	1
   910  0054                     ?_dio_u8_read_pin_value:	
   911  0054                     ??_timer_vid_init_0:	
   912                           ; 1 bytes @ 0x9
   913                           
   914  0054                     ?_dio_vid_set_port_value:	
   915                           ; 1 bytes @ 0x9
   916                           
   917  0054                     dio_vid_set_port_direction@portNumber:	
   918                           ; 1 bytes @ 0x9
   919                           
   920  0054                     dio_vid_set_port_value@value:	
   921                           ; 1 bytes @ 0x9
   922                           
   923  0054                     dio_u8_read_pin_value@index:	
   924                           ; 1 bytes @ 0x9
   925                           
   926  0054                     ___bmul@multiplier:	
   927                           ; 1 bytes @ 0x9
   928                           
   929                           
   930                           ; 1 bytes @ 0x9
   931  0054                     	ds	1
   932  0055                     ??_dio_u8_read_pin_value:	
   933  0055                     ?_sch_u8_add_task:	
   934                           ; 1 bytes @ 0xA
   935                           
   936  0055                     ??_sch_vid_delete_task:	
   937                           ; 1 bytes @ 0xA
   938                           
   939  0055                     ??_dio_vid_set_port_value:	
   940                           ; 1 bytes @ 0xA
   941                           
   942  0055                     ??___awdiv:	
   943                           ; 1 bytes @ 0xA
   944                           
   945  0055                     ??___awmod:	
   946                           ; 1 bytes @ 0xA
   947                           
   948  0055                     dio_vid_set_pin_value@portNumber:	
   949                           ; 1 bytes @ 0xA
   950                           
   951  0055                     dio_vid_set_pin_direction@portNumber:	
   952                           ; 1 bytes @ 0xA
   953                           
   954  0055                     sch_u8_add_task@delay:	
   955                           ; 1 bytes @ 0xA
   956                           
   957                           
   958                           ; 4 bytes @ 0xA
   959  0055                     	ds	1
   960  0056                     ??_ssd_init:	
   961  0056                     dio_u8_read_pin_value@portNumber:	
   962                           ; 1 bytes @ 0xB
   963                           
   964  0056                     sch_vid_delete_task@index:	
   965                           ; 1 bytes @ 0xB
   966                           
   967  0056                     ___awdiv@counter:	
   968                           ; 1 bytes @ 0xB
   969                           
   970  0056                     ___awmod@counter:	
   971                           ; 1 bytes @ 0xB
   972                           
   973                           
   974                           ; 1 bytes @ 0xB
   975  0056                     	ds	1
   976  0057                     ??_sch_vid_init:	
   977  0057                     dio_vid_set_port_value@portNumber:	
   978                           ; 1 bytes @ 0xC
   979                           
   980  0057                     dio_u8_read_pin_value@port:	
   981                           ; 1 bytes @ 0xC
   982                           
   983  0057                     ___awdiv@sign:	
   984                           ; 1 bytes @ 0xC
   985                           
   986  0057                     ___awmod@sign:	
   987                           ; 1 bytes @ 0xC
   988                           
   989                           
   990                           ; 1 bytes @ 0xC
   991  0057                     	ds	1
   992  0058                     ??_checkButtons:	
   993  0058                     sch_vid_init@i:	
   994                           ; 1 bytes @ 0xD
   995                           
   996  0058                     ___awdiv@quotient:	
   997                           ; 1 bytes @ 0xD
   998                           
   999                           
  1000                           ; 2 bytes @ 0xD
  1001  0058                     	ds	1
  1002  0059                     sch_u8_add_task@period:	
  1003                           
  1004                           ; 4 bytes @ 0xE
  1005  0059                     	ds	1
  1006  005A                     ??_ssd_set_state:	
  1007                           
  1008                           ; 1 bytes @ 0xF
  1009  005A                     	ds	3
  1010  005D                     ??_sch_u8_add_task:	
  1011  005D                     ssd_set_state@ones:	
  1012                           ; 1 bytes @ 0x12
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0x12
  1016  005D                     	ds	1
  1017  005E                     ssd_set_state@tens:	
  1018                           
  1019                           ; 1 bytes @ 0x13
  1020  005E                     	ds	1
  1021  005F                     ssd_set_state@state:	
  1022  005F                     sch_u8_add_task@taskFunction:	
  1023                           ; 1 bytes @ 0x14
  1024                           
  1025                           
  1026                           ; 1 bytes @ 0x14
  1027  005F                     	ds	1
  1028  0060                     ??_sch_vid_dispatch_tasks:	
  1029  0060                     ??_showNumber25:	
  1030                           ; 1 bytes @ 0x15
  1031                           
  1032  0060                     sch_u8_add_task@index:	
  1033                           ; 1 bytes @ 0x15
  1034                           
  1035                           
  1036                           ; 1 bytes @ 0x15
  1037  0060                     	ds	5
  1038  0065                     sch_vid_dispatch_tasks@index:	
  1039                           
  1040                           ; 1 bytes @ 0x1A
  1041  0065                     	ds	1
  1042  0066                     ??_main:	
  1043                           
  1044                           ; 1 bytes @ 0x1B
  1045  0066                     	ds	2
  1046                           
  1047                           	psect	maintext
  1048  0544                     __pmaintext:	
  1049 ;;
  1050 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1051 ;;
  1052 ;; *************** function _main *****************
  1053 ;; Defined at:
  1054 ;;		line 64 in file "main.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  2   49[None  ] int 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : B00/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         0       0       0       0       0
  1069 ;;      Locals:         0       0       0       0       0
  1070 ;;      Temps:          0       2       0       0       0
  1071 ;;      Totals:         0       2       0       0       0
  1072 ;;Total ram usage:        2 bytes
  1073 ;; Hardware stack levels required when called:    8
  1074 ;; This function calls:
  1075 ;;		___awmod
  1076 ;;		_dio_vid_set_port_direction
  1077 ;;		_eeprom_u8_read
  1078 ;;		_sch_u8_add_task
  1079 ;;		_sch_vid_dispatch_tasks
  1080 ;;		_sch_vid_init
  1081 ;;		_ssd_init
  1082 ;; This function is called by:
  1083 ;;		Startup code after reset
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _main
  1089  0544                     _main:	
  1090  0544                     l2476:	
  1091                           ;incstack = 0
  1092                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1093                           
  1094                           
  1095                           ;main.c: 65:     ssd_init();
  1096  0544  120A  158A  26D1  120A  118A  	fcall	_ssd_init
  1097                           
  1098                           ;main.c: 66:     dio_vid_set_port_direction(B, 255);
  1099  0549  30FF               	movlw	255
  1100  054A  1283               	bcf	3,5	;RP0=0, select bank0
  1101  054B  1303               	bcf	3,6	;RP1=0, select bank0
  1102  054C  00E6               	movwf	??_main
  1103  054D  0866               	movf	??_main,w
  1104  054E  00D1               	movwf	dio_vid_set_port_direction@direction
  1105  054F  3001               	movlw	1
  1106  0550  120A  118A  27B6  120A  118A  	fcall	_dio_vid_set_port_direction
  1107  0555                     l2478:	
  1108                           
  1109                           ;main.c: 67:     setTemperature = eeprom_u8_read(0);
  1110  0555  3000               	movlw	0
  1111  0556  120A  158A  269D  120A  118A  	fcall	_eeprom_u8_read
  1112  055B  1283               	bcf	3,5	;RP0=0, select bank0
  1113  055C  1303               	bcf	3,6	;RP1=0, select bank0
  1114  055D  00E6               	movwf	??_main
  1115  055E  0866               	movf	??_main,w
  1116  055F  00CA               	movwf	_setTemperature	;volatile
  1117  0560                     l2480:	
  1118                           
  1119                           ;main.c: 68:     if (setTemperature < 35 || setTemperature > 75 || setTemperature % 5 !=
      +                           0)
  1120  0560  3023               	movlw	35
  1121  0561  024A               	subwf	_setTemperature,w	;volatile
  1122  0562  1C03               	skipc
  1123  0563  2D65               	goto	u2061
  1124  0564  2D66               	goto	u2060
  1125  0565                     u2061:	
  1126  0565  2D84               	goto	l2486
  1127  0566                     u2060:	
  1128  0566                     l2482:	
  1129  0566  304C               	movlw	76
  1130  0567  024A               	subwf	_setTemperature,w	;volatile
  1131  0568  1803               	skipnc
  1132  0569  2D6B               	goto	u2071
  1133  056A  2D6C               	goto	u2070
  1134  056B                     u2071:	
  1135  056B  2D84               	goto	l2486
  1136  056C                     u2070:	
  1137  056C                     l2484:	
  1138  056C  3005               	movlw	5
  1139  056D  00D1               	movwf	___awmod@divisor
  1140  056E  3000               	movlw	0
  1141  056F  00D2               	movwf	___awmod@divisor+1
  1142  0570  084A               	movf	_setTemperature,w	;volatile
  1143  0571  00E6               	movwf	??_main
  1144  0572  01E7               	clrf	??_main+1
  1145  0573  0866               	movf	??_main,w
  1146  0574  00D3               	movwf	___awmod@dividend
  1147  0575  0867               	movf	??_main+1,w
  1148  0576  00D4               	movwf	___awmod@dividend+1
  1149  0577  120A  118A  275B  120A  118A  	fcall	___awmod
  1150  057C  1283               	bcf	3,5	;RP0=0, select bank0
  1151  057D  1303               	bcf	3,6	;RP1=0, select bank0
  1152  057E  0851               	movf	?___awmod,w
  1153  057F  0452               	iorwf	?___awmod+1,w
  1154  0580  1903               	btfsc	3,2
  1155  0581  2D83               	goto	u2081
  1156  0582  2D84               	goto	u2080
  1157  0583                     u2081:	
  1158  0583  2D88               	goto	l2488
  1159  0584                     u2080:	
  1160  0584                     l2486:	
  1161                           
  1162                           ;main.c: 69:         setTemperature = 60;
  1163  0584  303C               	movlw	60
  1164  0585  00E6               	movwf	??_main
  1165  0586  0866               	movf	??_main,w
  1166  0587  00CA               	movwf	_setTemperature	;volatile
  1167  0588                     l2488:	
  1168                           
  1169                           ;main.c: 70:     sch_vid_init();
  1170  0588  120A  158A  271E  120A  118A  	fcall	_sch_vid_init
  1171  058D                     l2490:	
  1172                           
  1173                           ;main.c: 71:     sch_u8_add_task(checkButtons, 1, 1);
  1174  058D  3000               	movlw	0
  1175  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1176  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1177  0590  00D8               	movwf	sch_u8_add_task@delay+3
  1178  0591  3000               	movlw	0
  1179  0592  00D7               	movwf	sch_u8_add_task@delay+2
  1180  0593  3000               	movlw	0
  1181  0594  00D6               	movwf	sch_u8_add_task@delay+1
  1182  0595  3001               	movlw	1
  1183  0596  00D5               	movwf	sch_u8_add_task@delay
  1184  0597  3000               	movlw	0
  1185  0598  00DC               	movwf	sch_u8_add_task@period+3
  1186  0599  3000               	movlw	0
  1187  059A  00DB               	movwf	sch_u8_add_task@period+2
  1188  059B  3000               	movlw	0
  1189  059C  00DA               	movwf	sch_u8_add_task@period+1
  1190  059D  3001               	movlw	1
  1191  059E  00D9               	movwf	sch_u8_add_task@period
  1192  059F  3005               	movlw	(low (fp__checkButtons-fpbase))& (0+255)
  1193  05A0  120A  118A  24B8  120A  118A  	fcall	_sch_u8_add_task
  1194  05A5                     l2492:	
  1195                           
  1196                           ;main.c: 72:     sch_u8_add_task(showNumber25, 10, 10);
  1197  05A5  3000               	movlw	0
  1198  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1199  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  1200  05A8  00D8               	movwf	sch_u8_add_task@delay+3
  1201  05A9  3000               	movlw	0
  1202  05AA  00D7               	movwf	sch_u8_add_task@delay+2
  1203  05AB  3000               	movlw	0
  1204  05AC  00D6               	movwf	sch_u8_add_task@delay+1
  1205  05AD  300A               	movlw	10
  1206  05AE  00D5               	movwf	sch_u8_add_task@delay
  1207  05AF  3000               	movlw	0
  1208  05B0  00DC               	movwf	sch_u8_add_task@period+3
  1209  05B1  3000               	movlw	0
  1210  05B2  00DB               	movwf	sch_u8_add_task@period+2
  1211  05B3  3000               	movlw	0
  1212  05B4  00DA               	movwf	sch_u8_add_task@period+1
  1213  05B5  300A               	movlw	10
  1214  05B6  00D9               	movwf	sch_u8_add_task@period
  1215  05B7  3002               	movlw	(low (fp__showNumber25-fpbase))& (0+255)
  1216  05B8  120A  118A  24B8  120A  118A  	fcall	_sch_u8_add_task
  1217  05BD                     l2494:	
  1218                           
  1219                           ;main.c: 77:         sch_vid_dispatch_tasks();
  1220  05BD  120A  118A  2427  120A  118A  	fcall	_sch_vid_dispatch_tasks
  1221  05C2  2DBD               	goto	l2494
  1222  05C3  120A  118A  2812   	ljmp	start
  1223  05C6                     __end_of_main:	
  1224                           
  1225                           	psect	text1
  1226  0ED1                     __ptext1:	
  1227 ;; *************** function _ssd_init *****************
  1228 ;; Defined at:
  1229 ;;		line 66 in file "ssd.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1243 ;;      Params:         0       0       0       0       0
  1244 ;;      Locals:         0       0       0       0       0
  1245 ;;      Temps:          0       1       0       0       0
  1246 ;;      Totals:         0       1       0       0       0
  1247 ;;Total ram usage:        1 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; Hardware stack levels required when called:    4
  1250 ;; This function calls:
  1251 ;;		_dio_vid_set_pin_direction
  1252 ;;		_dio_vid_set_port_direction
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           
  1259                           ;psect for function _ssd_init
  1260  0ED1                     _ssd_init:	
  1261  0ED1                     l2366:	
  1262                           ;incstack = 0
  1263                           ; Regs used in _ssd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1264                           
  1265                           
  1266                           ;ssd.c: 67:     dio_vid_set_port_direction(D, 0);
  1267  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  1268  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  1269  0ED3  01D1               	clrf	dio_vid_set_port_direction@direction
  1270  0ED4  3003               	movlw	3
  1271  0ED5  120A  118A  27B6  120A  158A  	fcall	_dio_vid_set_port_direction
  1272                           
  1273                           ;ssd.c: 68:     dio_vid_set_pin_direction(A, 2, 0);
  1274  0EDA  3002               	movlw	2
  1275  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0EDD  00D6               	movwf	??_ssd_init
  1278  0EDE  0856               	movf	??_ssd_init,w
  1279  0EDF  00D1               	movwf	dio_vid_set_pin_direction@index
  1280  0EE0  01D2               	clrf	dio_vid_set_pin_direction@direction
  1281  0EE1  3000               	movlw	0
  1282  0EE2  120A  118A  203B  120A  158A  	fcall	_dio_vid_set_pin_direction
  1283                           
  1284                           ;ssd.c: 69:     dio_vid_set_pin_direction(A, 3, 0);
  1285  0EE7  3003               	movlw	3
  1286  0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0EEA  00D6               	movwf	??_ssd_init
  1289  0EEB  0856               	movf	??_ssd_init,w
  1290  0EEC  00D1               	movwf	dio_vid_set_pin_direction@index
  1291  0EED  01D2               	clrf	dio_vid_set_pin_direction@direction
  1292  0EEE  3000               	movlw	0
  1293  0EEF  120A  118A  203B  120A  158A  	fcall	_dio_vid_set_pin_direction
  1294  0EF4                     l235:	
  1295  0EF4  0008               	return
  1296  0EF5                     __end_of_ssd_init:	
  1297                           
  1298                           	psect	text2
  1299  07B6                     __ptext2:	
  1300 ;; *************** function _dio_vid_set_port_direction *****************
  1301 ;; Defined at:
  1302 ;;		line 12 in file "dio.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  portNumber      1    wreg     unsigned char 
  1305 ;;  direction       1    6[BANK0 ] unsigned char 
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  portNumber      1    9[BANK0 ] unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1317 ;;      Params:         0       1       0       0       0
  1318 ;;      Locals:         0       1       0       0       0
  1319 ;;      Temps:          0       2       0       0       0
  1320 ;;      Totals:         0       4       0       0       0
  1321 ;;Total ram usage:        4 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    3
  1324 ;; This function calls:
  1325 ;;		Nothing
  1326 ;; This function is called by:
  1327 ;;		_main
  1328 ;;		_ssd_init
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _dio_vid_set_port_direction
  1334  07B6                     _dio_vid_set_port_direction:	
  1335                           
  1336                           ;incstack = 0
  1337                           ; Regs used in _dio_vid_set_port_direction: [wreg-fsr0h+status,2+status,0]
  1338                           ;dio_vid_set_port_direction@portNumber stored from wreg
  1339  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1340  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1341  07B8  00D4               	movwf	dio_vid_set_port_direction@portNumber
  1342  07B9                     l2254:	
  1343                           
  1344                           ;dio.c: 13:  switch (portNumber) {
  1345  07B9  2FD3               	goto	l2268
  1346  07BA                     l2256:	
  1347                           
  1348                           ;dio.c: 15:   TRISA = direction;
  1349  07BA  0851               	movf	dio_vid_set_port_direction@direction,w
  1350  07BB  1683               	bsf	3,5	;RP0=1, select bank1
  1351  07BC  1303               	bcf	3,6	;RP1=0, select bank1
  1352  07BD  0085               	movwf	5	;volatile
  1353                           
  1354                           ;dio.c: 16:   break;
  1355  07BE  2FEC               	goto	l86
  1356  07BF                     l2258:	
  1357                           
  1358                           ;dio.c: 18:   TRISB = direction;
  1359  07BF  0851               	movf	dio_vid_set_port_direction@direction,w
  1360  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  1361  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  1362  07C2  0086               	movwf	6	;volatile
  1363                           
  1364                           ;dio.c: 19:   break;
  1365  07C3  2FEC               	goto	l86
  1366  07C4                     l2260:	
  1367                           
  1368                           ;dio.c: 21:   TRISC = direction;
  1369  07C4  0851               	movf	dio_vid_set_port_direction@direction,w
  1370  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  1371  07C6  1303               	bcf	3,6	;RP1=0, select bank1
  1372  07C7  0087               	movwf	7	;volatile
  1373                           
  1374                           ;dio.c: 22:   break;
  1375  07C8  2FEC               	goto	l86
  1376  07C9                     l2262:	
  1377                           
  1378                           ;dio.c: 24:   TRISD = direction;
  1379  07C9  0851               	movf	dio_vid_set_port_direction@direction,w
  1380  07CA  1683               	bsf	3,5	;RP0=1, select bank1
  1381  07CB  1303               	bcf	3,6	;RP1=0, select bank1
  1382  07CC  0088               	movwf	8	;volatile
  1383                           
  1384                           ;dio.c: 25:   break;
  1385  07CD  2FEC               	goto	l86
  1386  07CE                     l2264:	
  1387                           
  1388                           ;dio.c: 27:   TRISE = direction;
  1389  07CE  0851               	movf	dio_vid_set_port_direction@direction,w
  1390  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  1391  07D0  1303               	bcf	3,6	;RP1=0, select bank1
  1392  07D1  0089               	movwf	9	;volatile
  1393                           
  1394                           ;dio.c: 28:   break;
  1395  07D2  2FEC               	goto	l86
  1396  07D3                     l2268:	
  1397  07D3  0854               	movf	dio_vid_set_port_direction@portNumber,w
  1398  07D4  00D2               	movwf	??_dio_vid_set_port_direction
  1399  07D5  01D3               	clrf	??_dio_vid_set_port_direction+1
  1400                           
  1401                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1402                           ; Switch size 1, requested type "simple"
  1403                           ; Number of cases is 1, Range of values is 0 to 0
  1404                           ; switch strategies available:
  1405                           ; Name         Instructions Cycles
  1406                           ; simple_byte            4     3 (average)
  1407                           ; direct_byte           11     8 (fixed)
  1408                           ; jumptable            260     6 (fixed)
  1409                           ;	Chosen strategy is simple_byte
  1410  07D6  0853               	movf	??_dio_vid_set_port_direction+1,w
  1411  07D7  3A00               	xorlw	0	; case 0
  1412  07D8  1903               	skipnz
  1413  07D9  2FDB               	goto	l2802
  1414  07DA  2FEC               	goto	l86
  1415  07DB                     l2802:	
  1416                           
  1417                           ; Switch size 1, requested type "simple"
  1418                           ; Number of cases is 5, Range of values is 0 to 4
  1419                           ; switch strategies available:
  1420                           ; Name         Instructions Cycles
  1421                           ; simple_byte           16     9 (average)
  1422                           ; direct_byte           23     8 (fixed)
  1423                           ; jumptable            260     6 (fixed)
  1424                           ;	Chosen strategy is simple_byte
  1425  07DB  0852               	movf	??_dio_vid_set_port_direction,w
  1426  07DC  3A00               	xorlw	0	; case 0
  1427  07DD  1903               	skipnz
  1428  07DE  2FBA               	goto	l2256
  1429  07DF  3A01               	xorlw	1	; case 1
  1430  07E0  1903               	skipnz
  1431  07E1  2FBF               	goto	l2258
  1432  07E2  3A03               	xorlw	3	; case 2
  1433  07E3  1903               	skipnz
  1434  07E4  2FC4               	goto	l2260
  1435  07E5  3A01               	xorlw	1	; case 3
  1436  07E6  1903               	skipnz
  1437  07E7  2FC9               	goto	l2262
  1438  07E8  3A07               	xorlw	7	; case 4
  1439  07E9  1903               	skipnz
  1440  07EA  2FCE               	goto	l2264
  1441  07EB  2FEC               	goto	l86
  1442  07EC                     l86:	
  1443  07EC  0008               	return
  1444  07ED                     __end_of_dio_vid_set_port_direction:	
  1445                           
  1446                           	psect	text3
  1447  003B                     __ptext3:	
  1448 ;; *************** function _dio_vid_set_pin_direction *****************
  1449 ;; Defined at:
  1450 ;;		line 116 in file "dio.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  portNumber      1    wreg     unsigned char 
  1453 ;;  index           1    6[BANK0 ] unsigned char 
  1454 ;;  direction       1    7[BANK0 ] unsigned char 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  portNumber      1   10[BANK0 ] unsigned char 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         0       2       0       0       0
  1467 ;;      Locals:         0       1       0       0       0
  1468 ;;      Temps:          0       2       0       0       0
  1469 ;;      Totals:         0       5       0       0       0
  1470 ;;Total ram usage:        5 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    3
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_ssd_init
  1477 ;;		_lcd_vid_init
  1478 ;;		_i2c_vid_init_master
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           
  1483                           ;psect for function _dio_vid_set_pin_direction
  1484  003B                     _dio_vid_set_pin_direction:	
  1485                           
  1486                           ;incstack = 0
  1487                           ; Regs used in _dio_vid_set_pin_direction: [wreg-fsr0h+status,2+status,0]
  1488                           ;dio_vid_set_pin_direction@portNumber stored from wreg
  1489  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1490  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1491  003D  00D5               	movwf	dio_vid_set_pin_direction@portNumber
  1492  003E                     l2276:	
  1493                           
  1494                           ;dio.c: 117:  switch (portNumber) {
  1495  003E  2916               	goto	l2320
  1496  003F                     l2278:	
  1497                           
  1498                           ;dio.c: 119:   if (direction == 1)
  1499  003F  0352               	decf	dio_vid_set_pin_direction@direction,w
  1500  0040  1D03               	btfss	3,2
  1501  0041  2843               	goto	u1681
  1502  0042  2844               	goto	u1680
  1503  0043                     u1681:	
  1504  0043  2854               	goto	l2282
  1505  0044                     u1680:	
  1506  0044                     l2280:	
  1507                           
  1508                           ;dio.c: 120:    TRISA|=(1<<index);
  1509  0044  3001               	movlw	1
  1510  0045  00D3               	movwf	??_dio_vid_set_pin_direction
  1511  0046  0A51               	incf	dio_vid_set_pin_direction@index,w
  1512  0047  284A               	goto	u1694
  1513  0048                     u1695:	
  1514  0048  1003               	clrc
  1515  0049  0DD3               	rlf	??_dio_vid_set_pin_direction,f
  1516  004A                     u1694:	
  1517  004A  3EFF               	addlw	-1
  1518  004B  1D03               	skipz
  1519  004C  2848               	goto	u1695
  1520  004D  0853               	movf	??_dio_vid_set_pin_direction,w
  1521  004E  00D4               	movwf	??_dio_vid_set_pin_direction+1
  1522  004F  0854               	movf	??_dio_vid_set_pin_direction+1,w
  1523  0050  1683               	bsf	3,5	;RP0=1, select bank1
  1524  0051  1303               	bcf	3,6	;RP1=0, select bank1
  1525  0052  0485               	iorwf	5,f	;volatile
  1526  0053  292F               	goto	l159
  1527  0054                     l2282:	
  1528  0054  0852               	movf	dio_vid_set_pin_direction@direction,w
  1529  0055  1D03               	btfss	3,2
  1530  0056  2858               	goto	u1701
  1531  0057  2859               	goto	u1700
  1532  0058                     u1701:	
  1533  0058  292F               	goto	l159
  1534  0059                     u1700:	
  1535  0059                     l2284:	
  1536                           
  1537                           ;dio.c: 122:    TRISA&=~(1<<index);
  1538  0059  3001               	movlw	1
  1539  005A  00D3               	movwf	??_dio_vid_set_pin_direction
  1540  005B  0A51               	incf	dio_vid_set_pin_direction@index,w
  1541  005C  285F               	goto	u1714
  1542  005D                     u1715:	
  1543  005D  1003               	clrc
  1544  005E  0DD3               	rlf	??_dio_vid_set_pin_direction,f
  1545  005F                     u1714:	
  1546  005F  3EFF               	addlw	-1
  1547  0060  1D03               	skipz
  1548  0061  285D               	goto	u1715
  1549  0062  0853               	movf	??_dio_vid_set_pin_direction,w
  1550  0063  3AFF               	xorlw	255
  1551  0064  00D4               	movwf	??_dio_vid_set_pin_direction+1
  1552  0065  0854               	movf	??_dio_vid_set_pin_direction+1,w
  1553  0066  1683               	bsf	3,5	;RP0=1, select bank1
  1554  0067  1303               	bcf	3,6	;RP1=0, select bank1
  1555  0068  0585               	andwf	5,f	;volatile
  1556  0069  292F               	goto	l159
  1557  006A                     l2286:	
  1558                           
  1559                           ;dio.c: 125:   if (direction == 1)
  1560  006A  0352               	decf	dio_vid_set_pin_direction@direction,w
  1561  006B  1D03               	btfss	3,2
  1562  006C  286E               	goto	u1721
  1563  006D  286F               	goto	u1720
  1564  006E                     u1721:	
  1565  006E  287F               	goto	l2290
  1566  006F                     u1720:	
  1567  006F                     l2288:	
  1568                           
  1569                           ;dio.c: 126:    TRISB|=(1<<index);
  1570  006F  3001               	movlw	1
  1571  0070  00D3               	movwf	??_dio_vid_set_pin_direction
  1572  0071  0A51               	incf	dio_vid_set_pin_direction@index,w
  1573  0072  2875               	goto	u1734
  1574  0073                     u1735:	
  1575  0073  1003               	clrc
  1576  0074  0DD3               	rlf	??_dio_vid_set_pin_direction,f
  1577  0075                     u1734:	
  1578  0075  3EFF               	addlw	-1
  1579  0076  1D03               	skipz
  1580  0077  2873               	goto	u1735
  1581  0078  0853               	movf	??_dio_vid_set_pin_direction,w
  1582  0079  00D4               	movwf	??_dio_vid_set_pin_direction+1
  1583  007A  0854               	movf	??_dio_vid_set_pin_direction+1,w
  1584  007B  1683               	bsf	3,5	;RP0=1, select bank1
  1585  007C  1303               	bcf	3,6	;RP1=0, select bank1
  1586  007D  0486               	iorwf	6,f	;volatile
  1587  007E  292F               	goto	l159
  1588  007F                     l2290:	
  1589  007F  0852               	movf	dio_vid_set_pin_direction@direction,w
  1590  0080  1D03               	btfss	3,2
  1591  0081  2883               	goto	u1741
  1592  0082  2884               	goto	u1740
  1593  0083                     u1741:	
  1594  0083  292F               	goto	l159
  1595  0084                     u1740:	
  1596  0084                     l2292:	
  1597                           
  1598                           ;dio.c: 128:    TRISB&=~(1<<index);
  1599  0084  3001               	movlw	1
  1600  0085  00D3               	movwf	??_dio_vid_set_pin_direction
  1601  0086  0A51               	incf	dio_vid_set_pin_direction@index,w
  1602  0087  288A               	goto	u1754
  1603  0088                     u1755:	
  1604  0088  1003               	clrc
  1605  0089  0DD3               	rlf	??_dio_vid_set_pin_direction,f
  1606  008A                     u1754:	
  1607  008A  3EFF               	addlw	-1
  1608  008B  1D03               	skipz
  1609  008C  2888               	goto	u1755
  1610  008D  0853               	movf	??_dio_vid_set_pin_direction,w
  1611  008E  3AFF               	xorlw	255
  1612  008F  00D4               	movwf	??_dio_vid_set_pin_direction+1
  1613  0090  0854               	movf	??_dio_vid_set_pin_direction+1,w
  1614  0091  1683               	bsf	3,5	;RP0=1, select bank1
  1615  0092  1303               	bcf	3,6	;RP1=0, select bank1
  1616  0093  0586               	andwf	6,f	;volatile
  1617  0094  292F               	goto	l159
  1618  0095                     l2294:	
  1619                           
  1620                           ;dio.c: 131:   if (direction == 1)
  1621  0095  0352               	decf	dio_vid_set_pin_direction@direction,w
  1622  0096  1D03               	btfss	3,2
  1623  0097  2899               	goto	u1761
  1624  0098  289A               	goto	u1760
  1625  0099                     u1761:	
  1626  0099  28AA               	goto	l2298
  1627  009A                     u1760:	
  1628  009A                     l2296:	
  1629                           
  1630                           ;dio.c: 132:    TRISC|=(1<<index);
  1631  009A  3001               	movlw	1
  1632  009B  00D3               	movwf	??_dio_vid_set_pin_direction
  1633  009C  0A51               	incf	dio_vid_set_pin_direction@index,w
  1634  009D  28A0               	goto	u1774
  1635  009E                     u1775:	
  1636  009E  1003               	clrc
  1637  009F  0DD3               	rlf	??_dio_vid_set_pin_direction,f
  1638  00A0                     u1774:	
  1639  00A0  3EFF               	addlw	-1
  1640  00A1  1D03               	skipz
  1641  00A2  289E               	goto	u1775
  1642  00A3  0853               	movf	??_dio_vid_set_pin_direction,w
  1643  00A4  00D4               	movwf	??_dio_vid_set_pin_direction+1
  1644  00A5  0854               	movf	??_dio_vid_set_pin_direction+1,w
  1645  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1646  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1647  00A8  0487               	iorwf	7,f	;volatile
  1648  00A9  292F               	goto	l159
  1649  00AA                     l2298:	
  1650  00AA  0852               	movf	dio_vid_set_pin_direction@direction,w
  1651  00AB  1D03               	btfss	3,2
  1652  00AC  28AE               	goto	u1781
  1653  00AD  28AF               	goto	u1780
  1654  00AE                     u1781:	
  1655  00AE  292F               	goto	l159
  1656  00AF                     u1780:	
  1657  00AF                     l2300:	
  1658                           
  1659                           ;dio.c: 134:    TRISC&=~(1<<index);
  1660  00AF  3001               	movlw	1
  1661  00B0  00D3               	movwf	??_dio_vid_set_pin_direction
  1662  00B1  0A51               	incf	dio_vid_set_pin_direction@index,w
  1663  00B2  28B5               	goto	u1794
  1664  00B3                     u1795:	
  1665  00B3  1003               	clrc
  1666  00B4  0DD3               	rlf	??_dio_vid_set_pin_direction,f
  1667  00B5                     u1794:	
  1668  00B5  3EFF               	addlw	-1
  1669  00B6  1D03               	skipz
  1670  00B7  28B3               	goto	u1795
  1671  00B8  0853               	movf	??_dio_vid_set_pin_direction,w
  1672  00B9  3AFF               	xorlw	255
  1673  00BA  00D4               	movwf	??_dio_vid_set_pin_direction+1
  1674  00BB  0854               	movf	??_dio_vid_set_pin_direction+1,w
  1675  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1676  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  1677  00BE  0587               	andwf	7,f	;volatile
  1678  00BF  292F               	goto	l159
  1679  00C0                     l2302:	
  1680                           
  1681                           ;dio.c: 137:   if (direction == 1)
  1682  00C0  0352               	decf	dio_vid_set_pin_direction@direction,w
  1683  00C1  1D03               	btfss	3,2
  1684  00C2  28C4               	goto	u1801
  1685  00C3  28C5               	goto	u1800
  1686  00C4                     u1801:	
  1687  00C4  28D5               	goto	l2306
  1688  00C5                     u1800:	
  1689  00C5                     l2304:	
  1690                           
  1691                           ;dio.c: 138:    TRISD|=(1<<index);
  1692  00C5  3001               	movlw	1
  1693  00C6  00D3               	movwf	??_dio_vid_set_pin_direction
  1694  00C7  0A51               	incf	dio_vid_set_pin_direction@index,w
  1695  00C8  28CB               	goto	u1814
  1696  00C9                     u1815:	
  1697  00C9  1003               	clrc
  1698  00CA  0DD3               	rlf	??_dio_vid_set_pin_direction,f
  1699  00CB                     u1814:	
  1700  00CB  3EFF               	addlw	-1
  1701  00CC  1D03               	skipz
  1702  00CD  28C9               	goto	u1815
  1703  00CE  0853               	movf	??_dio_vid_set_pin_direction,w
  1704  00CF  00D4               	movwf	??_dio_vid_set_pin_direction+1
  1705  00D0  0854               	movf	??_dio_vid_set_pin_direction+1,w
  1706  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  1707  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  1708  00D3  0488               	iorwf	8,f	;volatile
  1709  00D4  292F               	goto	l159
  1710  00D5                     l2306:	
  1711  00D5  0852               	movf	dio_vid_set_pin_direction@direction,w
  1712  00D6  1D03               	btfss	3,2
  1713  00D7  28D9               	goto	u1821
  1714  00D8  28DA               	goto	u1820
  1715  00D9                     u1821:	
  1716  00D9  292F               	goto	l159
  1717  00DA                     u1820:	
  1718  00DA                     l2308:	
  1719                           
  1720                           ;dio.c: 140:    TRISD&=~(1<<index);
  1721  00DA  3001               	movlw	1
  1722  00DB  00D3               	movwf	??_dio_vid_set_pin_direction
  1723  00DC  0A51               	incf	dio_vid_set_pin_direction@index,w
  1724  00DD  28E0               	goto	u1834
  1725  00DE                     u1835:	
  1726  00DE  1003               	clrc
  1727  00DF  0DD3               	rlf	??_dio_vid_set_pin_direction,f
  1728  00E0                     u1834:	
  1729  00E0  3EFF               	addlw	-1
  1730  00E1  1D03               	skipz
  1731  00E2  28DE               	goto	u1835
  1732  00E3  0853               	movf	??_dio_vid_set_pin_direction,w
  1733  00E4  3AFF               	xorlw	255
  1734  00E5  00D4               	movwf	??_dio_vid_set_pin_direction+1
  1735  00E6  0854               	movf	??_dio_vid_set_pin_direction+1,w
  1736  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1737  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1738  00E9  0588               	andwf	8,f	;volatile
  1739  00EA  292F               	goto	l159
  1740  00EB                     l2310:	
  1741                           
  1742                           ;dio.c: 143:   if (direction == 1)
  1743  00EB  0352               	decf	dio_vid_set_pin_direction@direction,w
  1744  00EC  1D03               	btfss	3,2
  1745  00ED  28EF               	goto	u1841
  1746  00EE  28F0               	goto	u1840
  1747  00EF                     u1841:	
  1748  00EF  2900               	goto	l2314
  1749  00F0                     u1840:	
  1750  00F0                     l2312:	
  1751                           
  1752                           ;dio.c: 144:    TRISE|=(1<<index);
  1753  00F0  3001               	movlw	1
  1754  00F1  00D3               	movwf	??_dio_vid_set_pin_direction
  1755  00F2  0A51               	incf	dio_vid_set_pin_direction@index,w
  1756  00F3  28F6               	goto	u1854
  1757  00F4                     u1855:	
  1758  00F4  1003               	clrc
  1759  00F5  0DD3               	rlf	??_dio_vid_set_pin_direction,f
  1760  00F6                     u1854:	
  1761  00F6  3EFF               	addlw	-1
  1762  00F7  1D03               	skipz
  1763  00F8  28F4               	goto	u1855
  1764  00F9  0853               	movf	??_dio_vid_set_pin_direction,w
  1765  00FA  00D4               	movwf	??_dio_vid_set_pin_direction+1
  1766  00FB  0854               	movf	??_dio_vid_set_pin_direction+1,w
  1767  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1768  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1769  00FE  0489               	iorwf	9,f	;volatile
  1770  00FF  292F               	goto	l159
  1771  0100                     l2314:	
  1772  0100  0852               	movf	dio_vid_set_pin_direction@direction,w
  1773  0101  1D03               	btfss	3,2
  1774  0102  2904               	goto	u1861
  1775  0103  2905               	goto	u1860
  1776  0104                     u1861:	
  1777  0104  292F               	goto	l159
  1778  0105                     u1860:	
  1779  0105                     l2316:	
  1780                           
  1781                           ;dio.c: 146:    TRISE&=~(1<<index);
  1782  0105  3001               	movlw	1
  1783  0106  00D3               	movwf	??_dio_vid_set_pin_direction
  1784  0107  0A51               	incf	dio_vid_set_pin_direction@index,w
  1785  0108  290B               	goto	u1874
  1786  0109                     u1875:	
  1787  0109  1003               	clrc
  1788  010A  0DD3               	rlf	??_dio_vid_set_pin_direction,f
  1789  010B                     u1874:	
  1790  010B  3EFF               	addlw	-1
  1791  010C  1D03               	skipz
  1792  010D  2909               	goto	u1875
  1793  010E  0853               	movf	??_dio_vid_set_pin_direction,w
  1794  010F  3AFF               	xorlw	255
  1795  0110  00D4               	movwf	??_dio_vid_set_pin_direction+1
  1796  0111  0854               	movf	??_dio_vid_set_pin_direction+1,w
  1797  0112  1683               	bsf	3,5	;RP0=1, select bank1
  1798  0113  1303               	bcf	3,6	;RP1=0, select bank1
  1799  0114  0589               	andwf	9,f	;volatile
  1800  0115  292F               	goto	l159
  1801  0116                     l2320:	
  1802  0116  0855               	movf	dio_vid_set_pin_direction@portNumber,w
  1803  0117  00D3               	movwf	??_dio_vid_set_pin_direction
  1804  0118  01D4               	clrf	??_dio_vid_set_pin_direction+1
  1805                           
  1806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1807                           ; Switch size 1, requested type "simple"
  1808                           ; Number of cases is 1, Range of values is 0 to 0
  1809                           ; switch strategies available:
  1810                           ; Name         Instructions Cycles
  1811                           ; simple_byte            4     3 (average)
  1812                           ; direct_byte           11     8 (fixed)
  1813                           ; jumptable            260     6 (fixed)
  1814                           ;	Chosen strategy is simple_byte
  1815  0119  0854               	movf	??_dio_vid_set_pin_direction+1,w
  1816  011A  3A00               	xorlw	0	; case 0
  1817  011B  1903               	skipnz
  1818  011C  291E               	goto	l2804
  1819  011D  292F               	goto	l159
  1820  011E                     l2804:	
  1821                           
  1822                           ; Switch size 1, requested type "simple"
  1823                           ; Number of cases is 5, Range of values is 0 to 4
  1824                           ; switch strategies available:
  1825                           ; Name         Instructions Cycles
  1826                           ; simple_byte           16     9 (average)
  1827                           ; direct_byte           23     8 (fixed)
  1828                           ; jumptable            260     6 (fixed)
  1829                           ;	Chosen strategy is simple_byte
  1830  011E  0853               	movf	??_dio_vid_set_pin_direction,w
  1831  011F  3A00               	xorlw	0	; case 0
  1832  0120  1903               	skipnz
  1833  0121  283F               	goto	l2278
  1834  0122  3A01               	xorlw	1	; case 1
  1835  0123  1903               	skipnz
  1836  0124  286A               	goto	l2286
  1837  0125  3A03               	xorlw	3	; case 2
  1838  0126  1903               	skipnz
  1839  0127  2895               	goto	l2294
  1840  0128  3A01               	xorlw	1	; case 3
  1841  0129  1903               	skipnz
  1842  012A  28C0               	goto	l2302
  1843  012B  3A07               	xorlw	7	; case 4
  1844  012C  1903               	skipnz
  1845  012D  28EB               	goto	l2310
  1846  012E  292F               	goto	l159
  1847  012F                     l159:	
  1848  012F  0008               	return
  1849  0130                     __end_of_dio_vid_set_pin_direction:	
  1850                           
  1851                           	psect	text4
  1852  0F1E                     __ptext4:	
  1853 ;; *************** function _sch_vid_init *****************
  1854 ;; Defined at:
  1855 ;;		line 19 in file "scheduler.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  i               1   13[BANK0 ] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1869 ;;      Params:         0       0       0       0       0
  1870 ;;      Locals:         0       1       0       0       0
  1871 ;;      Temps:          0       1       0       0       0
  1872 ;;      Totals:         0       2       0       0       0
  1873 ;;Total ram usage:        2 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    5
  1876 ;; This function calls:
  1877 ;;		_sch_vid_delete_task
  1878 ;;		_timer_vid_init_0
  1879 ;;		_timer_vid_set_isr_0
  1880 ;; This function is called by:
  1881 ;;		_main
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           
  1886                           ;psect for function _sch_vid_init
  1887  0F1E                     _sch_vid_init:	
  1888  0F1E                     l2378:	
  1889                           ;incstack = 0
  1890                           ; Regs used in _sch_vid_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1891                           
  1892                           
  1893                           ;scheduler.c: 20:     u8 i;;scheduler.c: 21:     for (i = 0; i < 3; i++) {
  1894  0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  1895  0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  1896  0F20  01D8               	clrf	sch_vid_init@i
  1897  0F21                     l2384:	
  1898                           
  1899                           ;scheduler.c: 22:         sch_vid_delete_task(i);
  1900  0F21  0858               	movf	sch_vid_init@i,w
  1901  0F22  120A  118A  262F  120A  158A  	fcall	_sch_vid_delete_task
  1902  0F27                     l2386:	
  1903                           
  1904                           ;scheduler.c: 23:     }
  1905  0F27  3001               	movlw	1
  1906  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0F2A  00D7               	movwf	??_sch_vid_init
  1909  0F2B  0857               	movf	??_sch_vid_init,w
  1910  0F2C  07D8               	addwf	sch_vid_init@i,f
  1911  0F2D                     l2388:	
  1912  0F2D  3003               	movlw	3
  1913  0F2E  0258               	subwf	sch_vid_init@i,w
  1914  0F2F  1C03               	skipc
  1915  0F30  2F32               	goto	u1941
  1916  0F31  2F33               	goto	u1940
  1917  0F32                     u1941:	
  1918  0F32  2F21               	goto	l2384
  1919  0F33                     u1940:	
  1920  0F33                     l2390:	
  1921                           
  1922                           ;scheduler.c: 24:     timer_vid_set_isr_0(sch_update);
  1923  0F33  3001               	movlw	(low (fp__sch_update-i1fpbase))& (0+255)
  1924  0F34  120A  158A  2669  120A  158A  	fcall	_timer_vid_set_isr_0
  1925  0F39                     l2392:	
  1926                           
  1927                           ;scheduler.c: 25:     timer_vid_init_0(8, 1);
  1928  0F39  3008               	movlw	8
  1929  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0F3C  00D1               	movwf	timer_vid_init_0@prescaler
  1932  0F3D  3000               	movlw	0
  1933  0F3E  00D2               	movwf	timer_vid_init_0@prescaler+1
  1934  0F3F  01D3               	clrf	timer_vid_init_0@interruptEnable
  1935  0F40  0AD3               	incf	timer_vid_init_0@interruptEnable,f
  1936  0F41  120A  118A  2695  120A  158A  	fcall	_timer_vid_init_0
  1937  0F46                     l255:	
  1938  0F46  0008               	return
  1939  0F47                     __end_of_sch_vid_init:	
  1940                           
  1941                           	psect	text5
  1942  0E69                     __ptext5:	
  1943 ;; *************** function _timer_vid_set_isr_0 *****************
  1944 ;; Defined at:
  1945 ;;		line 36 in file "timer.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  callback_fun    1    wreg     PTR FTN()void 
  1948 ;;		 -> sch_update(1), 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  callback_fun    1    7[BANK0 ] PTR FTN()void 
  1951 ;;		 -> sch_update(1), 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1961 ;;      Params:         0       0       0       0       0
  1962 ;;      Locals:         0       1       0       0       0
  1963 ;;      Temps:          0       1       0       0       0
  1964 ;;      Totals:         0       2       0       0       0
  1965 ;;Total ram usage:        2 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    3
  1968 ;; This function calls:
  1969 ;;		Nothing
  1970 ;; This function is called by:
  1971 ;;		_sch_vid_init
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           
  1976                           ;psect for function _timer_vid_set_isr_0
  1977  0E69                     _timer_vid_set_isr_0:	
  1978                           
  1979                           ;incstack = 0
  1980                           ; Regs used in _timer_vid_set_isr_0: [wreg]
  1981                           ;timer_vid_set_isr_0@callback_function stored from wreg
  1982  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0E6B  00D2               	movwf	timer_vid_set_isr_0@callback_function
  1985  0E6C                     l2332:	
  1986                           
  1987                           ;timer.c: 37:     timer0_isr = callback_function;
  1988  0E6C  0852               	movf	timer_vid_set_isr_0@callback_function,w
  1989  0E6D  00D1               	movwf	??_timer_vid_set_isr_0
  1990  0E6E  0851               	movf	??_timer_vid_set_isr_0,w
  1991  0E6F  00FD               	movwf	_timer0_isr
  1992  0E70                     l325:	
  1993  0E70  0008               	return
  1994  0E71                     __end_of_timer_vid_set_isr_0:	
  1995                           
  1996                           	psect	text6
  1997  0695                     __ptext6:	
  1998 ;; *************** function _timer_vid_init_0 *****************
  1999 ;; Defined at:
  2000 ;;		line 48 in file "timer.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  prescaler       2    6[BANK0 ] unsigned short 
  2003 ;;  interruptEna    1    8[BANK0 ] unsigned char 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2015 ;;      Params:         0       3       0       0       0
  2016 ;;      Locals:         0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0
  2018 ;;      Totals:         0       3       0       0       0
  2019 ;;Total ram usage:        3 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    3
  2022 ;; This function calls:
  2023 ;;		Nothing
  2024 ;; This function is called by:
  2025 ;;		_sch_vid_init
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           
  2030                           ;psect for function _timer_vid_init_0
  2031  0695                     _timer_vid_init_0:	
  2032  0695                     l2334:	
  2033                           ;incstack = 0
  2034                           ; Regs used in _timer_vid_init_0: [wreg-fsr0h+status,2+status,0]
  2035                           
  2036                           
  2037                           ;timer.c: 51:     T0CS = 0;
  2038  0695  1683               	bsf	3,5	;RP0=1, select bank1
  2039  0696  1303               	bcf	3,6	;RP1=0, select bank1
  2040  0697  1281               	bcf	1,5	;volatile
  2041                           
  2042                           ;timer.c: 54:     PSA = 0;
  2043  0698  1181               	bcf	1,3	;volatile
  2044                           
  2045                           ;timer.c: 57:     switch (prescaler) {
  2046  0699  2ECA               	goto	l2338
  2047  069A                     l335:	
  2048                           ;timer.c: 58:         case 2:
  2049                           
  2050                           
  2051                           ;timer.c: 59:             PS0 = 0;
  2052  069A  1683               	bsf	3,5	;RP0=1, select bank1
  2053  069B  1303               	bcf	3,6	;RP1=0, select bank1
  2054  069C  1001               	bcf	1,0	;volatile
  2055                           
  2056                           ;timer.c: 60:             PS1 = 0;
  2057  069D  1081               	bcf	1,1	;volatile
  2058                           
  2059                           ;timer.c: 61:             PS2 = 0;
  2060  069E  1101               	bcf	1,2	;volatile
  2061                           
  2062                           ;timer.c: 62:             break;
  2063  069F  2EF0               	goto	l2340
  2064  06A0                     l337:	
  2065                           ;timer.c: 63:         case 4:
  2066                           
  2067                           
  2068                           ;timer.c: 64:             PS0 = 1;
  2069  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  2070  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  2071  06A2  1401               	bsf	1,0	;volatile
  2072                           
  2073                           ;timer.c: 65:             PS1 = 0;
  2074  06A3  1081               	bcf	1,1	;volatile
  2075                           
  2076                           ;timer.c: 66:             PS2 = 0;
  2077  06A4  1101               	bcf	1,2	;volatile
  2078                           
  2079                           ;timer.c: 67:             break;
  2080  06A5  2EF0               	goto	l2340
  2081  06A6                     l338:	
  2082                           ;timer.c: 68:         case 8:
  2083                           
  2084                           
  2085                           ;timer.c: 69:             PS0 = 0;
  2086  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  2087  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  2088  06A8  1001               	bcf	1,0	;volatile
  2089                           
  2090                           ;timer.c: 70:             PS1 = 1;
  2091  06A9  1481               	bsf	1,1	;volatile
  2092                           
  2093                           ;timer.c: 71:             PS2 = 0;
  2094  06AA  1101               	bcf	1,2	;volatile
  2095                           
  2096                           ;timer.c: 72:             break;
  2097  06AB  2EF0               	goto	l2340
  2098  06AC                     l339:	
  2099                           ;timer.c: 73:         case 16:
  2100                           
  2101                           
  2102                           ;timer.c: 74:             PS0 = 1;
  2103  06AC  1683               	bsf	3,5	;RP0=1, select bank1
  2104  06AD  1303               	bcf	3,6	;RP1=0, select bank1
  2105  06AE  1401               	bsf	1,0	;volatile
  2106                           
  2107                           ;timer.c: 75:             PS1 = 1;
  2108  06AF  1481               	bsf	1,1	;volatile
  2109                           
  2110                           ;timer.c: 76:             PS2 = 0;
  2111  06B0  1101               	bcf	1,2	;volatile
  2112                           
  2113                           ;timer.c: 77:             break;
  2114  06B1  2EF0               	goto	l2340
  2115  06B2                     l340:	
  2116                           ;timer.c: 78:         case 32:
  2117                           
  2118                           
  2119                           ;timer.c: 79:             PS0 = 0;
  2120  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  2121  06B3  1303               	bcf	3,6	;RP1=0, select bank1
  2122  06B4  1001               	bcf	1,0	;volatile
  2123                           
  2124                           ;timer.c: 80:             PS1 = 0;
  2125  06B5  1081               	bcf	1,1	;volatile
  2126                           
  2127                           ;timer.c: 81:             PS2 = 1;
  2128  06B6  1501               	bsf	1,2	;volatile
  2129                           
  2130                           ;timer.c: 82:             break;
  2131  06B7  2EF0               	goto	l2340
  2132  06B8                     l341:	
  2133                           ;timer.c: 83:         case 64:
  2134                           
  2135                           
  2136                           ;timer.c: 84:             PS0 = 1;
  2137  06B8  1683               	bsf	3,5	;RP0=1, select bank1
  2138  06B9  1303               	bcf	3,6	;RP1=0, select bank1
  2139  06BA  1401               	bsf	1,0	;volatile
  2140                           
  2141                           ;timer.c: 85:             PS1 = 0;
  2142  06BB  1081               	bcf	1,1	;volatile
  2143                           
  2144                           ;timer.c: 86:             PS2 = 1;
  2145  06BC  1501               	bsf	1,2	;volatile
  2146                           
  2147                           ;timer.c: 87:             break;
  2148  06BD  2EF0               	goto	l2340
  2149  06BE                     l342:	
  2150                           ;timer.c: 88:         case 128:
  2151                           
  2152                           
  2153                           ;timer.c: 89:             PS0 = 0;
  2154  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  2155  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  2156  06C0  1001               	bcf	1,0	;volatile
  2157                           
  2158                           ;timer.c: 90:             PS1 = 1;
  2159  06C1  1481               	bsf	1,1	;volatile
  2160                           
  2161                           ;timer.c: 91:             PS2 = 1;
  2162  06C2  1501               	bsf	1,2	;volatile
  2163                           
  2164                           ;timer.c: 92:             break;
  2165  06C3  2EF0               	goto	l2340
  2166  06C4                     l343:	
  2167                           ;timer.c: 93:         case 256:
  2168                           
  2169                           
  2170                           ;timer.c: 94:             PS0 = 1;
  2171  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  2172  06C5  1303               	bcf	3,6	;RP1=0, select bank1
  2173  06C6  1401               	bsf	1,0	;volatile
  2174                           
  2175                           ;timer.c: 95:             PS1 = 1;
  2176  06C7  1481               	bsf	1,1	;volatile
  2177                           
  2178                           ;timer.c: 96:             PS2 = 1;
  2179  06C8  1501               	bsf	1,2	;volatile
  2180                           
  2181                           ;timer.c: 97:             break;
  2182  06C9  2EF0               	goto	l2340
  2183  06CA                     l2338:	
  2184                           
  2185                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  2186                           ; Switch size 1, requested type "simple"
  2187                           ; Number of cases is 2, Range of values is 0 to 1
  2188                           ; switch strategies available:
  2189                           ; Name         Instructions Cycles
  2190                           ; simple_byte            7     4 (average)
  2191                           ; direct_byte           14     8 (fixed)
  2192                           ; jumptable            260     6 (fixed)
  2193                           ;	Chosen strategy is simple_byte
  2194  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  2195  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  2196  06CC  0852               	movf	timer_vid_init_0@prescaler+1,w
  2197  06CD  3A00               	xorlw	0	; case 0
  2198  06CE  1903               	skipnz
  2199  06CF  2ED4               	goto	l2806
  2200  06D0  3A01               	xorlw	1	; case 1
  2201  06D1  1903               	skipnz
  2202  06D2  2EEB               	goto	l2808
  2203  06D3  2EF0               	goto	l2340
  2204  06D4                     l2806:	
  2205                           
  2206                           ; Switch size 1, requested type "simple"
  2207                           ; Number of cases is 7, Range of values is 2 to 128
  2208                           ; switch strategies available:
  2209                           ; Name         Instructions Cycles
  2210                           ; simple_byte           22    12 (average)
  2211                           ; jumptable            263     9 (fixed)
  2212                           ;	Chosen strategy is simple_byte
  2213  06D4  0851               	movf	timer_vid_init_0@prescaler,w
  2214  06D5  3A02               	xorlw	2	; case 2
  2215  06D6  1903               	skipnz
  2216  06D7  2E9A               	goto	l335
  2217  06D8  3A06               	xorlw	6	; case 4
  2218  06D9  1903               	skipnz
  2219  06DA  2EA0               	goto	l337
  2220  06DB  3A0C               	xorlw	12	; case 8
  2221  06DC  1903               	skipnz
  2222  06DD  2EA6               	goto	l338
  2223  06DE  3A18               	xorlw	24	; case 16
  2224  06DF  1903               	skipnz
  2225  06E0  2EAC               	goto	l339
  2226  06E1  3A30               	xorlw	48	; case 32
  2227  06E2  1903               	skipnz
  2228  06E3  2EB2               	goto	l340
  2229  06E4  3A60               	xorlw	96	; case 64
  2230  06E5  1903               	skipnz
  2231  06E6  2EB8               	goto	l341
  2232  06E7  3AC0               	xorlw	192	; case 128
  2233  06E8  1903               	skipnz
  2234  06E9  2EBE               	goto	l342
  2235  06EA  2EF0               	goto	l2340
  2236  06EB                     l2808:	
  2237                           
  2238                           ; Switch size 1, requested type "simple"
  2239                           ; Number of cases is 1, Range of values is 0 to 0
  2240                           ; switch strategies available:
  2241                           ; Name         Instructions Cycles
  2242                           ; simple_byte            4     3 (average)
  2243                           ; direct_byte           11     8 (fixed)
  2244                           ; jumptable            260     6 (fixed)
  2245                           ;	Chosen strategy is simple_byte
  2246  06EB  0851               	movf	timer_vid_init_0@prescaler,w
  2247  06EC  3A00               	xorlw	0	; case 0
  2248  06ED  1903               	skipnz
  2249  06EE  2EC4               	goto	l343
  2250  06EF  2EF0               	goto	l2340
  2251  06F0                     l2340:	
  2252                           
  2253                           ;timer.c: 100:     if (interruptEnable) {
  2254  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  2255  06F1  0853               	movf	timer_vid_init_0@interruptEnable,w
  2256  06F2  1903               	btfsc	3,2
  2257  06F3  2EF5               	goto	u1891
  2258  06F4  2EF6               	goto	u1890
  2259  06F5                     u1891:	
  2260  06F5  2EF9               	goto	l345
  2261  06F6                     u1890:	
  2262  06F6                     l2342:	
  2263                           
  2264                           ;timer.c: 102:         PEIE = 1;
  2265  06F6  170B               	bsf	11,6	;volatile
  2266                           
  2267                           ;timer.c: 105:         GIE = 1;
  2268  06F7  178B               	bsf	11,7	;volatile
  2269                           
  2270                           ;timer.c: 108:         TMR0IE = 1;
  2271  06F8  168B               	bsf	11,5	;volatile
  2272  06F9                     l345:	
  2273  06F9  0008               	return
  2274  06FA                     __end_of_timer_vid_init_0:	
  2275                           
  2276                           	psect	text7
  2277  0427                     __ptext7:	
  2278 ;; *************** function _sch_vid_dispatch_tasks *****************
  2279 ;; Defined at:
  2280 ;;		line 73 in file "scheduler.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;		None
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  index           1   26[BANK0 ] unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2294 ;;      Params:         0       0       0       0       0
  2295 ;;      Locals:         0       1       0       0       0
  2296 ;;      Temps:          0       5       0       0       0
  2297 ;;      Totals:         0       6       0       0       0
  2298 ;;Total ram usage:        6 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:    7
  2301 ;; This function calls:
  2302 ;;		Absolute function
  2303 ;;		___bmul
  2304 ;;		_checkButtons
  2305 ;;		_sch_vid_delete_task
  2306 ;;		_showNumber25
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function _sch_vid_dispatch_tasks
  2314  0427                     _sch_vid_dispatch_tasks:	
  2315  0427                     l2410:	
  2316                           ;incstack = 0
  2317                           ; Regs used in _sch_vid_dispatch_tasks: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2318                           
  2319                           
  2320                           ;scheduler.c: 74:     u8 index;;scheduler.c: 76:     for (index = 0; index < 3; index++)
      +                           {
  2321  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2322  0428  1303               	bcf	3,6	;RP1=0, select bank0
  2323  0429  01E5               	clrf	sch_vid_dispatch_tasks@index
  2324  042A                     l2416:	
  2325                           
  2326                           ;scheduler.c: 77:         if (sch_tasks[index].runMe > 0) {
  2327  042A  300D               	movlw	13
  2328  042B  00E0               	movwf	??_sch_vid_dispatch_tasks
  2329  042C  0860               	movf	??_sch_vid_dispatch_tasks,w
  2330  042D  00D1               	movwf	___bmul@multiplicand
  2331  042E  0865               	movf	sch_vid_dispatch_tasks@index,w
  2332  042F  120A  158A  2686  120A  118A  	fcall	___bmul
  2333  0434  3E29               	addlw	(low ((_sch_tasks| 0+9)))& (0+255)
  2334  0435  0084               	movwf	4
  2335  0436  1383               	bcf	3,7	;select IRP bank0
  2336  0437  0800               	movf	0,w
  2337  0438  1283               	bcf	3,5	;RP0=0, select bank0
  2338  0439  1303               	bcf	3,6	;RP1=0, select bank0
  2339  043A  00E1               	movwf	??_sch_vid_dispatch_tasks+1
  2340  043B  0A84               	incf	4,f
  2341  043C  0800               	movf	0,w
  2342  043D  00E2               	movwf	??_sch_vid_dispatch_tasks+2
  2343  043E  0A84               	incf	4,f
  2344  043F  0800               	movf	0,w
  2345  0440  00E3               	movwf	??_sch_vid_dispatch_tasks+3
  2346  0441  0A84               	incf	4,f
  2347  0442  0800               	movf	0,w
  2348  0443  00E4               	movwf	??_sch_vid_dispatch_tasks+4
  2349  0444  0864               	movf	??_sch_vid_dispatch_tasks+4,w
  2350  0445  0463               	iorwf	??_sch_vid_dispatch_tasks+3,w
  2351  0446  0462               	iorwf	??_sch_vid_dispatch_tasks+2,w
  2352  0447  0461               	iorwf	??_sch_vid_dispatch_tasks+1,w
  2353  0448  1903               	skipnz
  2354  0449  2C4B               	goto	u1981
  2355  044A  2C4C               	goto	u1980
  2356  044B                     u1981:	
  2357  044B  2CAB               	goto	l2426
  2358  044C                     u1980:	
  2359  044C                     l2418:	
  2360                           
  2361                           ;scheduler.c: 78:             (*sch_tasks[index].taskFunction)();
  2362  044C  300D               	movlw	13
  2363  044D  00E0               	movwf	??_sch_vid_dispatch_tasks
  2364  044E  0860               	movf	??_sch_vid_dispatch_tasks,w
  2365  044F  00D1               	movwf	___bmul@multiplicand
  2366  0450  0865               	movf	sch_vid_dispatch_tasks@index,w
  2367  0451  120A  158A  2686  120A  118A  	fcall	___bmul
  2368  0456  3E20               	addlw	(low (_sch_tasks| 0))& (0+255)
  2369  0457  0084               	movwf	4
  2370  0458  1383               	bcf	3,7	;select IRP bank0
  2371  0459  0800               	movf	0,w
  2372  045A  120A  118A  2025  120A  118A  	fcall	fptable
  2373  045F                     l2420:	
  2374                           
  2375                           ;scheduler.c: 79:             sch_tasks[index].runMe -= 1;
  2376  045F  300D               	movlw	13
  2377  0460  1283               	bcf	3,5	;RP0=0, select bank0
  2378  0461  1303               	bcf	3,6	;RP1=0, select bank0
  2379  0462  00E0               	movwf	??_sch_vid_dispatch_tasks
  2380  0463  0860               	movf	??_sch_vid_dispatch_tasks,w
  2381  0464  00D1               	movwf	___bmul@multiplicand
  2382  0465  0865               	movf	sch_vid_dispatch_tasks@index,w
  2383  0466  120A  158A  2686  120A  118A  	fcall	___bmul
  2384  046B  3E29               	addlw	(low ((_sch_tasks| 0+9)))& (0+255)
  2385  046C  0084               	movwf	4
  2386  046D  3001               	movlw	1
  2387  046E  1383               	bcf	3,7	;select IRP bank0
  2388  046F  0280               	subwf	0,f
  2389  0470  0A84               	incf	4,f
  2390  0471  3000               	movlw	0
  2391  0472  1C03               	skipc
  2392  0473  3001               	movlw	1
  2393  0474  0280               	subwf	0,f
  2394  0475  0A84               	incf	4,f
  2395  0476  3000               	movlw	0
  2396  0477  1C03               	skipc
  2397  0478  3001               	movlw	1
  2398  0479  0280               	subwf	0,f
  2399  047A  0A84               	incf	4,f
  2400  047B  3000               	movlw	0
  2401  047C  1C03               	skipc
  2402  047D  3001               	movlw	1
  2403  047E  0280               	subwf	0,f
  2404  047F  3003               	movlw	3
  2405  0480  0284               	subwf	4,f
  2406  0481                     l2422:	
  2407                           
  2408                           ;scheduler.c: 82:             if (sch_tasks[index].period == 0) {
  2409  0481  300D               	movlw	13
  2410  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0483  1303               	bcf	3,6	;RP1=0, select bank0
  2412  0484  00E0               	movwf	??_sch_vid_dispatch_tasks
  2413  0485  0860               	movf	??_sch_vid_dispatch_tasks,w
  2414  0486  00D1               	movwf	___bmul@multiplicand
  2415  0487  0865               	movf	sch_vid_dispatch_tasks@index,w
  2416  0488  120A  158A  2686  120A  118A  	fcall	___bmul
  2417  048D  3E25               	addlw	(low ((_sch_tasks| 0+5)))& (0+255)
  2418  048E  0084               	movwf	4
  2419  048F  1383               	bcf	3,7	;select IRP bank0
  2420  0490  0800               	movf	0,w
  2421  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2423  0493  00E1               	movwf	??_sch_vid_dispatch_tasks+1
  2424  0494  0A84               	incf	4,f
  2425  0495  0800               	movf	0,w
  2426  0496  00E2               	movwf	??_sch_vid_dispatch_tasks+2
  2427  0497  0A84               	incf	4,f
  2428  0498  0800               	movf	0,w
  2429  0499  00E3               	movwf	??_sch_vid_dispatch_tasks+3
  2430  049A  0A84               	incf	4,f
  2431  049B  0800               	movf	0,w
  2432  049C  00E4               	movwf	??_sch_vid_dispatch_tasks+4
  2433  049D  0864               	movf	??_sch_vid_dispatch_tasks+4,w
  2434  049E  0463               	iorwf	??_sch_vid_dispatch_tasks+3,w
  2435  049F  0462               	iorwf	??_sch_vid_dispatch_tasks+2,w
  2436  04A0  0461               	iorwf	??_sch_vid_dispatch_tasks+1,w
  2437  04A1  1D03               	skipz
  2438  04A2  2CA4               	goto	u1991
  2439  04A3  2CA5               	goto	u1990
  2440  04A4                     u1991:	
  2441  04A4  2CAB               	goto	l2426
  2442  04A5                     u1990:	
  2443  04A5                     l2424:	
  2444                           
  2445                           ;scheduler.c: 83:                 sch_vid_delete_task(index);
  2446  04A5  0865               	movf	sch_vid_dispatch_tasks@index,w
  2447  04A6  120A  118A  262F  120A  118A  	fcall	_sch_vid_delete_task
  2448  04AB                     l2426:	
  2449                           
  2450                           ;scheduler.c: 86:     }
  2451  04AB  3001               	movlw	1
  2452  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2453  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2454  04AE  00E0               	movwf	??_sch_vid_dispatch_tasks
  2455  04AF  0860               	movf	??_sch_vid_dispatch_tasks,w
  2456  04B0  07E5               	addwf	sch_vid_dispatch_tasks@index,f
  2457  04B1                     l2428:	
  2458  04B1  3003               	movlw	3
  2459  04B2  0265               	subwf	sch_vid_dispatch_tasks@index,w
  2460  04B3  1C03               	skipc
  2461  04B4  2CB6               	goto	u2001
  2462  04B5  2CB7               	goto	u2000
  2463  04B6                     u2001:	
  2464  04B6  2C2A               	goto	l2416
  2465  04B7                     u2000:	
  2466  04B7                     l280:	
  2467  04B7  0008               	return
  2468  04B8                     __end_of_sch_vid_dispatch_tasks:	
  2469                           
  2470                           	psect	text8
  2471  02E0                     __ptext8:	
  2472 ;; *************** function _checkButtons *****************
  2473 ;; Defined at:
  2474 ;;		line 41 in file "main.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2488 ;;      Params:         0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0
  2490 ;;      Temps:          0       2       0       0       0
  2491 ;;      Totals:         0       2       0       0       0
  2492 ;;Total ram usage:        2 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    5
  2495 ;; This function calls:
  2496 ;;		_dio_u8_read_pin_value
  2497 ;;		_eeprom_vid_write
  2498 ;; This function is called by:
  2499 ;;		_main
  2500 ;;		_sch_vid_dispatch_tasks
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           
  2505                           ;psect for function _checkButtons
  2506  02E0                     _checkButtons:	
  2507  02E0                     l2224:	
  2508                           ;incstack = 0
  2509                           ; Regs used in _checkButtons: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2510                           
  2511                           
  2512                           ;main.c: 42:     if (dio_u8_read_pin_value(B, 3) == 0 && buttonPressedFlag == 0) {
  2513  02E0  3003               	movlw	3
  2514  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2515  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2516  02E3  00D8               	movwf	??_checkButtons
  2517  02E4  0858               	movf	??_checkButtons,w
  2518  02E5  00D4               	movwf	dio_u8_read_pin_value@index
  2519  02E6  3001               	movlw	1
  2520  02E7  120A  158A  26B7  120A  118A  	fcall	_dio_u8_read_pin_value
  2521  02EC  3A00               	xorlw	0
  2522  02ED  1D03               	skipz
  2523  02EE  2AF0               	goto	u1601
  2524  02EF  2AF1               	goto	u1600
  2525  02F0                     u1601:	
  2526  02F0  2B24               	goto	l2236
  2527  02F1                     u1600:	
  2528  02F1                     l2226:	
  2529  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2530  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2531  02F3  0849               	movf	_buttonPressedFlag,w	;volatile
  2532  02F4  1D03               	btfss	3,2
  2533  02F5  2AF7               	goto	u1611
  2534  02F6  2AF8               	goto	u1610
  2535  02F7                     u1611:	
  2536  02F7  2B24               	goto	l2236
  2537  02F8                     u1610:	
  2538  02F8                     l2228:	
  2539                           
  2540                           ;main.c: 43:         buttonPressedFlag = 1;
  2541  02F8  3001               	movlw	1
  2542  02F9  00D8               	movwf	??_checkButtons
  2543  02FA  0858               	movf	??_checkButtons,w
  2544  02FB  00C9               	movwf	_buttonPressedFlag	;volatile
  2545  02FC                     l2230:	
  2546                           
  2547                           ;main.c: 44:         if (setTemperature + 5 < 80) {
  2548  02FC  084A               	movf	_setTemperature,w	;volatile
  2549  02FD  3E05               	addlw	5
  2550  02FE  00D8               	movwf	??_checkButtons
  2551  02FF  3000               	movlw	0
  2552  0300  1803               	skipnc
  2553  0301  3001               	movlw	1
  2554  0302  00D9               	movwf	??_checkButtons+1
  2555  0303  0859               	movf	??_checkButtons+1,w
  2556  0304  3A80               	xorlw	128
  2557  0305  00FF               	movwf	btemp+1
  2558  0306  3080               	movlw	128
  2559  0307  027F               	subwf	btemp+1,w
  2560  0308  1D03               	skipz
  2561  0309  2B0C               	goto	u1625
  2562  030A  3050               	movlw	80
  2563  030B  0258               	subwf	??_checkButtons,w
  2564  030C                     u1625:	
  2565  030C  1803               	skipnc
  2566  030D  2B0F               	goto	u1621
  2567  030E  2B10               	goto	u1620
  2568  030F                     u1621:	
  2569  030F  2B65               	goto	l2248
  2570  0310                     u1620:	
  2571  0310                     l2232:	
  2572                           
  2573                           ;main.c: 45:             eeprom_vid_write(0, setTemperature + 5);
  2574  0310  1283               	bcf	3,5	;RP0=0, select bank0
  2575  0311  1303               	bcf	3,6	;RP1=0, select bank0
  2576  0312  084A               	movf	_setTemperature,w	;volatile
  2577  0313  3E05               	addlw	5
  2578  0314  00D8               	movwf	??_checkButtons
  2579  0315  0858               	movf	??_checkButtons,w
  2580  0316  00D1               	movwf	eeprom_vid_write@data
  2581  0317  3000               	movlw	0
  2582  0318  120A  158A  2774  120A  118A  	fcall	_eeprom_vid_write
  2583  031D                     l2234:	
  2584                           
  2585                           ;main.c: 46:             setTemperature += 5;
  2586  031D  3005               	movlw	5
  2587  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2588  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2589  0320  00D8               	movwf	??_checkButtons
  2590  0321  0858               	movf	??_checkButtons,w
  2591  0322  07CA               	addwf	_setTemperature,f	;volatile
  2592  0323  2B65               	goto	l2248
  2593  0324                     l2236:	
  2594  0324  3004               	movlw	4
  2595  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2596  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2597  0327  00D8               	movwf	??_checkButtons
  2598  0328  0858               	movf	??_checkButtons,w
  2599  0329  00D4               	movwf	dio_u8_read_pin_value@index
  2600  032A  3001               	movlw	1
  2601  032B  120A  158A  26B7  120A  118A  	fcall	_dio_u8_read_pin_value
  2602  0330  3A00               	xorlw	0
  2603  0331  1D03               	skipz
  2604  0332  2B34               	goto	u1631
  2605  0333  2B35               	goto	u1630
  2606  0334                     u1631:	
  2607  0334  2B65               	goto	l2248
  2608  0335                     u1630:	
  2609  0335                     l2238:	
  2610  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2612  0337  0849               	movf	_buttonPressedFlag,w	;volatile
  2613  0338  1D03               	btfss	3,2
  2614  0339  2B3B               	goto	u1641
  2615  033A  2B3C               	goto	u1640
  2616  033B                     u1641:	
  2617  033B  2B65               	goto	l2248
  2618  033C                     u1640:	
  2619  033C                     l2240:	
  2620                           
  2621                           ;main.c: 49:         buttonPressedFlag = 1;
  2622  033C  3001               	movlw	1
  2623  033D  00D8               	movwf	??_checkButtons
  2624  033E  0858               	movf	??_checkButtons,w
  2625  033F  00C9               	movwf	_buttonPressedFlag	;volatile
  2626  0340                     l2242:	
  2627                           
  2628                           ;main.c: 50:         if (setTemperature - 5 > 30) {
  2629  0340  084A               	movf	_setTemperature,w	;volatile
  2630  0341  3EFB               	addlw	251
  2631  0342  00D8               	movwf	??_checkButtons
  2632  0343  30FF               	movlw	255
  2633  0344  1803               	skipnc
  2634  0345  3000               	movlw	0
  2635  0346  00D9               	movwf	??_checkButtons+1
  2636  0347  0859               	movf	??_checkButtons+1,w
  2637  0348  3A80               	xorlw	128
  2638  0349  00FF               	movwf	btemp+1
  2639  034A  3080               	movlw	128
  2640  034B  027F               	subwf	btemp+1,w
  2641  034C  1D03               	skipz
  2642  034D  2B50               	goto	u1655
  2643  034E  301F               	movlw	31
  2644  034F  0258               	subwf	??_checkButtons,w
  2645  0350                     u1655:	
  2646  0350  1C03               	skipc
  2647  0351  2B53               	goto	u1651
  2648  0352  2B54               	goto	u1650
  2649  0353                     u1651:	
  2650  0353  2B65               	goto	l2248
  2651  0354                     u1650:	
  2652  0354                     l2244:	
  2653                           
  2654                           ;main.c: 51:             eeprom_vid_write(0, setTemperature - 5);
  2655  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2657  0356  084A               	movf	_setTemperature,w	;volatile
  2658  0357  3EFB               	addlw	251
  2659  0358  00D8               	movwf	??_checkButtons
  2660  0359  0858               	movf	??_checkButtons,w
  2661  035A  00D1               	movwf	eeprom_vid_write@data
  2662  035B  3000               	movlw	0
  2663  035C  120A  158A  2774  120A  118A  	fcall	_eeprom_vid_write
  2664  0361                     l2246:	
  2665                           
  2666                           ;main.c: 52:             setTemperature -= 5;
  2667  0361  3005               	movlw	5
  2668  0362  1283               	bcf	3,5	;RP0=0, select bank0
  2669  0363  1303               	bcf	3,6	;RP1=0, select bank0
  2670  0364  02CA               	subwf	_setTemperature,f	;volatile
  2671  0365                     l2248:	
  2672                           
  2673                           ;main.c: 56:     if (dio_u8_read_pin_value(B, 3) && dio_u8_read_pin_value(B, 4)) {
  2674  0365  3003               	movlw	3
  2675  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0368  00D8               	movwf	??_checkButtons
  2678  0369  0858               	movf	??_checkButtons,w
  2679  036A  00D4               	movwf	dio_u8_read_pin_value@index
  2680  036B  3001               	movlw	1
  2681  036C  120A  158A  26B7  120A  118A  	fcall	_dio_u8_read_pin_value
  2682  0371  3A00               	xorlw	0
  2683  0372  1903               	skipnz
  2684  0373  2B75               	goto	u1661
  2685  0374  2B76               	goto	u1660
  2686  0375                     u1661:	
  2687  0375  2B8A               	goto	l45
  2688  0376                     u1660:	
  2689  0376                     l2250:	
  2690  0376  3004               	movlw	4
  2691  0377  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0378  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0379  00D8               	movwf	??_checkButtons
  2694  037A  0858               	movf	??_checkButtons,w
  2695  037B  00D4               	movwf	dio_u8_read_pin_value@index
  2696  037C  3001               	movlw	1
  2697  037D  120A  158A  26B7  120A  118A  	fcall	_dio_u8_read_pin_value
  2698  0382  3A00               	xorlw	0
  2699  0383  1903               	skipnz
  2700  0384  2B86               	goto	u1671
  2701  0385  2B87               	goto	u1670
  2702  0386                     u1671:	
  2703  0386  2B8A               	goto	l45
  2704  0387                     u1670:	
  2705  0387                     l2252:	
  2706                           
  2707                           ;main.c: 57:         buttonPressedFlag = 0;
  2708  0387  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0388  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0389  01C9               	clrf	_buttonPressedFlag	;volatile
  2711  038A                     l45:	
  2712  038A  0008               	return
  2713  038B                     __end_of_checkButtons:	
  2714                           
  2715                           	psect	text9
  2716  07ED                     __ptext9:	
  2717 ;; *************** function _showNumber25 *****************
  2718 ;; Defined at:
  2719 ;;		line 37 in file "main.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2733 ;;      Params:         0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0
  2735 ;;      Temps:          0       0       0       0       0
  2736 ;;      Totals:         0       0       0       0       0
  2737 ;;Total ram usage:        0 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    6
  2740 ;; This function calls:
  2741 ;;		_ssd_set_state
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;;		_sch_vid_dispatch_tasks
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           
  2749                           ;psect for function _showNumber25
  2750  07ED                     _showNumber25:	
  2751  07ED                     l2222:	
  2752                           ;incstack = 0
  2753                           ; Regs used in _showNumber25: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2754                           
  2755                           
  2756                           ;main.c: 38:     ssd_set_state(setTemperature);
  2757  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  2758  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  2759  07EF  084A               	movf	_setTemperature,w	;volatile
  2760  07F0  120A  118A  238B  120A  118A  	fcall	_ssd_set_state
  2761  07F5                     l36:	
  2762  07F5  0008               	return
  2763  07F6                     __end_of_showNumber25:	
  2764                           
  2765                           	psect	text10
  2766  038B                     __ptext10:	
  2767 ;; *************** function _ssd_set_state *****************
  2768 ;; Defined at:
  2769 ;;		line 72 in file "ssd.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  state           1    wreg     unsigned char 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  state           1   20[BANK0 ] unsigned char 
  2774 ;;  tens            1   19[BANK0 ] unsigned char 
  2775 ;;  ones            1   18[BANK0 ] unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       0       0       0       0
  2786 ;;      Locals:         0       3       0       0       0
  2787 ;;      Temps:          0       3       0       0       0
  2788 ;;      Totals:         0       6       0       0       0
  2789 ;;Total ram usage:        6 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    5
  2792 ;; This function calls:
  2793 ;;		___awdiv
  2794 ;;		___awmod
  2795 ;;		_dio_u8_read_pin_value
  2796 ;;		_dio_vid_set_pin_value
  2797 ;;		_dio_vid_set_port_value
  2798 ;;		_ssd_get_number
  2799 ;; This function is called by:
  2800 ;;		_showNumber25
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           
  2805                           ;psect for function _ssd_set_state
  2806  038B                     _ssd_set_state:	
  2807                           
  2808                           ;incstack = 0
  2809                           ; Regs used in _ssd_set_state: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2810                           ;ssd_set_state@state stored from wreg
  2811  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2812  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2813  038D  00DF               	movwf	ssd_set_state@state
  2814  038E                     l2180:	
  2815                           
  2816                           ;ssd.c: 73:     u8 ones = state % 10;
  2817  038E  300A               	movlw	10
  2818  038F  00D1               	movwf	___awmod@divisor
  2819  0390  3000               	movlw	0
  2820  0391  00D2               	movwf	___awmod@divisor+1
  2821  0392  085F               	movf	ssd_set_state@state,w
  2822  0393  00DA               	movwf	??_ssd_set_state
  2823  0394  01DB               	clrf	??_ssd_set_state+1
  2824  0395  085A               	movf	??_ssd_set_state,w
  2825  0396  00D3               	movwf	___awmod@dividend
  2826  0397  085B               	movf	??_ssd_set_state+1,w
  2827  0398  00D4               	movwf	___awmod@dividend+1
  2828  0399  120A  118A  275B  120A  118A  	fcall	___awmod
  2829  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2830  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2831  03A0  0851               	movf	?___awmod,w
  2832  03A1  00DC               	movwf	??_ssd_set_state+2
  2833  03A2  085C               	movf	??_ssd_set_state+2,w
  2834  03A3  00DD               	movwf	ssd_set_state@ones
  2835                           
  2836                           ;ssd.c: 74:     u8 tens = state / 10;
  2837  03A4  300A               	movlw	10
  2838  03A5  00D1               	movwf	___awdiv@divisor
  2839  03A6  3000               	movlw	0
  2840  03A7  00D2               	movwf	___awdiv@divisor+1
  2841  03A8  085F               	movf	ssd_set_state@state,w
  2842  03A9  00DA               	movwf	??_ssd_set_state
  2843  03AA  01DB               	clrf	??_ssd_set_state+1
  2844  03AB  085A               	movf	??_ssd_set_state,w
  2845  03AC  00D3               	movwf	___awdiv@dividend
  2846  03AD  085B               	movf	??_ssd_set_state+1,w
  2847  03AE  00D4               	movwf	___awdiv@dividend+1
  2848  03AF  120A  118A  25C6  120A  118A  	fcall	___awdiv
  2849  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2850  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2851  03B6  0851               	movf	?___awdiv,w
  2852  03B7  00DC               	movwf	??_ssd_set_state+2
  2853  03B8  085C               	movf	??_ssd_set_state+2,w
  2854  03B9  00DE               	movwf	ssd_set_state@tens
  2855  03BA                     l2182:	
  2856                           
  2857                           ;ssd.c: 75:     if (dio_u8_read_pin_value(A, 3)) {
  2858  03BA  3003               	movlw	3
  2859  03BB  00DA               	movwf	??_ssd_set_state
  2860  03BC  085A               	movf	??_ssd_set_state,w
  2861  03BD  00D4               	movwf	dio_u8_read_pin_value@index
  2862  03BE  3000               	movlw	0
  2863  03BF  120A  158A  26B7  120A  118A  	fcall	_dio_u8_read_pin_value
  2864  03C4  3A00               	xorlw	0
  2865  03C5  1903               	skipnz
  2866  03C6  2BC8               	goto	u1541
  2867  03C7  2BC9               	goto	u1540
  2868  03C8                     u1541:	
  2869  03C8  2BF8               	goto	l2186
  2870  03C9                     u1540:	
  2871  03C9                     l2184:	
  2872                           
  2873                           ;ssd.c: 76:         dio_vid_set_pin_value(A, 2, 1);
  2874  03C9  3002               	movlw	2
  2875  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2876  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2877  03CC  00DA               	movwf	??_ssd_set_state
  2878  03CD  085A               	movf	??_ssd_set_state,w
  2879  03CE  00D1               	movwf	dio_vid_set_pin_value@index
  2880  03CF  01D2               	clrf	dio_vid_set_pin_value@value
  2881  03D0  0AD2               	incf	dio_vid_set_pin_value@value,f
  2882  03D1  3000               	movlw	0
  2883  03D2  120A  118A  2130  120A  118A  	fcall	_dio_vid_set_pin_value
  2884                           
  2885                           ;ssd.c: 77:         dio_vid_set_pin_value(A, 3, 0);
  2886  03D7  3003               	movlw	3
  2887  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2888  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2889  03DA  00DA               	movwf	??_ssd_set_state
  2890  03DB  085A               	movf	??_ssd_set_state,w
  2891  03DC  00D1               	movwf	dio_vid_set_pin_value@index
  2892  03DD  01D2               	clrf	dio_vid_set_pin_value@value
  2893  03DE  3000               	movlw	0
  2894  03DF  120A  118A  2130  120A  118A  	fcall	_dio_vid_set_pin_value
  2895                           
  2896                           ;ssd.c: 78:         dio_vid_set_port_value(D, ssd_get_number(tens));
  2897  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2898  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2899  03E6  085E               	movf	ssd_set_state@tens,w
  2900  03E7  120A  118A  26FA  120A  118A  	fcall	_ssd_get_number
  2901  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2902  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2903  03EE  00DA               	movwf	??_ssd_set_state
  2904  03EF  085A               	movf	??_ssd_set_state,w
  2905  03F0  00D4               	movwf	dio_vid_set_port_value@value
  2906  03F1  3003               	movlw	3
  2907  03F2  120A  158A  2747  120A  118A  	fcall	_dio_vid_set_port_value
  2908                           
  2909                           ;ssd.c: 79:     }
  2910  03F7  2C26               	goto	l240
  2911  03F8                     l2186:	
  2912                           
  2913                           ;ssd.c: 81:         dio_vid_set_pin_value(A, 2, 0);
  2914  03F8  3002               	movlw	2
  2915  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2916  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2917  03FB  00DA               	movwf	??_ssd_set_state
  2918  03FC  085A               	movf	??_ssd_set_state,w
  2919  03FD  00D1               	movwf	dio_vid_set_pin_value@index
  2920  03FE  01D2               	clrf	dio_vid_set_pin_value@value
  2921  03FF  3000               	movlw	0
  2922  0400  120A  118A  2130  120A  118A  	fcall	_dio_vid_set_pin_value
  2923                           
  2924                           ;ssd.c: 82:         dio_vid_set_pin_value(A, 3, 1);
  2925  0405  3003               	movlw	3
  2926  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0408  00DA               	movwf	??_ssd_set_state
  2929  0409  085A               	movf	??_ssd_set_state,w
  2930  040A  00D1               	movwf	dio_vid_set_pin_value@index
  2931  040B  01D2               	clrf	dio_vid_set_pin_value@value
  2932  040C  0AD2               	incf	dio_vid_set_pin_value@value,f
  2933  040D  3000               	movlw	0
  2934  040E  120A  118A  2130  120A  118A  	fcall	_dio_vid_set_pin_value
  2935                           
  2936                           ;ssd.c: 83:         dio_vid_set_port_value(D, ssd_get_number(ones));
  2937  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2938  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2939  0415  085D               	movf	ssd_set_state@ones,w
  2940  0416  120A  118A  26FA  120A  118A  	fcall	_ssd_get_number
  2941  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2942  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2943  041D  00DA               	movwf	??_ssd_set_state
  2944  041E  085A               	movf	??_ssd_set_state,w
  2945  041F  00D4               	movwf	dio_vid_set_port_value@value
  2946  0420  3003               	movlw	3
  2947  0421  120A  158A  2747  120A  118A  	fcall	_dio_vid_set_port_value
  2948  0426                     l240:	
  2949  0426  0008               	return
  2950  0427                     __end_of_ssd_set_state:	
  2951                           
  2952                           	psect	text11
  2953  06FA                     __ptext11:	
  2954 ;; *************** function _ssd_get_number *****************
  2955 ;; Defined at:
  2956 ;;		line 27 in file "ssd.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  number          1    wreg     unsigned char 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  number          1    8[BANK0 ] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      unsigned char 
  2963 ;; Registers used:
  2964 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2970 ;;      Params:         0       0       0       0       0
  2971 ;;      Locals:         0       1       0       0       0
  2972 ;;      Temps:          0       2       0       0       0
  2973 ;;      Totals:         0       3       0       0       0
  2974 ;;Total ram usage:        3 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    3
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_ssd_set_state
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           
  2985                           ;psect for function _ssd_get_number
  2986  06FA                     _ssd_get_number:	
  2987                           
  2988                           ;incstack = 0
  2989                           ; Regs used in _ssd_get_number: [wreg-fsr0h+status,2+status,0]
  2990                           ;ssd_get_number@number stored from wreg
  2991  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  2992  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  2993  06FC  00D3               	movwf	ssd_get_number@number
  2994  06FD                     l2018:	
  2995                           
  2996                           ;ssd.c: 28:     switch (number) {
  2997  06FD  2F20               	goto	l2090
  2998  06FE                     l2020:	
  2999                           
  3000                           ;ssd.c: 30:             return 0x3F;
  3001  06FE  303F               	movlw	63
  3002  06FF  2F5A               	goto	l215
  3003  0700                     l2024:	
  3004                           
  3005                           ;ssd.c: 32:             return 0x06;
  3006  0700  3006               	movlw	6
  3007  0701  2F5A               	goto	l215
  3008  0702                     l2028:	
  3009                           
  3010                           ;ssd.c: 34:             return 0x5B;
  3011  0702  305B               	movlw	91
  3012  0703  2F5A               	goto	l215
  3013  0704                     l2032:	
  3014                           
  3015                           ;ssd.c: 36:             return 0x4F;
  3016  0704  304F               	movlw	79
  3017  0705  2F5A               	goto	l215
  3018  0706                     l2036:	
  3019                           
  3020                           ;ssd.c: 38:             return 0x66;
  3021  0706  3066               	movlw	102
  3022  0707  2F5A               	goto	l215
  3023  0708                     l2040:	
  3024                           
  3025                           ;ssd.c: 40:             return 0x6D;
  3026  0708  306D               	movlw	109
  3027  0709  2F5A               	goto	l215
  3028  070A                     l2044:	
  3029                           
  3030                           ;ssd.c: 42:             return 0x7D;
  3031  070A  307D               	movlw	125
  3032  070B  2F5A               	goto	l215
  3033  070C                     l2048:	
  3034                           
  3035                           ;ssd.c: 44:             return 0x07;
  3036  070C  3007               	movlw	7
  3037  070D  2F5A               	goto	l215
  3038  070E                     l2052:	
  3039                           
  3040                           ;ssd.c: 46:             return 0x7F;
  3041  070E  307F               	movlw	127
  3042  070F  2F5A               	goto	l215
  3043  0710                     l2056:	
  3044                           
  3045                           ;ssd.c: 48:             return 0x6F;
  3046  0710  306F               	movlw	111
  3047  0711  2F5A               	goto	l215
  3048  0712                     l2060:	
  3049                           
  3050                           ;ssd.c: 50:             return 0x77;
  3051  0712  3077               	movlw	119
  3052  0713  2F5A               	goto	l215
  3053  0714                     l2064:	
  3054                           
  3055                           ;ssd.c: 52:             return 0x7c;
  3056  0714  307C               	movlw	124
  3057  0715  2F5A               	goto	l215
  3058  0716                     l2068:	
  3059                           
  3060                           ;ssd.c: 54:             return 0x58;
  3061  0716  3058               	movlw	88
  3062  0717  2F5A               	goto	l215
  3063  0718                     l2072:	
  3064                           
  3065                           ;ssd.c: 56:             return 0x5E;
  3066  0718  305E               	movlw	94
  3067  0719  2F5A               	goto	l215
  3068  071A                     l2076:	
  3069                           
  3070                           ;ssd.c: 58:             return 0x79;
  3071  071A  3079               	movlw	121
  3072  071B  2F5A               	goto	l215
  3073  071C                     l2080:	
  3074                           
  3075                           ;ssd.c: 60:             return 0x71;
  3076  071C  3071               	movlw	113
  3077  071D  2F5A               	goto	l215
  3078  071E                     l2084:	
  3079                           
  3080                           ;ssd.c: 62:             return 0;
  3081  071E  3000               	movlw	0
  3082  071F  2F5A               	goto	l215
  3083  0720                     l2090:	
  3084  0720  0853               	movf	ssd_get_number@number,w
  3085  0721  00D1               	movwf	??_ssd_get_number
  3086  0722  01D2               	clrf	??_ssd_get_number+1
  3087                           
  3088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3089                           ; Switch size 1, requested type "simple"
  3090                           ; Number of cases is 1, Range of values is 0 to 0
  3091                           ; switch strategies available:
  3092                           ; Name         Instructions Cycles
  3093                           ; simple_byte            4     3 (average)
  3094                           ; direct_byte           11     8 (fixed)
  3095                           ; jumptable            260     6 (fixed)
  3096                           ;	Chosen strategy is simple_byte
  3097  0723  0852               	movf	??_ssd_get_number+1,w
  3098  0724  3A00               	xorlw	0	; case 0
  3099  0725  1903               	skipnz
  3100  0726  2F28               	goto	l2810
  3101  0727  2F1E               	goto	l2084
  3102  0728                     l2810:	
  3103                           
  3104                           ; Switch size 1, requested type "simple"
  3105                           ; Number of cases is 16, Range of values is 0 to 15
  3106                           ; switch strategies available:
  3107                           ; Name         Instructions Cycles
  3108                           ; simple_byte           49    25 (average)
  3109                           ; direct_byte           56     8 (fixed)
  3110                           ; jumptable            260     6 (fixed)
  3111                           ;	Chosen strategy is simple_byte
  3112  0728  0851               	movf	??_ssd_get_number,w
  3113  0729  3A00               	xorlw	0	; case 0
  3114  072A  1903               	skipnz
  3115  072B  2EFE               	goto	l2020
  3116  072C  3A01               	xorlw	1	; case 1
  3117  072D  1903               	skipnz
  3118  072E  2F00               	goto	l2024
  3119  072F  3A03               	xorlw	3	; case 2
  3120  0730  1903               	skipnz
  3121  0731  2F02               	goto	l2028
  3122  0732  3A01               	xorlw	1	; case 3
  3123  0733  1903               	skipnz
  3124  0734  2F04               	goto	l2032
  3125  0735  3A07               	xorlw	7	; case 4
  3126  0736  1903               	skipnz
  3127  0737  2F06               	goto	l2036
  3128  0738  3A01               	xorlw	1	; case 5
  3129  0739  1903               	skipnz
  3130  073A  2F08               	goto	l2040
  3131  073B  3A03               	xorlw	3	; case 6
  3132  073C  1903               	skipnz
  3133  073D  2F0A               	goto	l2044
  3134  073E  3A01               	xorlw	1	; case 7
  3135  073F  1903               	skipnz
  3136  0740  2F0C               	goto	l2048
  3137  0741  3A0F               	xorlw	15	; case 8
  3138  0742  1903               	skipnz
  3139  0743  2F0E               	goto	l2052
  3140  0744  3A01               	xorlw	1	; case 9
  3141  0745  1903               	skipnz
  3142  0746  2F10               	goto	l2056
  3143  0747  3A03               	xorlw	3	; case 10
  3144  0748  1903               	skipnz
  3145  0749  2F12               	goto	l2060
  3146  074A  3A01               	xorlw	1	; case 11
  3147  074B  1903               	skipnz
  3148  074C  2F14               	goto	l2064
  3149  074D  3A07               	xorlw	7	; case 12
  3150  074E  1903               	skipnz
  3151  074F  2F16               	goto	l2068
  3152  0750  3A01               	xorlw	1	; case 13
  3153  0751  1903               	skipnz
  3154  0752  2F18               	goto	l2072
  3155  0753  3A03               	xorlw	3	; case 14
  3156  0754  1903               	skipnz
  3157  0755  2F1A               	goto	l2076
  3158  0756  3A01               	xorlw	1	; case 15
  3159  0757  1903               	skipnz
  3160  0758  2F1C               	goto	l2080
  3161  0759  2F1E               	goto	l2084
  3162  075A                     l215:	
  3163  075A  0008               	return
  3164  075B                     __end_of_ssd_get_number:	
  3165                           
  3166                           	psect	text12
  3167  0F47                     __ptext12:	
  3168 ;; *************** function _dio_vid_set_port_value *****************
  3169 ;; Defined at:
  3170 ;;		line 33 in file "dio.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  portNumber      1    wreg     unsigned char 
  3173 ;;  value           1    9[BANK0 ] unsigned char 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  portNumber      1   12[BANK0 ] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3185 ;;      Params:         0       1       0       0       0
  3186 ;;      Locals:         0       1       0       0       0
  3187 ;;      Temps:          0       2       0       0       0
  3188 ;;      Totals:         0       4       0       0       0
  3189 ;;Total ram usage:        4 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    3
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_ssd_set_state
  3196 ;;		_lcd_vid_write_charachter
  3197 ;;		_lcd_vid_write_command
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function _dio_vid_set_port_value
  3203  0F47                     _dio_vid_set_port_value:	
  3204                           
  3205                           ;incstack = 0
  3206                           ; Regs used in _dio_vid_set_port_value: [wreg-fsr0h+status,2+status,0]
  3207                           ;dio_vid_set_port_value@portNumber stored from wreg
  3208  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  3209  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  3210  0F49  00D7               	movwf	dio_vid_set_port_value@portNumber
  3211  0F4A                     l1944:	
  3212                           
  3213                           ;dio.c: 34:  switch (portNumber) {
  3214  0F4A  2F5A               	goto	l1958
  3215  0F4B                     l1946:	
  3216                           
  3217                           ;dio.c: 36:   PORTA = value;
  3218  0F4B  0854               	movf	dio_vid_set_port_value@value,w
  3219  0F4C  0085               	movwf	5	;volatile
  3220                           
  3221                           ;dio.c: 37:   break;
  3222  0F4D  2F73               	goto	l96
  3223  0F4E                     l1948:	
  3224                           
  3225                           ;dio.c: 39:   PORTB = value;
  3226  0F4E  0854               	movf	dio_vid_set_port_value@value,w
  3227  0F4F  0086               	movwf	6	;volatile
  3228                           
  3229                           ;dio.c: 40:   break;
  3230  0F50  2F73               	goto	l96
  3231  0F51                     l1950:	
  3232                           
  3233                           ;dio.c: 42:   PORTC = value;
  3234  0F51  0854               	movf	dio_vid_set_port_value@value,w
  3235  0F52  0087               	movwf	7	;volatile
  3236                           
  3237                           ;dio.c: 43:   break;
  3238  0F53  2F73               	goto	l96
  3239  0F54                     l1952:	
  3240                           
  3241                           ;dio.c: 45:   PORTD = value;
  3242  0F54  0854               	movf	dio_vid_set_port_value@value,w
  3243  0F55  0088               	movwf	8	;volatile
  3244                           
  3245                           ;dio.c: 46:   break;
  3246  0F56  2F73               	goto	l96
  3247  0F57                     l1954:	
  3248                           
  3249                           ;dio.c: 48:   PORTE = value;
  3250  0F57  0854               	movf	dio_vid_set_port_value@value,w
  3251  0F58  0089               	movwf	9	;volatile
  3252                           
  3253                           ;dio.c: 49:   break;
  3254  0F59  2F73               	goto	l96
  3255  0F5A                     l1958:	
  3256  0F5A  0857               	movf	dio_vid_set_port_value@portNumber,w
  3257  0F5B  00D5               	movwf	??_dio_vid_set_port_value
  3258  0F5C  01D6               	clrf	??_dio_vid_set_port_value+1
  3259                           
  3260                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3261                           ; Switch size 1, requested type "simple"
  3262                           ; Number of cases is 1, Range of values is 0 to 0
  3263                           ; switch strategies available:
  3264                           ; Name         Instructions Cycles
  3265                           ; simple_byte            4     3 (average)
  3266                           ; direct_byte           11     8 (fixed)
  3267                           ; jumptable            260     6 (fixed)
  3268                           ;	Chosen strategy is simple_byte
  3269  0F5D  0856               	movf	??_dio_vid_set_port_value+1,w
  3270  0F5E  3A00               	xorlw	0	; case 0
  3271  0F5F  1903               	skipnz
  3272  0F60  2F62               	goto	l2812
  3273  0F61  2F73               	goto	l96
  3274  0F62                     l2812:	
  3275                           
  3276                           ; Switch size 1, requested type "simple"
  3277                           ; Number of cases is 5, Range of values is 0 to 4
  3278                           ; switch strategies available:
  3279                           ; Name         Instructions Cycles
  3280                           ; simple_byte           16     9 (average)
  3281                           ; direct_byte           23     8 (fixed)
  3282                           ; jumptable            260     6 (fixed)
  3283                           ;	Chosen strategy is simple_byte
  3284  0F62  0855               	movf	??_dio_vid_set_port_value,w
  3285  0F63  3A00               	xorlw	0	; case 0
  3286  0F64  1903               	skipnz
  3287  0F65  2F4B               	goto	l1946
  3288  0F66  3A01               	xorlw	1	; case 1
  3289  0F67  1903               	skipnz
  3290  0F68  2F4E               	goto	l1948
  3291  0F69  3A03               	xorlw	3	; case 2
  3292  0F6A  1903               	skipnz
  3293  0F6B  2F51               	goto	l1950
  3294  0F6C  3A01               	xorlw	1	; case 3
  3295  0F6D  1903               	skipnz
  3296  0F6E  2F54               	goto	l1952
  3297  0F6F  3A07               	xorlw	7	; case 4
  3298  0F70  1903               	skipnz
  3299  0F71  2F57               	goto	l1954
  3300  0F72  2F73               	goto	l96
  3301  0F73                     l96:	
  3302  0F73  0008               	return
  3303  0F74                     __end_of_dio_vid_set_port_value:	
  3304                           
  3305                           	psect	text13
  3306  0130                     __ptext13:	
  3307 ;; *************** function _dio_vid_set_pin_value *****************
  3308 ;; Defined at:
  3309 ;;		line 80 in file "dio.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  portNumber      1    wreg     unsigned char 
  3312 ;;  index           1    6[BANK0 ] unsigned char 
  3313 ;;  value           1    7[BANK0 ] unsigned char 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  portNumber      1   10[BANK0 ] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3325 ;;      Params:         0       2       0       0       0
  3326 ;;      Locals:         0       1       0       0       0
  3327 ;;      Temps:          0       2       0       0       0
  3328 ;;      Totals:         0       5       0       0       0
  3329 ;;Total ram usage:        5 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    3
  3332 ;; This function calls:
  3333 ;;		Nothing
  3334 ;; This function is called by:
  3335 ;;		_ssd_set_state
  3336 ;;		_lcd_vid_write_charachter
  3337 ;;		_lcd_vid_write_command
  3338 ;;		_lcd_vid_init
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           
  3343                           ;psect for function _dio_vid_set_pin_value
  3344  0130                     _dio_vid_set_pin_value:	
  3345                           
  3346                           ;incstack = 0
  3347                           ; Regs used in _dio_vid_set_pin_value: [wreg-fsr0h+status,2+status,0]
  3348                           ;dio_vid_set_pin_value@portNumber stored from wreg
  3349  0130  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0131  1303               	bcf	3,6	;RP1=0, select bank0
  3351  0132  00D5               	movwf	dio_vid_set_pin_value@portNumber
  3352  0133                     l1966:	
  3353                           
  3354                           ;dio.c: 81:  switch (portNumber) {
  3355  0133  29F7               	goto	l2010
  3356  0134                     l1968:	
  3357                           
  3358                           ;dio.c: 83:   if (value == 1)
  3359  0134  0352               	decf	dio_vid_set_pin_value@value,w
  3360  0135  1D03               	btfss	3,2
  3361  0136  2938               	goto	u1151
  3362  0137  2939               	goto	u1150
  3363  0138                     u1151:	
  3364  0138  2947               	goto	l1972
  3365  0139                     u1150:	
  3366  0139                     l1970:	
  3367                           
  3368                           ;dio.c: 84:    PORTA|=(1<<index);
  3369  0139  3001               	movlw	1
  3370  013A  00D3               	movwf	??_dio_vid_set_pin_value
  3371  013B  0A51               	incf	dio_vid_set_pin_value@index,w
  3372  013C  293F               	goto	u1164
  3373  013D                     u1165:	
  3374  013D  1003               	clrc
  3375  013E  0DD3               	rlf	??_dio_vid_set_pin_value,f
  3376  013F                     u1164:	
  3377  013F  3EFF               	addlw	-1
  3378  0140  1D03               	skipz
  3379  0141  293D               	goto	u1165
  3380  0142  0853               	movf	??_dio_vid_set_pin_value,w
  3381  0143  00D4               	movwf	??_dio_vid_set_pin_value+1
  3382  0144  0854               	movf	??_dio_vid_set_pin_value+1,w
  3383  0145  0485               	iorwf	5,f	;volatile
  3384  0146  2A10               	goto	l134
  3385  0147                     l1972:	
  3386  0147  0852               	movf	dio_vid_set_pin_value@value,w
  3387  0148  1D03               	btfss	3,2
  3388  0149  294B               	goto	u1171
  3389  014A  294C               	goto	u1170
  3390  014B                     u1171:	
  3391  014B  2A10               	goto	l134
  3392  014C                     u1170:	
  3393  014C                     l1974:	
  3394                           
  3395                           ;dio.c: 86:    PORTA&=~(1<<index);
  3396  014C  3001               	movlw	1
  3397  014D  00D3               	movwf	??_dio_vid_set_pin_value
  3398  014E  0A51               	incf	dio_vid_set_pin_value@index,w
  3399  014F  2952               	goto	u1184
  3400  0150                     u1185:	
  3401  0150  1003               	clrc
  3402  0151  0DD3               	rlf	??_dio_vid_set_pin_value,f
  3403  0152                     u1184:	
  3404  0152  3EFF               	addlw	-1
  3405  0153  1D03               	skipz
  3406  0154  2950               	goto	u1185
  3407  0155  0853               	movf	??_dio_vid_set_pin_value,w
  3408  0156  3AFF               	xorlw	255
  3409  0157  00D4               	movwf	??_dio_vid_set_pin_value+1
  3410  0158  0854               	movf	??_dio_vid_set_pin_value+1,w
  3411  0159  0585               	andwf	5,f	;volatile
  3412  015A  2A10               	goto	l134
  3413  015B                     l1976:	
  3414                           
  3415                           ;dio.c: 89:   if (value == 1)
  3416  015B  0352               	decf	dio_vid_set_pin_value@value,w
  3417  015C  1D03               	btfss	3,2
  3418  015D  295F               	goto	u1191
  3419  015E  2960               	goto	u1190
  3420  015F                     u1191:	
  3421  015F  296E               	goto	l1980
  3422  0160                     u1190:	
  3423  0160                     l1978:	
  3424                           
  3425                           ;dio.c: 90:    PORTB|=(1<<index);
  3426  0160  3001               	movlw	1
  3427  0161  00D3               	movwf	??_dio_vid_set_pin_value
  3428  0162  0A51               	incf	dio_vid_set_pin_value@index,w
  3429  0163  2966               	goto	u1204
  3430  0164                     u1205:	
  3431  0164  1003               	clrc
  3432  0165  0DD3               	rlf	??_dio_vid_set_pin_value,f
  3433  0166                     u1204:	
  3434  0166  3EFF               	addlw	-1
  3435  0167  1D03               	skipz
  3436  0168  2964               	goto	u1205
  3437  0169  0853               	movf	??_dio_vid_set_pin_value,w
  3438  016A  00D4               	movwf	??_dio_vid_set_pin_value+1
  3439  016B  0854               	movf	??_dio_vid_set_pin_value+1,w
  3440  016C  0486               	iorwf	6,f	;volatile
  3441  016D  2A10               	goto	l134
  3442  016E                     l1980:	
  3443  016E  0852               	movf	dio_vid_set_pin_value@value,w
  3444  016F  1D03               	btfss	3,2
  3445  0170  2972               	goto	u1211
  3446  0171  2973               	goto	u1210
  3447  0172                     u1211:	
  3448  0172  2A10               	goto	l134
  3449  0173                     u1210:	
  3450  0173                     l1982:	
  3451                           
  3452                           ;dio.c: 92:    PORTB&=~(1<<index);
  3453  0173  3001               	movlw	1
  3454  0174  00D3               	movwf	??_dio_vid_set_pin_value
  3455  0175  0A51               	incf	dio_vid_set_pin_value@index,w
  3456  0176  2979               	goto	u1224
  3457  0177                     u1225:	
  3458  0177  1003               	clrc
  3459  0178  0DD3               	rlf	??_dio_vid_set_pin_value,f
  3460  0179                     u1224:	
  3461  0179  3EFF               	addlw	-1
  3462  017A  1D03               	skipz
  3463  017B  2977               	goto	u1225
  3464  017C  0853               	movf	??_dio_vid_set_pin_value,w
  3465  017D  3AFF               	xorlw	255
  3466  017E  00D4               	movwf	??_dio_vid_set_pin_value+1
  3467  017F  0854               	movf	??_dio_vid_set_pin_value+1,w
  3468  0180  0586               	andwf	6,f	;volatile
  3469  0181  2A10               	goto	l134
  3470  0182                     l1984:	
  3471                           
  3472                           ;dio.c: 95:   if (value == 1)
  3473  0182  0352               	decf	dio_vid_set_pin_value@value,w
  3474  0183  1D03               	btfss	3,2
  3475  0184  2986               	goto	u1231
  3476  0185  2987               	goto	u1230
  3477  0186                     u1231:	
  3478  0186  2995               	goto	l1988
  3479  0187                     u1230:	
  3480  0187                     l1986:	
  3481                           
  3482                           ;dio.c: 96:    PORTC|=(1<<index);
  3483  0187  3001               	movlw	1
  3484  0188  00D3               	movwf	??_dio_vid_set_pin_value
  3485  0189  0A51               	incf	dio_vid_set_pin_value@index,w
  3486  018A  298D               	goto	u1244
  3487  018B                     u1245:	
  3488  018B  1003               	clrc
  3489  018C  0DD3               	rlf	??_dio_vid_set_pin_value,f
  3490  018D                     u1244:	
  3491  018D  3EFF               	addlw	-1
  3492  018E  1D03               	skipz
  3493  018F  298B               	goto	u1245
  3494  0190  0853               	movf	??_dio_vid_set_pin_value,w
  3495  0191  00D4               	movwf	??_dio_vid_set_pin_value+1
  3496  0192  0854               	movf	??_dio_vid_set_pin_value+1,w
  3497  0193  0487               	iorwf	7,f	;volatile
  3498  0194  2A10               	goto	l134
  3499  0195                     l1988:	
  3500  0195  0852               	movf	dio_vid_set_pin_value@value,w
  3501  0196  1D03               	btfss	3,2
  3502  0197  2999               	goto	u1251
  3503  0198  299A               	goto	u1250
  3504  0199                     u1251:	
  3505  0199  2A10               	goto	l134
  3506  019A                     u1250:	
  3507  019A                     l1990:	
  3508                           
  3509                           ;dio.c: 98:    PORTC&=~(1<<index);
  3510  019A  3001               	movlw	1
  3511  019B  00D3               	movwf	??_dio_vid_set_pin_value
  3512  019C  0A51               	incf	dio_vid_set_pin_value@index,w
  3513  019D  29A0               	goto	u1264
  3514  019E                     u1265:	
  3515  019E  1003               	clrc
  3516  019F  0DD3               	rlf	??_dio_vid_set_pin_value,f
  3517  01A0                     u1264:	
  3518  01A0  3EFF               	addlw	-1
  3519  01A1  1D03               	skipz
  3520  01A2  299E               	goto	u1265
  3521  01A3  0853               	movf	??_dio_vid_set_pin_value,w
  3522  01A4  3AFF               	xorlw	255
  3523  01A5  00D4               	movwf	??_dio_vid_set_pin_value+1
  3524  01A6  0854               	movf	??_dio_vid_set_pin_value+1,w
  3525  01A7  0587               	andwf	7,f	;volatile
  3526  01A8  2A10               	goto	l134
  3527  01A9                     l1992:	
  3528                           
  3529                           ;dio.c: 101:   if (value == 1)
  3530  01A9  0352               	decf	dio_vid_set_pin_value@value,w
  3531  01AA  1D03               	btfss	3,2
  3532  01AB  29AD               	goto	u1271
  3533  01AC  29AE               	goto	u1270
  3534  01AD                     u1271:	
  3535  01AD  29BC               	goto	l1996
  3536  01AE                     u1270:	
  3537  01AE                     l1994:	
  3538                           
  3539                           ;dio.c: 102:    PORTD|=(1<<index);
  3540  01AE  3001               	movlw	1
  3541  01AF  00D3               	movwf	??_dio_vid_set_pin_value
  3542  01B0  0A51               	incf	dio_vid_set_pin_value@index,w
  3543  01B1  29B4               	goto	u1284
  3544  01B2                     u1285:	
  3545  01B2  1003               	clrc
  3546  01B3  0DD3               	rlf	??_dio_vid_set_pin_value,f
  3547  01B4                     u1284:	
  3548  01B4  3EFF               	addlw	-1
  3549  01B5  1D03               	skipz
  3550  01B6  29B2               	goto	u1285
  3551  01B7  0853               	movf	??_dio_vid_set_pin_value,w
  3552  01B8  00D4               	movwf	??_dio_vid_set_pin_value+1
  3553  01B9  0854               	movf	??_dio_vid_set_pin_value+1,w
  3554  01BA  0488               	iorwf	8,f	;volatile
  3555  01BB  2A10               	goto	l134
  3556  01BC                     l1996:	
  3557  01BC  0852               	movf	dio_vid_set_pin_value@value,w
  3558  01BD  1D03               	btfss	3,2
  3559  01BE  29C0               	goto	u1291
  3560  01BF  29C1               	goto	u1290
  3561  01C0                     u1291:	
  3562  01C0  2A10               	goto	l134
  3563  01C1                     u1290:	
  3564  01C1                     l1998:	
  3565                           
  3566                           ;dio.c: 104:    PORTD&=~(1<<index);
  3567  01C1  3001               	movlw	1
  3568  01C2  00D3               	movwf	??_dio_vid_set_pin_value
  3569  01C3  0A51               	incf	dio_vid_set_pin_value@index,w
  3570  01C4  29C7               	goto	u1304
  3571  01C5                     u1305:	
  3572  01C5  1003               	clrc
  3573  01C6  0DD3               	rlf	??_dio_vid_set_pin_value,f
  3574  01C7                     u1304:	
  3575  01C7  3EFF               	addlw	-1
  3576  01C8  1D03               	skipz
  3577  01C9  29C5               	goto	u1305
  3578  01CA  0853               	movf	??_dio_vid_set_pin_value,w
  3579  01CB  3AFF               	xorlw	255
  3580  01CC  00D4               	movwf	??_dio_vid_set_pin_value+1
  3581  01CD  0854               	movf	??_dio_vid_set_pin_value+1,w
  3582  01CE  0588               	andwf	8,f	;volatile
  3583  01CF  2A10               	goto	l134
  3584  01D0                     l2000:	
  3585                           
  3586                           ;dio.c: 107:   if (value == 1)
  3587  01D0  0352               	decf	dio_vid_set_pin_value@value,w
  3588  01D1  1D03               	btfss	3,2
  3589  01D2  29D4               	goto	u1311
  3590  01D3  29D5               	goto	u1310
  3591  01D4                     u1311:	
  3592  01D4  29E3               	goto	l2004
  3593  01D5                     u1310:	
  3594  01D5                     l2002:	
  3595                           
  3596                           ;dio.c: 108:    PORTE|=(1<<index);
  3597  01D5  3001               	movlw	1
  3598  01D6  00D3               	movwf	??_dio_vid_set_pin_value
  3599  01D7  0A51               	incf	dio_vid_set_pin_value@index,w
  3600  01D8  29DB               	goto	u1324
  3601  01D9                     u1325:	
  3602  01D9  1003               	clrc
  3603  01DA  0DD3               	rlf	??_dio_vid_set_pin_value,f
  3604  01DB                     u1324:	
  3605  01DB  3EFF               	addlw	-1
  3606  01DC  1D03               	skipz
  3607  01DD  29D9               	goto	u1325
  3608  01DE  0853               	movf	??_dio_vid_set_pin_value,w
  3609  01DF  00D4               	movwf	??_dio_vid_set_pin_value+1
  3610  01E0  0854               	movf	??_dio_vid_set_pin_value+1,w
  3611  01E1  0489               	iorwf	9,f	;volatile
  3612  01E2  2A10               	goto	l134
  3613  01E3                     l2004:	
  3614  01E3  0852               	movf	dio_vid_set_pin_value@value,w
  3615  01E4  1D03               	btfss	3,2
  3616  01E5  29E7               	goto	u1331
  3617  01E6  29E8               	goto	u1330
  3618  01E7                     u1331:	
  3619  01E7  2A10               	goto	l134
  3620  01E8                     u1330:	
  3621  01E8                     l2006:	
  3622                           
  3623                           ;dio.c: 110:    PORTE&=~(1<<index);
  3624  01E8  3001               	movlw	1
  3625  01E9  00D3               	movwf	??_dio_vid_set_pin_value
  3626  01EA  0A51               	incf	dio_vid_set_pin_value@index,w
  3627  01EB  29EE               	goto	u1344
  3628  01EC                     u1345:	
  3629  01EC  1003               	clrc
  3630  01ED  0DD3               	rlf	??_dio_vid_set_pin_value,f
  3631  01EE                     u1344:	
  3632  01EE  3EFF               	addlw	-1
  3633  01EF  1D03               	skipz
  3634  01F0  29EC               	goto	u1345
  3635  01F1  0853               	movf	??_dio_vid_set_pin_value,w
  3636  01F2  3AFF               	xorlw	255
  3637  01F3  00D4               	movwf	??_dio_vid_set_pin_value+1
  3638  01F4  0854               	movf	??_dio_vid_set_pin_value+1,w
  3639  01F5  0589               	andwf	9,f	;volatile
  3640  01F6  2A10               	goto	l134
  3641  01F7                     l2010:	
  3642  01F7  0855               	movf	dio_vid_set_pin_value@portNumber,w
  3643  01F8  00D3               	movwf	??_dio_vid_set_pin_value
  3644  01F9  01D4               	clrf	??_dio_vid_set_pin_value+1
  3645                           
  3646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3647                           ; Switch size 1, requested type "simple"
  3648                           ; Number of cases is 1, Range of values is 0 to 0
  3649                           ; switch strategies available:
  3650                           ; Name         Instructions Cycles
  3651                           ; simple_byte            4     3 (average)
  3652                           ; direct_byte           11     8 (fixed)
  3653                           ; jumptable            260     6 (fixed)
  3654                           ;	Chosen strategy is simple_byte
  3655  01FA  0854               	movf	??_dio_vid_set_pin_value+1,w
  3656  01FB  3A00               	xorlw	0	; case 0
  3657  01FC  1903               	skipnz
  3658  01FD  29FF               	goto	l2814
  3659  01FE  2A10               	goto	l134
  3660  01FF                     l2814:	
  3661                           
  3662                           ; Switch size 1, requested type "simple"
  3663                           ; Number of cases is 5, Range of values is 0 to 4
  3664                           ; switch strategies available:
  3665                           ; Name         Instructions Cycles
  3666                           ; simple_byte           16     9 (average)
  3667                           ; direct_byte           23     8 (fixed)
  3668                           ; jumptable            260     6 (fixed)
  3669                           ;	Chosen strategy is simple_byte
  3670  01FF  0853               	movf	??_dio_vid_set_pin_value,w
  3671  0200  3A00               	xorlw	0	; case 0
  3672  0201  1903               	skipnz
  3673  0202  2934               	goto	l1968
  3674  0203  3A01               	xorlw	1	; case 1
  3675  0204  1903               	skipnz
  3676  0205  295B               	goto	l1976
  3677  0206  3A03               	xorlw	3	; case 2
  3678  0207  1903               	skipnz
  3679  0208  2982               	goto	l1984
  3680  0209  3A01               	xorlw	1	; case 3
  3681  020A  1903               	skipnz
  3682  020B  29A9               	goto	l1992
  3683  020C  3A07               	xorlw	7	; case 4
  3684  020D  1903               	skipnz
  3685  020E  29D0               	goto	l2000
  3686  020F  2A10               	goto	l134
  3687  0210                     l134:	
  3688  0210  0008               	return
  3689  0211                     __end_of_dio_vid_set_pin_value:	
  3690                           
  3691                           	psect	text14
  3692  075B                     __ptext14:	
  3693 ;; *************** function ___awmod *****************
  3694 ;; Defined at:
  3695 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  divisor         2    6[BANK0 ] int 
  3698 ;;  dividend        2    8[BANK0 ] int 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  sign            1   12[BANK0 ] unsigned char 
  3701 ;;  counter         1   11[BANK0 ] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  2    6[BANK0 ] int 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3711 ;;      Params:         0       4       0       0       0
  3712 ;;      Locals:         0       2       0       0       0
  3713 ;;      Temps:          0       1       0       0       0
  3714 ;;      Totals:         0       7       0       0       0
  3715 ;;Total ram usage:        7 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    3
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_main
  3722 ;;		_ssd_set_state
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           
  3727                           ;psect for function ___awmod
  3728  075B                     ___awmod:	
  3729  075B                     l2142:	
  3730                           ;incstack = 0
  3731                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3732                           
  3733  075B  1283               	bcf	3,5	;RP0=0, select bank0
  3734  075C  1303               	bcf	3,6	;RP1=0, select bank0
  3735  075D  01D7               	clrf	___awmod@sign
  3736  075E                     l2144:	
  3737  075E  1FD4               	btfss	___awmod@dividend+1,7
  3738  075F  2F61               	goto	u1451
  3739  0760  2F62               	goto	u1450
  3740  0761                     u1451:	
  3741  0761  2F69               	goto	l2150
  3742  0762                     u1450:	
  3743  0762                     l2146:	
  3744  0762  09D3               	comf	___awmod@dividend,f
  3745  0763  09D4               	comf	___awmod@dividend+1,f
  3746  0764  0AD3               	incf	___awmod@dividend,f
  3747  0765  1903               	skipnz
  3748  0766  0AD4               	incf	___awmod@dividend+1,f
  3749  0767                     l2148:	
  3750  0767  01D7               	clrf	___awmod@sign
  3751  0768  0AD7               	incf	___awmod@sign,f
  3752  0769                     l2150:	
  3753  0769  1FD2               	btfss	___awmod@divisor+1,7
  3754  076A  2F6C               	goto	u1461
  3755  076B  2F6D               	goto	u1460
  3756  076C                     u1461:	
  3757  076C  2F72               	goto	l2154
  3758  076D                     u1460:	
  3759  076D                     l2152:	
  3760  076D  09D1               	comf	___awmod@divisor,f
  3761  076E  09D2               	comf	___awmod@divisor+1,f
  3762  076F  0AD1               	incf	___awmod@divisor,f
  3763  0770  1903               	skipnz
  3764  0771  0AD2               	incf	___awmod@divisor+1,f
  3765  0772                     l2154:	
  3766  0772  0851               	movf	___awmod@divisor,w
  3767  0773  0452               	iorwf	___awmod@divisor+1,w
  3768  0774  1903               	btfsc	3,2
  3769  0775  2F77               	goto	u1471
  3770  0776  2F78               	goto	u1470
  3771  0777                     u1471:	
  3772  0777  2FA7               	goto	l2172
  3773  0778                     u1470:	
  3774  0778                     l2156:	
  3775  0778  01D6               	clrf	___awmod@counter
  3776  0779  0AD6               	incf	___awmod@counter,f
  3777  077A  2F86               	goto	l2162
  3778  077B                     l2158:	
  3779  077B  3001               	movlw	1
  3780  077C                     u1485:	
  3781  077C  1003               	clrc
  3782  077D  0DD1               	rlf	___awmod@divisor,f
  3783  077E  0DD2               	rlf	___awmod@divisor+1,f
  3784  077F  3EFF               	addlw	-1
  3785  0780  1D03               	skipz
  3786  0781  2F7C               	goto	u1485
  3787  0782                     l2160:	
  3788  0782  3001               	movlw	1
  3789  0783  00D5               	movwf	??___awmod
  3790  0784  0855               	movf	??___awmod,w
  3791  0785  07D6               	addwf	___awmod@counter,f
  3792  0786                     l2162:	
  3793  0786  1FD2               	btfss	___awmod@divisor+1,7
  3794  0787  2F89               	goto	u1491
  3795  0788  2F8A               	goto	u1490
  3796  0789                     u1491:	
  3797  0789  2F7B               	goto	l2158
  3798  078A                     u1490:	
  3799  078A                     l2164:	
  3800  078A  0852               	movf	___awmod@divisor+1,w
  3801  078B  0254               	subwf	___awmod@dividend+1,w
  3802  078C  1D03               	skipz
  3803  078D  2F90               	goto	u1505
  3804  078E  0851               	movf	___awmod@divisor,w
  3805  078F  0253               	subwf	___awmod@dividend,w
  3806  0790                     u1505:	
  3807  0790  1C03               	skipc
  3808  0791  2F93               	goto	u1501
  3809  0792  2F94               	goto	u1500
  3810  0793                     u1501:	
  3811  0793  2F9A               	goto	l2168
  3812  0794                     u1500:	
  3813  0794                     l2166:	
  3814  0794  0851               	movf	___awmod@divisor,w
  3815  0795  02D3               	subwf	___awmod@dividend,f
  3816  0796  0852               	movf	___awmod@divisor+1,w
  3817  0797  1C03               	skipc
  3818  0798  03D4               	decf	___awmod@dividend+1,f
  3819  0799  02D4               	subwf	___awmod@dividend+1,f
  3820  079A                     l2168:	
  3821  079A  3001               	movlw	1
  3822  079B                     u1515:	
  3823  079B  1003               	clrc
  3824  079C  0CD2               	rrf	___awmod@divisor+1,f
  3825  079D  0CD1               	rrf	___awmod@divisor,f
  3826  079E  3EFF               	addlw	-1
  3827  079F  1D03               	skipz
  3828  07A0  2F9B               	goto	u1515
  3829  07A1                     l2170:	
  3830  07A1  3001               	movlw	1
  3831  07A2  02D6               	subwf	___awmod@counter,f
  3832  07A3  1D03               	btfss	3,2
  3833  07A4  2FA6               	goto	u1521
  3834  07A5  2FA7               	goto	u1520
  3835  07A6                     u1521:	
  3836  07A6  2F8A               	goto	l2164
  3837  07A7                     u1520:	
  3838  07A7                     l2172:	
  3839  07A7  0857               	movf	___awmod@sign,w
  3840  07A8  1903               	btfsc	3,2
  3841  07A9  2FAB               	goto	u1531
  3842  07AA  2FAC               	goto	u1530
  3843  07AB                     u1531:	
  3844  07AB  2FB1               	goto	l2176
  3845  07AC                     u1530:	
  3846  07AC                     l2174:	
  3847  07AC  09D3               	comf	___awmod@dividend,f
  3848  07AD  09D4               	comf	___awmod@dividend+1,f
  3849  07AE  0AD3               	incf	___awmod@dividend,f
  3850  07AF  1903               	skipnz
  3851  07B0  0AD4               	incf	___awmod@dividend+1,f
  3852  07B1                     l2176:	
  3853  07B1  0854               	movf	___awmod@dividend+1,w
  3854  07B2  00D2               	movwf	?___awmod+1
  3855  07B3  0853               	movf	___awmod@dividend,w
  3856  07B4  00D1               	movwf	?___awmod
  3857  07B5                     l678:	
  3858  07B5  0008               	return
  3859  07B6                     __end_of___awmod:	
  3860                           
  3861                           	psect	text15
  3862  05C6                     __ptext15:	
  3863 ;; *************** function ___awdiv *****************
  3864 ;; Defined at:
  3865 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  divisor         2    6[BANK0 ] int 
  3868 ;;  dividend        2    8[BANK0 ] int 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  quotient        2   13[BANK0 ] int 
  3871 ;;  sign            1   12[BANK0 ] unsigned char 
  3872 ;;  counter         1   11[BANK0 ] unsigned char 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  2    6[BANK0 ] int 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3882 ;;      Params:         0       4       0       0       0
  3883 ;;      Locals:         0       4       0       0       0
  3884 ;;      Temps:          0       1       0       0       0
  3885 ;;      Totals:         0       9       0       0       0
  3886 ;;Total ram usage:        9 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    3
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_ssd_set_state
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           
  3897                           ;psect for function ___awdiv
  3898  05C6                     ___awdiv:	
  3899  05C6                     l2098:	
  3900                           ;incstack = 0
  3901                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3902                           
  3903  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  3904  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  3905  05C8  01D7               	clrf	___awdiv@sign
  3906  05C9                     l2100:	
  3907  05C9  1FD2               	btfss	___awdiv@divisor+1,7
  3908  05CA  2DCC               	goto	u1351
  3909  05CB  2DCD               	goto	u1350
  3910  05CC                     u1351:	
  3911  05CC  2DD4               	goto	l2106
  3912  05CD                     u1350:	
  3913  05CD                     l2102:	
  3914  05CD  09D1               	comf	___awdiv@divisor,f
  3915  05CE  09D2               	comf	___awdiv@divisor+1,f
  3916  05CF  0AD1               	incf	___awdiv@divisor,f
  3917  05D0  1903               	skipnz
  3918  05D1  0AD2               	incf	___awdiv@divisor+1,f
  3919  05D2                     l2104:	
  3920  05D2  01D7               	clrf	___awdiv@sign
  3921  05D3  0AD7               	incf	___awdiv@sign,f
  3922  05D4                     l2106:	
  3923  05D4  1FD4               	btfss	___awdiv@dividend+1,7
  3924  05D5  2DD7               	goto	u1361
  3925  05D6  2DD8               	goto	u1360
  3926  05D7                     u1361:	
  3927  05D7  2DE1               	goto	l2112
  3928  05D8                     u1360:	
  3929  05D8                     l2108:	
  3930  05D8  09D3               	comf	___awdiv@dividend,f
  3931  05D9  09D4               	comf	___awdiv@dividend+1,f
  3932  05DA  0AD3               	incf	___awdiv@dividend,f
  3933  05DB  1903               	skipnz
  3934  05DC  0AD4               	incf	___awdiv@dividend+1,f
  3935  05DD                     l2110:	
  3936  05DD  3001               	movlw	1
  3937  05DE  00D5               	movwf	??___awdiv
  3938  05DF  0855               	movf	??___awdiv,w
  3939  05E0  06D7               	xorwf	___awdiv@sign,f
  3940  05E1                     l2112:	
  3941  05E1  01D8               	clrf	___awdiv@quotient
  3942  05E2  01D9               	clrf	___awdiv@quotient+1
  3943  05E3                     l2114:	
  3944  05E3  0851               	movf	___awdiv@divisor,w
  3945  05E4  0452               	iorwf	___awdiv@divisor+1,w
  3946  05E5  1903               	btfsc	3,2
  3947  05E6  2DE8               	goto	u1371
  3948  05E7  2DE9               	goto	u1370
  3949  05E8                     u1371:	
  3950  05E8  2E20               	goto	l2134
  3951  05E9                     u1370:	
  3952  05E9                     l2116:	
  3953  05E9  01D6               	clrf	___awdiv@counter
  3954  05EA  0AD6               	incf	___awdiv@counter,f
  3955  05EB  2DF7               	goto	l2122
  3956  05EC                     l2118:	
  3957  05EC  3001               	movlw	1
  3958  05ED                     u1385:	
  3959  05ED  1003               	clrc
  3960  05EE  0DD1               	rlf	___awdiv@divisor,f
  3961  05EF  0DD2               	rlf	___awdiv@divisor+1,f
  3962  05F0  3EFF               	addlw	-1
  3963  05F1  1D03               	skipz
  3964  05F2  2DED               	goto	u1385
  3965  05F3                     l2120:	
  3966  05F3  3001               	movlw	1
  3967  05F4  00D5               	movwf	??___awdiv
  3968  05F5  0855               	movf	??___awdiv,w
  3969  05F6  07D6               	addwf	___awdiv@counter,f
  3970  05F7                     l2122:	
  3971  05F7  1FD2               	btfss	___awdiv@divisor+1,7
  3972  05F8  2DFA               	goto	u1391
  3973  05F9  2DFB               	goto	u1390
  3974  05FA                     u1391:	
  3975  05FA  2DEC               	goto	l2118
  3976  05FB                     u1390:	
  3977  05FB                     l2124:	
  3978  05FB  3001               	movlw	1
  3979  05FC                     u1405:	
  3980  05FC  1003               	clrc
  3981  05FD  0DD8               	rlf	___awdiv@quotient,f
  3982  05FE  0DD9               	rlf	___awdiv@quotient+1,f
  3983  05FF  3EFF               	addlw	-1
  3984  0600  1D03               	skipz
  3985  0601  2DFC               	goto	u1405
  3986  0602  0852               	movf	___awdiv@divisor+1,w
  3987  0603  0254               	subwf	___awdiv@dividend+1,w
  3988  0604  1D03               	skipz
  3989  0605  2E08               	goto	u1415
  3990  0606  0851               	movf	___awdiv@divisor,w
  3991  0607  0253               	subwf	___awdiv@dividend,w
  3992  0608                     u1415:	
  3993  0608  1C03               	skipc
  3994  0609  2E0B               	goto	u1411
  3995  060A  2E0C               	goto	u1410
  3996  060B                     u1411:	
  3997  060B  2E13               	goto	l2130
  3998  060C                     u1410:	
  3999  060C                     l2126:	
  4000  060C  0851               	movf	___awdiv@divisor,w
  4001  060D  02D3               	subwf	___awdiv@dividend,f
  4002  060E  0852               	movf	___awdiv@divisor+1,w
  4003  060F  1C03               	skipc
  4004  0610  03D4               	decf	___awdiv@dividend+1,f
  4005  0611  02D4               	subwf	___awdiv@dividend+1,f
  4006  0612                     l2128:	
  4007  0612  1458               	bsf	___awdiv@quotient,0
  4008  0613                     l2130:	
  4009  0613  3001               	movlw	1
  4010  0614                     u1425:	
  4011  0614  1003               	clrc
  4012  0615  0CD2               	rrf	___awdiv@divisor+1,f
  4013  0616  0CD1               	rrf	___awdiv@divisor,f
  4014  0617  3EFF               	addlw	-1
  4015  0618  1D03               	skipz
  4016  0619  2E14               	goto	u1425
  4017  061A                     l2132:	
  4018  061A  3001               	movlw	1
  4019  061B  02D6               	subwf	___awdiv@counter,f
  4020  061C  1D03               	btfss	3,2
  4021  061D  2E1F               	goto	u1431
  4022  061E  2E20               	goto	u1430
  4023  061F                     u1431:	
  4024  061F  2DFB               	goto	l2124
  4025  0620                     u1430:	
  4026  0620                     l2134:	
  4027  0620  0857               	movf	___awdiv@sign,w
  4028  0621  1903               	btfsc	3,2
  4029  0622  2E24               	goto	u1441
  4030  0623  2E25               	goto	u1440
  4031  0624                     u1441:	
  4032  0624  2E2A               	goto	l2138
  4033  0625                     u1440:	
  4034  0625                     l2136:	
  4035  0625  09D8               	comf	___awdiv@quotient,f
  4036  0626  09D9               	comf	___awdiv@quotient+1,f
  4037  0627  0AD8               	incf	___awdiv@quotient,f
  4038  0628  1903               	skipnz
  4039  0629  0AD9               	incf	___awdiv@quotient+1,f
  4040  062A                     l2138:	
  4041  062A  0859               	movf	___awdiv@quotient+1,w
  4042  062B  00D2               	movwf	?___awdiv+1
  4043  062C  0858               	movf	___awdiv@quotient,w
  4044  062D  00D1               	movwf	?___awdiv
  4045  062E                     l665:	
  4046  062E  0008               	return
  4047  062F                     __end_of___awdiv:	
  4048                           
  4049                           	psect	text16
  4050  062F                     __ptext16:	
  4051 ;; *************** function _sch_vid_delete_task *****************
  4052 ;; Defined at:
  4053 ;;		line 89 in file "scheduler.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  index           1    wreg     unsigned char 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  index           1   11[BANK0 ] unsigned char 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      unsigned char 
  4060 ;; Registers used:
  4061 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4067 ;;      Params:         0       0       0       0       0
  4068 ;;      Locals:         0       1       0       0       0
  4069 ;;      Temps:          0       1       0       0       0
  4070 ;;      Totals:         0       2       0       0       0
  4071 ;;Total ram usage:        2 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; Hardware stack levels required when called:    4
  4074 ;; This function calls:
  4075 ;;		___bmul
  4076 ;; This function is called by:
  4077 ;;		_sch_vid_init
  4078 ;;		_sch_vid_dispatch_tasks
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           
  4083                           ;psect for function _sch_vid_delete_task
  4084  062F                     _sch_vid_delete_task:	
  4085                           
  4086                           ;incstack = 0
  4087                           ; Regs used in _sch_vid_delete_task: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4088                           ;sch_vid_delete_task@index stored from wreg
  4089  062F  1283               	bcf	3,5	;RP0=0, select bank0
  4090  0630  1303               	bcf	3,6	;RP1=0, select bank0
  4091  0631  00D6               	movwf	sch_vid_delete_task@index
  4092  0632                     l2328:	
  4093                           
  4094                           ;scheduler.c: 90:     if (index < 3) {
  4095  0632  3003               	movlw	3
  4096  0633  0256               	subwf	sch_vid_delete_task@index,w
  4097  0634  1803               	skipnc
  4098  0635  2E37               	goto	u1881
  4099  0636  2E38               	goto	u1880
  4100  0637                     u1881:	
  4101  0637  2E94               	goto	l284
  4102  0638                     u1880:	
  4103  0638                     l2330:	
  4104                           
  4105                           ;scheduler.c: 91:         sch_tasks[index].taskFunction = 0x0000;
  4106  0638  300D               	movlw	13
  4107  0639  00D5               	movwf	??_sch_vid_delete_task
  4108  063A  0855               	movf	??_sch_vid_delete_task,w
  4109  063B  00D1               	movwf	___bmul@multiplicand
  4110  063C  0856               	movf	sch_vid_delete_task@index,w
  4111  063D  120A  158A  2686  120A  118A  	fcall	___bmul
  4112  0642  3E20               	addlw	(low (_sch_tasks| 0))& (0+255)
  4113  0643  0084               	movwf	4
  4114  0644  1383               	bcf	3,7	;select IRP bank0
  4115  0645  0180               	clrf	0
  4116                           
  4117                           ;scheduler.c: 92:         sch_tasks[index].delay = 0;
  4118  0646  300D               	movlw	13
  4119  0647  1283               	bcf	3,5	;RP0=0, select bank0
  4120  0648  1303               	bcf	3,6	;RP1=0, select bank0
  4121  0649  00D5               	movwf	??_sch_vid_delete_task
  4122  064A  0855               	movf	??_sch_vid_delete_task,w
  4123  064B  00D1               	movwf	___bmul@multiplicand
  4124  064C  0856               	movf	sch_vid_delete_task@index,w
  4125  064D  120A  158A  2686  120A  118A  	fcall	___bmul
  4126  0652  3E21               	addlw	(low ((_sch_tasks| 0+1)))& (0+255)
  4127  0653  0084               	movwf	4
  4128  0654  3000               	movlw	0
  4129  0655  1383               	bcf	3,7	;select IRP bank0
  4130  0656  0080               	movwf	0
  4131  0657  0A84               	incf	4,f
  4132  0658  3000               	movlw	0
  4133  0659  0080               	movwf	0
  4134  065A  0A84               	incf	4,f
  4135  065B  3000               	movlw	0
  4136  065C  0080               	movwf	0
  4137  065D  0A84               	incf	4,f
  4138  065E  3000               	movlw	0
  4139  065F  0080               	movwf	0
  4140                           
  4141                           ;scheduler.c: 93:         sch_tasks[index].period = 0;
  4142  0660  300D               	movlw	13
  4143  0661  1283               	bcf	3,5	;RP0=0, select bank0
  4144  0662  1303               	bcf	3,6	;RP1=0, select bank0
  4145  0663  00D5               	movwf	??_sch_vid_delete_task
  4146  0664  0855               	movf	??_sch_vid_delete_task,w
  4147  0665  00D1               	movwf	___bmul@multiplicand
  4148  0666  0856               	movf	sch_vid_delete_task@index,w
  4149  0667  120A  158A  2686  120A  118A  	fcall	___bmul
  4150  066C  3E25               	addlw	(low ((_sch_tasks| 0+5)))& (0+255)
  4151  066D  0084               	movwf	4
  4152  066E  3000               	movlw	0
  4153  066F  1383               	bcf	3,7	;select IRP bank0
  4154  0670  0080               	movwf	0
  4155  0671  0A84               	incf	4,f
  4156  0672  3000               	movlw	0
  4157  0673  0080               	movwf	0
  4158  0674  0A84               	incf	4,f
  4159  0675  3000               	movlw	0
  4160  0676  0080               	movwf	0
  4161  0677  0A84               	incf	4,f
  4162  0678  3000               	movlw	0
  4163  0679  0080               	movwf	0
  4164                           
  4165                           ;scheduler.c: 94:         sch_tasks[index].runMe = 0;
  4166  067A  300D               	movlw	13
  4167  067B  1283               	bcf	3,5	;RP0=0, select bank0
  4168  067C  1303               	bcf	3,6	;RP1=0, select bank0
  4169  067D  00D5               	movwf	??_sch_vid_delete_task
  4170  067E  0855               	movf	??_sch_vid_delete_task,w
  4171  067F  00D1               	movwf	___bmul@multiplicand
  4172  0680  0856               	movf	sch_vid_delete_task@index,w
  4173  0681  120A  158A  2686  120A  118A  	fcall	___bmul
  4174  0686  3E29               	addlw	(low ((_sch_tasks| 0+9)))& (0+255)
  4175  0687  0084               	movwf	4
  4176  0688  3000               	movlw	0
  4177  0689  1383               	bcf	3,7	;select IRP bank0
  4178  068A  0080               	movwf	0
  4179  068B  0A84               	incf	4,f
  4180  068C  3000               	movlw	0
  4181  068D  0080               	movwf	0
  4182  068E  0A84               	incf	4,f
  4183  068F  3000               	movlw	0
  4184  0690  0080               	movwf	0
  4185  0691  0A84               	incf	4,f
  4186  0692  3000               	movlw	0
  4187  0693  0080               	movwf	0
  4188  0694                     l284:	
  4189  0694  0008               	return
  4190  0695                     __end_of_sch_vid_delete_task:	
  4191                           
  4192                           	psect	text17
  4193  0F74                     __ptext17:	
  4194 ;; *************** function _eeprom_vid_write *****************
  4195 ;; Defined at:
  4196 ;;		line 9 in file "eeprom.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  address         1    wreg     unsigned char 
  4199 ;;  data            1    6[BANK0 ] unsigned char 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;  address         1    7[BANK0 ] unsigned char 
  4202 ;;  gie_Status      1    8[BANK0 ] unsigned char 
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      void 
  4205 ;; Registers used:
  4206 ;;		wreg, status,2
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4212 ;;      Params:         0       1       0       0       0
  4213 ;;      Locals:         0       2       0       0       0
  4214 ;;      Temps:          0       0       0       0       0
  4215 ;;      Totals:         0       3       0       0       0
  4216 ;;Total ram usage:        3 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    3
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_checkButtons
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           
  4227                           ;psect for function _eeprom_vid_write
  4228  0F74                     _eeprom_vid_write:	
  4229                           
  4230                           ;incstack = 0
  4231                           ; Regs used in _eeprom_vid_write: [wreg+status,2]
  4232                           ;eeprom_vid_write@address stored from wreg
  4233  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  4234  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  4235  0F76  00D2               	movwf	eeprom_vid_write@address
  4236  0F77                     l2188:	
  4237  0F77                     l417:	
  4238                           ;eeprom.c: 9: void eeprom_vid_write(u8 address, u8 data);eeprom.c: 10: {;eeprom.c: 11:  
      +                            unsigned char gie_Status;;eeprom.c: 13:     while(WR);
  4239                           
  4240  0F77  1683               	bsf	3,5	;RP0=1, select bank3
  4241  0F78  1703               	bsf	3,6	;RP1=1, select bank3
  4242  0F79  188C               	btfsc	12,1	;volsfr
  4243  0F7A  2F7C               	goto	u1551
  4244  0F7B  2F7D               	goto	u1550
  4245  0F7C                     u1551:	
  4246  0F7C  2F77               	goto	l417
  4247  0F7D                     u1550:	
  4248  0F7D                     l2190:	
  4249                           
  4250                           ;eeprom.c: 14:     EEADR=address;
  4251  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  4252  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  4253  0F7F  0852               	movf	eeprom_vid_write@address,w
  4254  0F80  1283               	bcf	3,5	;RP0=0, select bank2
  4255  0F81  1703               	bsf	3,6	;RP1=1, select bank2
  4256  0F82  008D               	movwf	13	;volatile
  4257                           
  4258                           ;eeprom.c: 15:     EEDATA=data;
  4259  0F83  1283               	bcf	3,5	;RP0=0, select bank0
  4260  0F84  1303               	bcf	3,6	;RP1=0, select bank0
  4261  0F85  0851               	movf	eeprom_vid_write@data,w
  4262  0F86  1283               	bcf	3,5	;RP0=0, select bank2
  4263  0F87  1703               	bsf	3,6	;RP1=1, select bank2
  4264  0F88  008C               	movwf	12	;volatile
  4265  0F89                     l2192:	
  4266                           
  4267                           ;eeprom.c: 16:     WREN=1;
  4268  0F89  1683               	bsf	3,5	;RP0=1, select bank3
  4269  0F8A  1703               	bsf	3,6	;RP1=1, select bank3
  4270  0F8B  150C               	bsf	12,2	;volsfr
  4271  0F8C                     l2194:	
  4272                           
  4273                           ;eeprom.c: 17:     gie_Status = GIE;
  4274  0F8C  3000               	movlw	0
  4275  0F8D  1B8B               	btfsc	11,7	;volatile
  4276  0F8E  3001               	movlw	1
  4277  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  4278  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  4279  0F91  00D3               	movwf	eeprom_vid_write@gie_Status
  4280  0F92                     l2196:	
  4281                           
  4282                           ;eeprom.c: 18:     GIE = 0;
  4283  0F92  138B               	bcf	11,7	;volatile
  4284  0F93                     l2198:	
  4285                           
  4286                           ;eeprom.c: 19:     EECON2=0x55;
  4287  0F93  3055               	movlw	85
  4288  0F94  1683               	bsf	3,5	;RP0=1, select bank3
  4289  0F95  1703               	bsf	3,6	;RP1=1, select bank3
  4290  0F96  008D               	movwf	13	;volsfr
  4291  0F97                     l2200:	
  4292                           
  4293                           ;eeprom.c: 20:     EECON2=0xaa;
  4294  0F97  30AA               	movlw	170
  4295  0F98  008D               	movwf	13	;volsfr
  4296  0F99                     l2202:	
  4297                           
  4298                           ;eeprom.c: 21:     WR=1;
  4299  0F99  148C               	bsf	12,1	;volsfr
  4300  0F9A                     l2204:	
  4301                           
  4302                           ;eeprom.c: 22:     GIE = gie_Status;
  4303  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  4304  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  4305  0F9C  1853               	btfsc	eeprom_vid_write@gie_Status,0
  4306  0F9D  2F9F               	goto	u1561
  4307  0F9E  2FA1               	goto	u1560
  4308  0F9F                     u1561:	
  4309  0F9F  178B               	bsf	11,7	;volatile
  4310  0FA0  2FA2               	goto	u1574
  4311  0FA1                     u1560:	
  4312  0FA1  138B               	bcf	11,7	;volatile
  4313  0FA2                     u1574:	
  4314  0FA2                     l2206:	
  4315                           
  4316                           ;eeprom.c: 23:     WREN=0;
  4317  0FA2  1683               	bsf	3,5	;RP0=1, select bank3
  4318  0FA3  1703               	bsf	3,6	;RP1=1, select bank3
  4319  0FA4  110C               	bcf	12,2	;volsfr
  4320  0FA5                     l420:	
  4321  0FA5  0008               	return
  4322  0FA6                     __end_of_eeprom_vid_write:	
  4323                           
  4324                           	psect	text18
  4325  0EB7                     __ptext18:	
  4326 ;; *************** function _dio_u8_read_pin_value *****************
  4327 ;; Defined at:
  4328 ;;		line 75 in file "dio.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  portNumber      1    wreg     unsigned char 
  4331 ;;  index           1    9[BANK0 ] unsigned char 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  portNumber      1   11[BANK0 ] unsigned char 
  4334 ;;  port            1   12[BANK0 ] unsigned char 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      unsigned char 
  4337 ;; Registers used:
  4338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4344 ;;      Params:         0       1       0       0       0
  4345 ;;      Locals:         0       2       0       0       0
  4346 ;;      Temps:          0       1       0       0       0
  4347 ;;      Totals:         0       4       0       0       0
  4348 ;;Total ram usage:        4 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    4
  4351 ;; This function calls:
  4352 ;;		_dio_u8_read_port_value
  4353 ;; This function is called by:
  4354 ;;		_checkButtons
  4355 ;;		_ssd_set_state
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           
  4360                           ;psect for function _dio_u8_read_pin_value
  4361  0EB7                     _dio_u8_read_pin_value:	
  4362                           
  4363                           ;incstack = 0
  4364                           ; Regs used in _dio_u8_read_pin_value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4365                           ;dio_u8_read_pin_value@portNumber stored from wreg
  4366  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  4367  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  4368  0EB9  00D6               	movwf	dio_u8_read_pin_value@portNumber
  4369  0EBA                     l1938:	
  4370                           
  4371                           ;dio.c: 76:  u8 port = dio_u8_read_port_value(portNumber);
  4372  0EBA  0856               	movf	dio_u8_read_pin_value@portNumber,w
  4373  0EBB  120A  158A  26F5  120A  158A  	fcall	_dio_u8_read_port_value
  4374  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  4375  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  4376  0EC2  00D5               	movwf	??_dio_u8_read_pin_value
  4377  0EC3  0855               	movf	??_dio_u8_read_pin_value,w
  4378  0EC4  00D7               	movwf	dio_u8_read_pin_value@port
  4379  0EC5                     l1940:	
  4380                           
  4381                           ;dio.c: 77:  return ((port>>index)&1);
  4382  0EC5  0857               	movf	dio_u8_read_pin_value@port,w
  4383  0EC6  00D5               	movwf	??_dio_u8_read_pin_value
  4384  0EC7  0A54               	incf	dio_u8_read_pin_value@index,w
  4385  0EC8  2ECB               	goto	u1144
  4386  0EC9                     u1145:	
  4387  0EC9  1003               	clrc
  4388  0ECA  0CD5               	rrf	??_dio_u8_read_pin_value,f
  4389  0ECB                     u1144:	
  4390  0ECB  3EFF               	addlw	-1
  4391  0ECC  1D03               	skipz
  4392  0ECD  2EC9               	goto	u1145
  4393  0ECE  0855               	movf	??_dio_u8_read_pin_value,w
  4394  0ECF  3901               	andlw	1
  4395  0ED0                     l109:	
  4396  0ED0  0008               	return
  4397  0ED1                     __end_of_dio_u8_read_pin_value:	
  4398                           
  4399                           	psect	text19
  4400  0EF5                     __ptext19:	
  4401 ;; *************** function _dio_u8_read_port_value *****************
  4402 ;; Defined at:
  4403 ;;		line 53 in file "dio.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  portNumber      1    wreg     unsigned char 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  portNumber      1    8[BANK0 ] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      unsigned char 
  4410 ;; Registers used:
  4411 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4417 ;;      Params:         0       0       0       0       0
  4418 ;;      Locals:         0       1       0       0       0
  4419 ;;      Temps:          0       2       0       0       0
  4420 ;;      Totals:         0       3       0       0       0
  4421 ;;Total ram usage:        3 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    3
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_dio_u8_read_pin_value
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           
  4432                           ;psect for function _dio_u8_read_port_value
  4433  0EF5                     _dio_u8_read_port_value:	
  4434                           
  4435                           ;incstack = 0
  4436                           ; Regs used in _dio_u8_read_port_value: [wreg-fsr0h+status,2+status,0]
  4437                           ;dio_u8_read_port_value@portNumber stored from wreg
  4438  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  4439  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  4440  0EF7  00D3               	movwf	dio_u8_read_port_value@portNumber
  4441  0EF8                     l1892:	
  4442                           
  4443                           ;dio.c: 54:  switch (portNumber) {
  4444  0EF8  2F03               	goto	l1926
  4445  0EF9                     l1894:	
  4446                           
  4447                           ;dio.c: 56:   return PORTA;
  4448  0EF9  0805               	movf	5,w	;volatile
  4449  0EFA  2F1D               	goto	l101
  4450  0EFB                     l1900:	
  4451                           
  4452                           ;dio.c: 59:   return PORTB;
  4453  0EFB  0806               	movf	6,w	;volatile
  4454  0EFC  2F1D               	goto	l101
  4455  0EFD                     l1906:	
  4456                           
  4457                           ;dio.c: 62:   return PORTC;
  4458  0EFD  0807               	movf	7,w	;volatile
  4459  0EFE  2F1D               	goto	l101
  4460  0EFF                     l1912:	
  4461                           
  4462                           ;dio.c: 65:   return PORTD;
  4463  0EFF  0808               	movf	8,w	;volatile
  4464  0F00  2F1D               	goto	l101
  4465  0F01                     l1918:	
  4466                           
  4467                           ;dio.c: 68:   return PORTE;
  4468  0F01  0809               	movf	9,w	;volatile
  4469  0F02  2F1D               	goto	l101
  4470  0F03                     l1926:	
  4471  0F03  0853               	movf	dio_u8_read_port_value@portNumber,w
  4472  0F04  00D1               	movwf	??_dio_u8_read_port_value
  4473  0F05  01D2               	clrf	??_dio_u8_read_port_value+1
  4474                           
  4475                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4476                           ; Switch size 1, requested type "simple"
  4477                           ; Number of cases is 1, Range of values is 0 to 0
  4478                           ; switch strategies available:
  4479                           ; Name         Instructions Cycles
  4480                           ; simple_byte            4     3 (average)
  4481                           ; direct_byte           11     8 (fixed)
  4482                           ; jumptable            260     6 (fixed)
  4483                           ;	Chosen strategy is simple_byte
  4484  0F06  0852               	movf	??_dio_u8_read_port_value+1,w
  4485  0F07  3A00               	xorlw	0	; case 0
  4486  0F08  1903               	skipnz
  4487  0F09  2F0B               	goto	l2816
  4488  0F0A  2F1C               	goto	l1928
  4489  0F0B                     l2816:	
  4490                           
  4491                           ; Switch size 1, requested type "simple"
  4492                           ; Number of cases is 5, Range of values is 0 to 4
  4493                           ; switch strategies available:
  4494                           ; Name         Instructions Cycles
  4495                           ; simple_byte           16     9 (average)
  4496                           ; direct_byte           23     8 (fixed)
  4497                           ; jumptable            260     6 (fixed)
  4498                           ;	Chosen strategy is simple_byte
  4499  0F0B  0851               	movf	??_dio_u8_read_port_value,w
  4500  0F0C  3A00               	xorlw	0	; case 0
  4501  0F0D  1903               	skipnz
  4502  0F0E  2EF9               	goto	l1894
  4503  0F0F  3A01               	xorlw	1	; case 1
  4504  0F10  1903               	skipnz
  4505  0F11  2EFB               	goto	l1900
  4506  0F12  3A03               	xorlw	3	; case 2
  4507  0F13  1903               	skipnz
  4508  0F14  2EFD               	goto	l1906
  4509  0F15  3A01               	xorlw	1	; case 3
  4510  0F16  1903               	skipnz
  4511  0F17  2EFF               	goto	l1912
  4512  0F18  3A07               	xorlw	7	; case 4
  4513  0F19  1903               	skipnz
  4514  0F1A  2F01               	goto	l1918
  4515  0F1B  2F1C               	goto	l1928
  4516  0F1C                     l1928:	
  4517                           
  4518                           ;dio.c: 71:  return 0;
  4519  0F1C  3000               	movlw	0
  4520  0F1D                     l101:	
  4521  0F1D  0008               	return
  4522  0F1E                     __end_of_dio_u8_read_port_value:	
  4523                           
  4524                           	psect	text20
  4525  04B8                     __ptext20:	
  4526 ;; *************** function _sch_u8_add_task *****************
  4527 ;; Defined at:
  4528 ;;		line 49 in file "scheduler.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;  taskFunction    1    wreg     PTR FTN()void 
  4531 ;;		 -> checkButtons(1), showNumber25(1), 
  4532 ;;  delay           4   10[BANK0 ] const unsigned long 
  4533 ;;  period          4   14[BANK0 ] const unsigned long 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;  taskFunction    1   20[BANK0 ] PTR FTN()void 
  4536 ;;		 -> checkButtons(1), showNumber25(1), 
  4537 ;;  index           1   21[BANK0 ] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      unsigned char 
  4540 ;; Registers used:
  4541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4547 ;;      Params:         0       8       0       0       0
  4548 ;;      Locals:         0       2       0       0       0
  4549 ;;      Temps:          0       2       0       0       0
  4550 ;;      Totals:         0      12       0       0       0
  4551 ;;Total ram usage:       12 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    4
  4554 ;; This function calls:
  4555 ;;		___bmul
  4556 ;; This function is called by:
  4557 ;;		_main
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function _sch_u8_add_task
  4563  04B8                     _sch_u8_add_task:	
  4564                           
  4565                           ;incstack = 0
  4566                           ; Regs used in _sch_u8_add_task: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4567                           ;sch_u8_add_task@taskFunction stored from wreg
  4568  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  4569  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  4570  04BA  00DF               	movwf	sch_u8_add_task@taskFunction
  4571  04BB                     l2394:	
  4572                           
  4573                           ;scheduler.c: 49: u8 sch_u8_add_task(void ( * taskFunction)(),;scheduler.c: 50:         
      +                          const u64 delay,;scheduler.c: 51:         const u64 period) {;scheduler.c: 52:     u8 in
      +                          dex = 0;
  4574  04BB  01E0               	clrf	sch_u8_add_task@index
  4575                           
  4576                           ;scheduler.c: 55:     while ((sch_tasks[index].taskFunction != 0) && (index < 3)) {
  4577  04BC  2CC1               	goto	l2398
  4578  04BD                     l2396:	
  4579                           
  4580                           ;scheduler.c: 56:         index++;
  4581  04BD  3001               	movlw	1
  4582  04BE  00DD               	movwf	??_sch_u8_add_task
  4583  04BF  085D               	movf	??_sch_u8_add_task,w
  4584  04C0  07E0               	addwf	sch_u8_add_task@index,f
  4585  04C1                     l2398:	
  4586                           
  4587                           ;scheduler.c: 55:     while ((sch_tasks[index].taskFunction != 0) && (index < 3)) {
  4588  04C1  300D               	movlw	13
  4589  04C2  00DD               	movwf	??_sch_u8_add_task
  4590  04C3  085D               	movf	??_sch_u8_add_task,w
  4591  04C4  00D1               	movwf	___bmul@multiplicand
  4592  04C5  0860               	movf	sch_u8_add_task@index,w
  4593  04C6  120A  158A  2686  120A  118A  	fcall	___bmul
  4594  04CB  3E20               	addlw	(low (_sch_tasks| 0))& (0+255)
  4595  04CC  0084               	movwf	4
  4596  04CD  1383               	bcf	3,7	;select IRP bank0
  4597  04CE  0800               	movf	0,w
  4598  04CF  1903               	btfsc	3,2
  4599  04D0  2CD2               	goto	u1951
  4600  04D1  2CD3               	goto	u1950
  4601  04D2                     u1951:	
  4602  04D2  2CDB               	goto	l2402
  4603  04D3                     u1950:	
  4604  04D3                     l2400:	
  4605  04D3  3003               	movlw	3
  4606  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  4607  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  4608  04D6  0260               	subwf	sch_u8_add_task@index,w
  4609  04D7  1C03               	skipc
  4610  04D8  2CDA               	goto	u1961
  4611  04D9  2CDB               	goto	u1960
  4612  04DA                     u1961:	
  4613  04DA  2CBD               	goto	l2396
  4614  04DB                     u1960:	
  4615  04DB                     l2402:	
  4616                           
  4617                           ;scheduler.c: 60:     if (index == 3) {
  4618  04DB  3003               	movlw	3
  4619  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  4620  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  4621  04DE  0660               	xorwf	sch_u8_add_task@index,w
  4622  04DF  1D03               	btfss	3,2
  4623  04E0  2CE2               	goto	u1971
  4624  04E1  2CE3               	goto	u1970
  4625  04E2                     u1971:	
  4626  04E2  2CE4               	goto	l2406
  4627  04E3                     u1970:	
  4628  04E3  2D43               	goto	l273
  4629  04E4                     l2406:	
  4630                           
  4631                           ;scheduler.c: 66:     sch_tasks[index].taskFunction = taskFunction;
  4632  04E4  085F               	movf	sch_u8_add_task@taskFunction,w
  4633  04E5  00DD               	movwf	??_sch_u8_add_task
  4634  04E6  300D               	movlw	13
  4635  04E7  00DE               	movwf	??_sch_u8_add_task+1
  4636  04E8  085E               	movf	??_sch_u8_add_task+1,w
  4637  04E9  00D1               	movwf	___bmul@multiplicand
  4638  04EA  0860               	movf	sch_u8_add_task@index,w
  4639  04EB  120A  158A  2686  120A  118A  	fcall	___bmul
  4640  04F0  3E20               	addlw	(low (_sch_tasks| 0))& (0+255)
  4641  04F1  0084               	movwf	4
  4642  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  4643  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  4644  04F4  085D               	movf	??_sch_u8_add_task,w
  4645  04F5  1383               	bcf	3,7	;select IRP bank0
  4646  04F6  0080               	movwf	0
  4647                           
  4648                           ;scheduler.c: 67:     sch_tasks[index].delay = delay;
  4649  04F7  300D               	movlw	13
  4650  04F8  00DD               	movwf	??_sch_u8_add_task
  4651  04F9  085D               	movf	??_sch_u8_add_task,w
  4652  04FA  00D1               	movwf	___bmul@multiplicand
  4653  04FB  0860               	movf	sch_u8_add_task@index,w
  4654  04FC  120A  158A  2686  120A  118A  	fcall	___bmul
  4655  0501  3E21               	addlw	(low ((_sch_tasks| 0+1)))& (0+255)
  4656  0502  0084               	movwf	4
  4657  0503  1283               	bcf	3,5	;RP0=0, select bank0
  4658  0504  1303               	bcf	3,6	;RP1=0, select bank0
  4659  0505  0855               	movf	sch_u8_add_task@delay,w
  4660  0506  1383               	bcf	3,7	;select IRP bank0
  4661  0507  0080               	movwf	0
  4662  0508  0A84               	incf	4,f
  4663  0509  0856               	movf	sch_u8_add_task@delay+1,w
  4664  050A  0080               	movwf	0
  4665  050B  0A84               	incf	4,f
  4666  050C  0857               	movf	sch_u8_add_task@delay+2,w
  4667  050D  0080               	movwf	0
  4668  050E  0A84               	incf	4,f
  4669  050F  0858               	movf	sch_u8_add_task@delay+3,w
  4670  0510  0080               	movwf	0
  4671                           
  4672                           ;scheduler.c: 68:     sch_tasks[index].period = period;
  4673  0511  300D               	movlw	13
  4674  0512  00DD               	movwf	??_sch_u8_add_task
  4675  0513  085D               	movf	??_sch_u8_add_task,w
  4676  0514  00D1               	movwf	___bmul@multiplicand
  4677  0515  0860               	movf	sch_u8_add_task@index,w
  4678  0516  120A  158A  2686  120A  118A  	fcall	___bmul
  4679  051B  3E25               	addlw	(low ((_sch_tasks| 0+5)))& (0+255)
  4680  051C  0084               	movwf	4
  4681  051D  1283               	bcf	3,5	;RP0=0, select bank0
  4682  051E  1303               	bcf	3,6	;RP1=0, select bank0
  4683  051F  0859               	movf	sch_u8_add_task@period,w
  4684  0520  1383               	bcf	3,7	;select IRP bank0
  4685  0521  0080               	movwf	0
  4686  0522  0A84               	incf	4,f
  4687  0523  085A               	movf	sch_u8_add_task@period+1,w
  4688  0524  0080               	movwf	0
  4689  0525  0A84               	incf	4,f
  4690  0526  085B               	movf	sch_u8_add_task@period+2,w
  4691  0527  0080               	movwf	0
  4692  0528  0A84               	incf	4,f
  4693  0529  085C               	movf	sch_u8_add_task@period+3,w
  4694  052A  0080               	movwf	0
  4695                           
  4696                           ;scheduler.c: 69:     sch_tasks[index].runMe = 0;
  4697  052B  300D               	movlw	13
  4698  052C  00DD               	movwf	??_sch_u8_add_task
  4699  052D  085D               	movf	??_sch_u8_add_task,w
  4700  052E  00D1               	movwf	___bmul@multiplicand
  4701  052F  0860               	movf	sch_u8_add_task@index,w
  4702  0530  120A  158A  2686  120A  118A  	fcall	___bmul
  4703  0535  3E29               	addlw	(low ((_sch_tasks| 0+9)))& (0+255)
  4704  0536  0084               	movwf	4
  4705  0537  3000               	movlw	0
  4706  0538  1383               	bcf	3,7	;select IRP bank0
  4707  0539  0080               	movwf	0
  4708  053A  0A84               	incf	4,f
  4709  053B  3000               	movlw	0
  4710  053C  0080               	movwf	0
  4711  053D  0A84               	incf	4,f
  4712  053E  3000               	movlw	0
  4713  053F  0080               	movwf	0
  4714  0540  0A84               	incf	4,f
  4715  0541  3000               	movlw	0
  4716  0542  0080               	movwf	0
  4717  0543                     l273:	
  4718  0543  0008               	return
  4719  0544                     __end_of_sch_u8_add_task:	
  4720                           
  4721                           	psect	text21
  4722  0E86                     __ptext21:	
  4723 ;; *************** function ___bmul *****************
  4724 ;; Defined at:
  4725 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  multiplier      1    wreg     unsigned char 
  4728 ;;  multiplicand    1    6[BANK0 ] unsigned char 
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  multiplier      1    9[BANK0 ] unsigned char 
  4731 ;;  product         1    8[BANK0 ] unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      unsigned char 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4741 ;;      Params:         0       1       0       0       0
  4742 ;;      Locals:         0       2       0       0       0
  4743 ;;      Temps:          0       1       0       0       0
  4744 ;;      Totals:         0       4       0       0       0
  4745 ;;Total ram usage:        4 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:    3
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_sch_update
  4752 ;;		_sch_u8_add_task
  4753 ;;		_sch_vid_dispatch_tasks
  4754 ;;		_sch_vid_delete_task
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           
  4759                           ;psect for function ___bmul
  4760  0E86                     ___bmul:	
  4761                           
  4762                           ;incstack = 0
  4763                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4764                           ;___bmul@multiplier stored from wreg
  4765  0E86  1283               	bcf	3,5	;RP0=0, select bank0
  4766  0E87  1303               	bcf	3,6	;RP1=0, select bank0
  4767  0E88  00D4               	movwf	___bmul@multiplier
  4768  0E89                     l2208:	
  4769  0E89  01D3               	clrf	___bmul@product
  4770  0E8A                     l2210:	
  4771  0E8A  1C54               	btfss	___bmul@multiplier,0
  4772  0E8B  2E8D               	goto	u1581
  4773  0E8C  2E8E               	goto	u1580
  4774  0E8D                     u1581:	
  4775  0E8D  2E92               	goto	l2214
  4776  0E8E                     u1580:	
  4777  0E8E                     l2212:	
  4778  0E8E  0851               	movf	___bmul@multiplicand,w
  4779  0E8F  00D2               	movwf	??___bmul
  4780  0E90  0852               	movf	??___bmul,w
  4781  0E91  07D3               	addwf	___bmul@product,f
  4782  0E92                     l2214:	
  4783  0E92  1003               	clrc
  4784  0E93  0DD1               	rlf	___bmul@multiplicand,f
  4785  0E94                     l2216:	
  4786  0E94  1003               	clrc
  4787  0E95  0CD4               	rrf	___bmul@multiplier,f
  4788  0E96  0854               	movf	___bmul@multiplier,w
  4789  0E97  1D03               	btfss	3,2
  4790  0E98  2E9A               	goto	u1591
  4791  0E99  2E9B               	goto	u1590
  4792  0E9A                     u1591:	
  4793  0E9A  2E8A               	goto	l2210
  4794  0E9B                     u1590:	
  4795  0E9B                     l2218:	
  4796  0E9B  0853               	movf	___bmul@product,w
  4797  0E9C                     l538:	
  4798  0E9C  0008               	return
  4799  0E9D                     __end_of___bmul:	
  4800                           
  4801                           	psect	text22
  4802  0E9D                     __ptext22:	
  4803 ;; *************** function _eeprom_u8_read *****************
  4804 ;; Defined at:
  4805 ;;		line 28 in file "eeprom.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  address         1    wreg     unsigned char 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  address         1    6[BANK0 ] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      unsigned char 
  4812 ;; Registers used:
  4813 ;;		wreg
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4819 ;;      Params:         0       0       0       0       0
  4820 ;;      Locals:         0       1       0       0       0
  4821 ;;      Temps:          0       0       0       0       0
  4822 ;;      Totals:         0       1       0       0       0
  4823 ;;Total ram usage:        1 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    3
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_main
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           
  4834                           ;psect for function _eeprom_u8_read
  4835  0E9D                     _eeprom_u8_read:	
  4836                           
  4837                           ;incstack = 0
  4838                           ; Regs used in _eeprom_u8_read: [wreg]
  4839                           ;eeprom_u8_read@address stored from wreg
  4840  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  4841  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  4842  0E9F  00D1               	movwf	eeprom_u8_read@address
  4843  0EA0                     l2368:	
  4844  0EA0                     l423:	
  4845                           ;eeprom.c: 28: u8 eeprom_u8_read (u8 address);eeprom.c: 29: {;eeprom.c: 30:     while(RD
      +                           || WR);
  4846                           
  4847  0EA0  1683               	bsf	3,5	;RP0=1, select bank3
  4848  0EA1  1703               	bsf	3,6	;RP1=1, select bank3
  4849  0EA2  180C               	btfsc	12,0	;volsfr
  4850  0EA3  2EA5               	goto	u1921
  4851  0EA4  2EA6               	goto	u1920
  4852  0EA5                     u1921:	
  4853  0EA5  2EA0               	goto	l423
  4854  0EA6                     u1920:	
  4855  0EA6                     l2370:	
  4856  0EA6  188C               	btfsc	12,1	;volsfr
  4857  0EA7  2EA9               	goto	u1931
  4858  0EA8  2EAA               	goto	u1930
  4859  0EA9                     u1931:	
  4860  0EA9  2EA0               	goto	l423
  4861  0EAA                     u1930:	
  4862  0EAA                     l2372:	
  4863                           
  4864                           ;eeprom.c: 31:     EEADR=address;
  4865  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  4866  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  4867  0EAC  0851               	movf	eeprom_u8_read@address,w
  4868  0EAD  1283               	bcf	3,5	;RP0=0, select bank2
  4869  0EAE  1703               	bsf	3,6	;RP1=1, select bank2
  4870  0EAF  008D               	movwf	13	;volatile
  4871  0EB0                     l2374:	
  4872                           
  4873                           ;eeprom.c: 32:     RD = 1;
  4874  0EB0  1683               	bsf	3,5	;RP0=1, select bank3
  4875  0EB1  1703               	bsf	3,6	;RP1=1, select bank3
  4876  0EB2  140C               	bsf	12,0	;volsfr
  4877                           
  4878                           ;eeprom.c: 33:     return(EEDATA);
  4879  0EB3  1283               	bcf	3,5	;RP0=0, select bank2
  4880  0EB4  1703               	bsf	3,6	;RP1=1, select bank2
  4881  0EB5  080C               	movf	12,w	;volatile
  4882  0EB6                     l426:	
  4883  0EB6  0008               	return
  4884  0EB7                     __end_of_eeprom_u8_read:	
  4885                           
  4886                           	psect	text23
  4887  0FA6                     __ptext23:	
  4888 ;; *************** function _timer_isr *****************
  4889 ;; Defined at:
  4890 ;;		line 21 in file "timer.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;		None
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;		None
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      void 
  4897 ;; Registers used:
  4898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4904 ;;      Params:         0       0       0       0       0
  4905 ;;      Locals:         0       0       0       0       0
  4906 ;;      Temps:          0       6       0       0       0
  4907 ;;      Totals:         0       6       0       0       0
  4908 ;;Total ram usage:        6 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; Hardware stack levels required when called:    2
  4911 ;; This function calls:
  4912 ;;		Absolute function
  4913 ;;		_sch_update
  4914 ;; This function is called by:
  4915 ;;		Interrupt level 1
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           
  4920                           ;psect for function _timer_isr
  4921  0FA6                     _timer_isr:	
  4922  0FA6                     i1l2548:	
  4923                           
  4924                           ;timer.c: 22:     if (TMR0IF == 1) {
  4925  0FA6  1D0B               	btfss	11,2	;volatile
  4926  0FA7  2FA9               	goto	u216_21
  4927  0FA8  2FAA               	goto	u216_20
  4928  0FA9                     u216_21:	
  4929  0FA9  2FB1               	goto	i1l2554
  4930  0FAA                     u216_20:	
  4931  0FAA                     i1l2550:	
  4932                           
  4933                           ;timer.c: 23:         TMR0IF = 0;
  4934  0FAA  110B               	bcf	11,2	;volatile
  4935  0FAB                     i1l2552:	
  4936                           
  4937                           ;timer.c: 24:         timer0_isr();
  4938  0FAB  087D               	movf	_timer0_isr,w
  4939  0FAC  120A  118A  2032  120A  158A  	fcall	i1fptable
  4940  0FB1                     i1l2554:	
  4941                           
  4942                           ;timer.c: 26:     if (((PIR1>>TMR1IF)&1) == 1) {
  4943  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  4944  0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  4945  0FB3  080C               	movf	12,w	;volatile
  4946  0FB4  00CB               	movwf	??_timer_isr
  4947  0FB5  3000               	movlw	0
  4948  0FB6  180C               	btfsc	12,0	;volatile
  4949  0FB7  3001               	movlw	1
  4950  0FB8  3E01               	addlw	1
  4951  0FB9  2FBC               	goto	u217_24
  4952  0FBA                     u217_25:	
  4953  0FBA  1003               	clrc
  4954  0FBB  0CCB               	rrf	??_timer_isr,f
  4955  0FBC                     u217_24:	
  4956  0FBC  3EFF               	addlw	-1
  4957  0FBD  1D03               	skipz
  4958  0FBE  2FBA               	goto	u217_25
  4959  0FBF  1C4B               	btfss	??_timer_isr,0
  4960  0FC0  2FC2               	goto	u218_21
  4961  0FC1  2FC3               	goto	u218_20
  4962  0FC2                     u218_21:	
  4963  0FC2  2FD4               	goto	i1l320
  4964  0FC3                     u218_20:	
  4965  0FC3                     i1l2556:	
  4966                           
  4967                           ;timer.c: 28:         timer1_isr();
  4968  0FC3  3001               	movlw	1
  4969  0FC4  00CB               	movwf	??_timer_isr
  4970  0FC5  3000               	movlw	0
  4971  0FC6  180C               	btfsc	12,0	;volatile
  4972  0FC7  3001               	movlw	1
  4973  0FC8  3E01               	addlw	1
  4974  0FC9  2FCC               	goto	u219_24
  4975  0FCA                     u219_25:	
  4976  0FCA  1003               	clrc
  4977  0FCB  0DCB               	rlf	??_timer_isr,f
  4978  0FCC                     u219_24:	
  4979  0FCC  3EFF               	addlw	-1
  4980  0FCD  1D03               	skipz
  4981  0FCE  2FCA               	goto	u219_25
  4982  0FCF  084B               	movf	??_timer_isr,w
  4983  0FD0  3AFF               	xorlw	255
  4984  0FD1  00CC               	movwf	??_timer_isr+1
  4985  0FD2  084C               	movf	??_timer_isr+1,w
  4986  0FD3  058C               	andwf	12,f	;volatile
  4987  0FD4                     i1l320:	
  4988                           ;timer.c: 29:     }
  4989                           
  4990                           
  4991                           ;timer.c: 30:     if (((PIR1>>TMR2IF)&1) == 1) {
  4992  0FD4  080C               	movf	12,w	;volatile
  4993  0FD5  00CB               	movwf	??_timer_isr
  4994  0FD6  3000               	movlw	0
  4995  0FD7  188C               	btfsc	12,1	;volatile
  4996  0FD8  3001               	movlw	1
  4997  0FD9  3E01               	addlw	1
  4998  0FDA  2FDD               	goto	u220_24
  4999  0FDB                     u220_25:	
  5000  0FDB  1003               	clrc
  5001  0FDC  0CCB               	rrf	??_timer_isr,f
  5002  0FDD                     u220_24:	
  5003  0FDD  3EFF               	addlw	-1
  5004  0FDE  1D03               	skipz
  5005  0FDF  2FDB               	goto	u220_25
  5006  0FE0  1C4B               	btfss	??_timer_isr,0
  5007  0FE1  2FE3               	goto	u221_21
  5008  0FE2  2FE4               	goto	u221_20
  5009  0FE3                     u221_21:	
  5010  0FE3  2FF5               	goto	i1l322
  5011  0FE4                     u221_20:	
  5012  0FE4                     i1l2558:	
  5013                           
  5014                           ;timer.c: 32:         timer2_isr();
  5015  0FE4  3001               	movlw	1
  5016  0FE5  00CB               	movwf	??_timer_isr
  5017  0FE6  3000               	movlw	0
  5018  0FE7  188C               	btfsc	12,1	;volatile
  5019  0FE8  3001               	movlw	1
  5020  0FE9  3E01               	addlw	1
  5021  0FEA  2FED               	goto	u222_24
  5022  0FEB                     u222_25:	
  5023  0FEB  1003               	clrc
  5024  0FEC  0DCB               	rlf	??_timer_isr,f
  5025  0FED                     u222_24:	
  5026  0FED  3EFF               	addlw	-1
  5027  0FEE  1D03               	skipz
  5028  0FEF  2FEB               	goto	u222_25
  5029  0FF0  084B               	movf	??_timer_isr,w
  5030  0FF1  3AFF               	xorlw	255
  5031  0FF2  00CC               	movwf	??_timer_isr+1
  5032  0FF3  084C               	movf	??_timer_isr+1,w
  5033  0FF4  058C               	andwf	12,f	;volatile
  5034  0FF5                     i1l322:	
  5035  0FF5  0850               	movf	??_timer_isr+5,w
  5036  0FF6  00FF               	movwf	btemp+1
  5037  0FF7  084F               	movf	??_timer_isr+4,w
  5038  0FF8  008A               	movwf	10
  5039  0FF9  084E               	movf	??_timer_isr+3,w
  5040  0FFA  0084               	movwf	4
  5041  0FFB  0E4D               	swapf	(??_timer_isr+2)^0,w
  5042  0FFC  0083               	movwf	3
  5043  0FFD  0EFE               	swapf	btemp,f
  5044  0FFE  0E7E               	swapf	btemp,w
  5045  0FFF  0009               	retfie
  5046  1000                     __end_of_timer_isr:	
  5047                           
  5048                           	psect	intentry
  5049  0004                     __pintentry:	
  5050                           ;incstack = 0
  5051                           ; Regs used in _timer_isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5052                           
  5053  0004                     interrupt_function:	
  5054  007E                     saved_w	set	btemp
  5055  0004  00FE               	movwf	btemp
  5056  0005  0E03               	swapf	3,w
  5057  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5058  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5059  0008  00CD               	movwf	??_timer_isr+2
  5060  0009  0804               	movf	4,w
  5061  000A  00CE               	movwf	??_timer_isr+3
  5062  000B  080A               	movf	10,w
  5063  000C  00CF               	movwf	??_timer_isr+4
  5064  000D  087F               	movf	btemp+1,w
  5065  000E  00D0               	movwf	??_timer_isr+5
  5066  000F  120A  158A  2FA6   	ljmp	_timer_isr
  5067                           
  5068                           	psect	text24
  5069  0211                     __ptext24:	
  5070 ;; *************** function _sch_update *****************
  5071 ;; Defined at:
  5072 ;;		line 29 in file "scheduler.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;		None
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  index           1   10[COMMON] unsigned char 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      void 
  5079 ;; Registers used:
  5080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5086 ;;      Params:         0       0       0       0       0
  5087 ;;      Locals:         1       0       0       0       0
  5088 ;;      Temps:          6       0       0       0       0
  5089 ;;      Totals:         7       0       0       0       0
  5090 ;;Total ram usage:        7 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; Hardware stack levels required when called:    1
  5093 ;; This function calls:
  5094 ;;		i1___bmul
  5095 ;; This function is called by:
  5096 ;;		_sch_vid_init
  5097 ;;		_timer_isr
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           
  5102                           ;psect for function _sch_update
  5103  0211                     _sch_update:	
  5104  0211                     i1l2448:	
  5105                           ;incstack = 0
  5106                           ; Regs used in _sch_update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5107                           
  5108                           
  5109                           ;scheduler.c: 30:     u8 index;;scheduler.c: 31:     for (index = 0; index < 3; index++)
      +                           {
  5110  0211  01FA               	clrf	sch_update@index
  5111  0212                     i1l2454:	
  5112                           
  5113                           ;scheduler.c: 33:         if (sch_tasks[index].taskFunction) {
  5114  0212  300D               	movlw	13
  5115  0213  00F4               	movwf	??_sch_update
  5116  0214  0874               	movf	??_sch_update,w
  5117  0215  00F0               	movwf	i1___bmul@multiplicand
  5118  0216  087A               	movf	sch_update@index,w
  5119  0217  120A  158A  2671  120A  118A  	fcall	i1___bmul
  5120  021C  3E20               	addlw	(low (_sch_tasks| 0))& (0+255)
  5121  021D  0084               	movwf	4
  5122  021E  1383               	bcf	3,7	;select IRP bank0
  5123  021F  0800               	movf	0,w
  5124  0220  1903               	btfsc	3,2
  5125  0221  2A23               	goto	u201_21
  5126  0222  2A24               	goto	u201_20
  5127  0223                     u201_21:	
  5128  0223  2AD5               	goto	i1l2464
  5129  0224                     u201_20:	
  5130  0224                     i1l2456:	
  5131                           
  5132                           ;scheduler.c: 34:             if (sch_tasks[index].delay == 0) {
  5133  0224  300D               	movlw	13
  5134  0225  00F4               	movwf	??_sch_update
  5135  0226  0874               	movf	??_sch_update,w
  5136  0227  00F0               	movwf	i1___bmul@multiplicand
  5137  0228  087A               	movf	sch_update@index,w
  5138  0229  120A  158A  2671  120A  118A  	fcall	i1___bmul
  5139  022E  3E21               	addlw	(low ((_sch_tasks| 0+1)))& (0+255)
  5140  022F  0084               	movwf	4
  5141  0230  1383               	bcf	3,7	;select IRP bank0
  5142  0231  0800               	movf	0,w
  5143  0232  00F5               	movwf	??_sch_update+1
  5144  0233  0A84               	incf	4,f
  5145  0234  0800               	movf	0,w
  5146  0235  00F6               	movwf	??_sch_update+2
  5147  0236  0A84               	incf	4,f
  5148  0237  0800               	movf	0,w
  5149  0238  00F7               	movwf	??_sch_update+3
  5150  0239  0A84               	incf	4,f
  5151  023A  0800               	movf	0,w
  5152  023B  00F8               	movwf	??_sch_update+4
  5153  023C  0878               	movf	??_sch_update+4,w
  5154  023D  0477               	iorwf	??_sch_update+3,w
  5155  023E  0476               	iorwf	??_sch_update+2,w
  5156  023F  0475               	iorwf	??_sch_update+1,w
  5157  0240  1D03               	skipz
  5158  0241  2A43               	goto	u202_21
  5159  0242  2A44               	goto	u202_20
  5160  0243                     u202_21:	
  5161  0243  2AB5               	goto	i1l2462
  5162  0244                     u202_20:	
  5163  0244                     i1l2458:	
  5164                           
  5165                           ;scheduler.c: 36:                 sch_tasks[index].runMe += 1;
  5166  0244  300D               	movlw	13
  5167  0245  00F4               	movwf	??_sch_update
  5168  0246  0874               	movf	??_sch_update,w
  5169  0247  00F0               	movwf	i1___bmul@multiplicand
  5170  0248  087A               	movf	sch_update@index,w
  5171  0249  120A  158A  2671  120A  118A  	fcall	i1___bmul
  5172  024E  3E29               	addlw	(low ((_sch_tasks| 0+9)))& (0+255)
  5173  024F  0084               	movwf	4
  5174  0250  3001               	movlw	1
  5175  0251  1383               	bcf	3,7	;select IRP bank0
  5176  0252  0780               	addwf	0,f
  5177  0253  0A84               	incf	4,f
  5178  0254  3000               	movlw	0
  5179  0255  1803               	skipnc
  5180  0256  3E01               	addlw	1
  5181  0257  1D03               	skipz
  5182  0258  0780               	addwf	0,f
  5183  0259  0A84               	incf	4,f
  5184  025A  3000               	movlw	0
  5185  025B  1803               	skipnc
  5186  025C  3E01               	addlw	1
  5187  025D  1D03               	skipz
  5188  025E  0780               	addwf	0,f
  5189  025F  0A84               	incf	4,f
  5190  0260  3000               	movlw	0
  5191  0261  1803               	skipnc
  5192  0262  3E01               	addlw	1
  5193  0263  0780               	addwf	0,f
  5194                           
  5195                           ;scheduler.c: 37:                 if (sch_tasks[index].period) {
  5196  0264  300D               	movlw	13
  5197  0265  00F4               	movwf	??_sch_update
  5198  0266  0874               	movf	??_sch_update,w
  5199  0267  00F0               	movwf	i1___bmul@multiplicand
  5200  0268  087A               	movf	sch_update@index,w
  5201  0269  120A  158A  2671  120A  118A  	fcall	i1___bmul
  5202  026E  3E25               	addlw	(low ((_sch_tasks| 0+5)))& (0+255)
  5203  026F  0084               	movwf	4
  5204  0270  1383               	bcf	3,7	;select IRP bank0
  5205  0271  0800               	movf	0,w
  5206  0272  00F5               	movwf	??_sch_update+1
  5207  0273  0A84               	incf	4,f
  5208  0274  0800               	movf	0,w
  5209  0275  00F6               	movwf	??_sch_update+2
  5210  0276  0A84               	incf	4,f
  5211  0277  0800               	movf	0,w
  5212  0278  00F7               	movwf	??_sch_update+3
  5213  0279  0A84               	incf	4,f
  5214  027A  0800               	movf	0,w
  5215  027B  00F8               	movwf	??_sch_update+4
  5216  027C  0878               	movf	??_sch_update+4,w
  5217  027D  0477               	iorwf	??_sch_update+3,w
  5218  027E  0476               	iorwf	??_sch_update+2,w
  5219  027F  0475               	iorwf	??_sch_update+1,w
  5220  0280  1903               	skipnz
  5221  0281  2A83               	goto	u203_21
  5222  0282  2A84               	goto	u203_20
  5223  0283                     u203_21:	
  5224  0283  2AD5               	goto	i1l2464
  5225  0284                     u203_20:	
  5226  0284                     i1l2460:	
  5227                           
  5228                           ;scheduler.c: 39:                     sch_tasks[index].delay = sch_tasks[index].period;
  5229  0284  300D               	movlw	13
  5230  0285  00F4               	movwf	??_sch_update
  5231  0286  0874               	movf	??_sch_update,w
  5232  0287  00F0               	movwf	i1___bmul@multiplicand
  5233  0288  087A               	movf	sch_update@index,w
  5234  0289  120A  158A  2671  120A  118A  	fcall	i1___bmul
  5235  028E  3E25               	addlw	(low ((_sch_tasks| 0+5)))& (0+255)
  5236  028F  0084               	movwf	4
  5237  0290  1383               	bcf	3,7	;select IRP bank0
  5238  0291  0800               	movf	0,w
  5239  0292  00F5               	movwf	??_sch_update+1
  5240  0293  0A84               	incf	4,f
  5241  0294  0800               	movf	0,w
  5242  0295  00F6               	movwf	??_sch_update+2
  5243  0296  0A84               	incf	4,f
  5244  0297  0800               	movf	0,w
  5245  0298  00F7               	movwf	??_sch_update+3
  5246  0299  0A84               	incf	4,f
  5247  029A  0800               	movf	0,w
  5248  029B  00F8               	movwf	??_sch_update+4
  5249  029C  300D               	movlw	13
  5250  029D  00F9               	movwf	??_sch_update+5
  5251  029E  0879               	movf	??_sch_update+5,w
  5252  029F  00F0               	movwf	i1___bmul@multiplicand
  5253  02A0  087A               	movf	sch_update@index,w
  5254  02A1  120A  158A  2671  120A  118A  	fcall	i1___bmul
  5255  02A6  3E21               	addlw	(low ((_sch_tasks| 0+1)))& (0+255)
  5256  02A7  0084               	movwf	4
  5257  02A8  0875               	movf	??_sch_update+1,w
  5258  02A9  1383               	bcf	3,7	;select IRP bank0
  5259  02AA  0080               	movwf	0
  5260  02AB  0A84               	incf	4,f
  5261  02AC  0876               	movf	??_sch_update+2,w
  5262  02AD  0080               	movwf	0
  5263  02AE  0A84               	incf	4,f
  5264  02AF  0877               	movf	??_sch_update+3,w
  5265  02B0  0080               	movwf	0
  5266  02B1  0A84               	incf	4,f
  5267  02B2  0878               	movf	??_sch_update+4,w
  5268  02B3  0080               	movwf	0
  5269  02B4  2AD5               	goto	i1l2464
  5270  02B5                     i1l2462:	
  5271                           
  5272                           ;scheduler.c: 43:                 sch_tasks[index].delay -= 1;
  5273  02B5  300D               	movlw	13
  5274  02B6  00F4               	movwf	??_sch_update
  5275  02B7  0874               	movf	??_sch_update,w
  5276  02B8  00F0               	movwf	i1___bmul@multiplicand
  5277  02B9  087A               	movf	sch_update@index,w
  5278  02BA  120A  158A  2671  120A  118A  	fcall	i1___bmul
  5279  02BF  3E21               	addlw	(low ((_sch_tasks| 0+1)))& (0+255)
  5280  02C0  0084               	movwf	4
  5281  02C1  3001               	movlw	1
  5282  02C2  1383               	bcf	3,7	;select IRP bank0
  5283  02C3  0280               	subwf	0,f
  5284  02C4  0A84               	incf	4,f
  5285  02C5  3000               	movlw	0
  5286  02C6  1C03               	skipc
  5287  02C7  3001               	movlw	1
  5288  02C8  0280               	subwf	0,f
  5289  02C9  0A84               	incf	4,f
  5290  02CA  3000               	movlw	0
  5291  02CB  1C03               	skipc
  5292  02CC  3001               	movlw	1
  5293  02CD  0280               	subwf	0,f
  5294  02CE  0A84               	incf	4,f
  5295  02CF  3000               	movlw	0
  5296  02D0  1C03               	skipc
  5297  02D1  3001               	movlw	1
  5298  02D2  0280               	subwf	0,f
  5299  02D3  3003               	movlw	3
  5300  02D4  0284               	subwf	4,f
  5301  02D5                     i1l2464:	
  5302                           
  5303                           ;scheduler.c: 46:     }
  5304  02D5  3001               	movlw	1
  5305  02D6  00F4               	movwf	??_sch_update
  5306  02D7  0874               	movf	??_sch_update,w
  5307  02D8  07FA               	addwf	sch_update@index,f
  5308  02D9                     i1l2466:	
  5309  02D9  3003               	movlw	3
  5310  02DA  027A               	subwf	sch_update@index,w
  5311  02DB  1C03               	skipc
  5312  02DC  2ADE               	goto	u204_21
  5313  02DD  2ADF               	goto	u204_20
  5314  02DE                     u204_21:	
  5315  02DE  2A12               	goto	i1l2454
  5316  02DF                     u204_20:	
  5317  02DF                     i1l264:	
  5318  02DF  0008               	return
  5319  02E0                     __end_of_sch_update:	
  5320                           
  5321                           	psect	text25
  5322  0E71                     __ptext25:	
  5323 ;; *************** function i1___bmul *****************
  5324 ;; Defined at:
  5325 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  multiplier      1    wreg     unsigned char 
  5328 ;;  multiplicand    1    0[COMMON] unsigned char 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;  multiplier      1    2[COMMON] unsigned char 
  5331 ;;  __bmul          1    3[COMMON] unsigned char 
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      unsigned char 
  5334 ;; Registers used:
  5335 ;;		wreg, status,2, status,0
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5341 ;;      Params:         1       0       0       0       0
  5342 ;;      Locals:         2       0       0       0       0
  5343 ;;      Temps:          1       0       0       0       0
  5344 ;;      Totals:         4       0       0       0       0
  5345 ;;Total ram usage:        4 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; This function calls:
  5348 ;;		Nothing
  5349 ;; This function is called by:
  5350 ;;		_sch_update
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           
  5355                           ;psect for function i1___bmul
  5356  0E71                     i1___bmul:	
  5357                           
  5358                           ;incstack = 0
  5359                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  5360                           ;i1___bmul@multiplier stored from wreg
  5361  0E71  00F2               	movwf	i1___bmul@multiplier
  5362  0E72                     i1l2352:	
  5363  0E72  01F3               	clrf	i1___bmul@product
  5364  0E73                     i1l2354:	
  5365  0E73  1C72               	btfss	i1___bmul@multiplier,0
  5366  0E74  2E76               	goto	u190_21
  5367  0E75  2E77               	goto	u190_20
  5368  0E76                     u190_21:	
  5369  0E76  2E7B               	goto	i1l2358
  5370  0E77                     u190_20:	
  5371  0E77                     i1l2356:	
  5372  0E77  0870               	movf	i1___bmul@multiplicand,w
  5373  0E78  00F1               	movwf	??i1___bmul
  5374  0E79  0871               	movf	??i1___bmul,w
  5375  0E7A  07F3               	addwf	i1___bmul@product,f
  5376  0E7B                     i1l2358:	
  5377  0E7B  1003               	clrc
  5378  0E7C  0DF0               	rlf	i1___bmul@multiplicand,f
  5379  0E7D                     i1l2360:	
  5380  0E7D  1003               	clrc
  5381  0E7E  0CF2               	rrf	i1___bmul@multiplier,f
  5382  0E7F  0872               	movf	i1___bmul@multiplier,w
  5383  0E80  1D03               	btfss	3,2
  5384  0E81  2E83               	goto	u191_21
  5385  0E82  2E84               	goto	u191_20
  5386  0E83                     u191_21:	
  5387  0E83  2E73               	goto	i1l2354
  5388  0E84                     u191_20:	
  5389  0E84                     i1l2362:	
  5390  0E84  0873               	movf	i1___bmul@product,w
  5391  0E85                     i1l538:	
  5392  0E85  0008               	return
  5393  0E86                     __end_ofi1___bmul:	
  5394  0002                     
  5395                           	psect	functab
  5396  0025                     __pfunctab:	
  5397  0025                     __fptable:	
  5398  0025                     fptable:	
  5399  0025  00FF               	movwf	(btemp+1)& (0+127)
  5400  0026  3000               	movlw	high fptable
  5401  0027  008A               	movwf	10
  5402  0028  087F               	movf	(btemp+1)& (0+127),w
  5403  0029  0782               	addwf	2,f
  5404  002A                     fpbase:	
  5405  002A  282A               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  5406  002B                     fp_u0:	
  5407  002B  282B               	ljmp	fp_u0	; unused
  5408  002C                     fp__showNumber25:	
  5409  002C  120A  118A  2FED   	ljmp	_showNumber25
  5410  002F                     fp__checkButtons:	
  5411  002F  120A  118A  2AE0   	ljmp	_checkButtons
  5412  0032                     __end_of__fptable:	
  5413  0032                     __i1fptable:	
  5414  0032                     i1fptable:	
  5415  0032  00FF               	movwf	(btemp+1)& (0+127)
  5416  0033  3000               	movlw	high i1fptable
  5417  0034  008A               	movwf	10
  5418  0035  087F               	movf	(btemp+1)& (0+127),w
  5419  0036  0782               	addwf	2,f
  5420  0037                     i1fpbase:	
  5421  0037  2837               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  5422  0038                     fp__sch_update:	
  5423  0038  120A  118A  2A11   	ljmp	_sch_update
  5424  003B                     __end_of__i1fptable:	
  5425  007E                     btemp	set	126	;btemp
  5426  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     29      72
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    timer_vid_set_isr_0@callback_function	PTR FTN()void  size(1) Largest target is 1
		 -> sch_update(), 

    timer2_isr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    timer1_isr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    timer0_isr	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), sch_update(), 

    sch_u8_add_task@taskFunction	PTR FTN()void  size(1) Largest target is 1
		 -> checkButtons(), showNumber25(), 

    S176data$taskFunction	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), checkButtons(), showNumber25(), 

    sch_tasks.taskFunction	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), checkButtons(), showNumber25(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _timer_isr in COMMON

    _timer_isr->_sch_update
    _sch_update->i1___bmul

Critical Paths under _main in BANK0

    _main->_sch_vid_dispatch_tasks
    _ssd_init->_dio_vid_set_pin_direction
    _sch_vid_init->_sch_vid_delete_task
    _showNumber25->_ssd_set_state
    _ssd_set_state->___awdiv
    _dio_vid_set_port_value->_ssd_get_number
    _sch_vid_delete_task->___bmul
    _checkButtons->_dio_u8_read_pin_value
    _dio_u8_read_pin_value->_dio_u8_read_port_value
    _sch_u8_add_task->___bmul

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11021
                                             27 BANK0      2     2      0
                            ___awmod
         _dio_vid_set_port_direction
                     _eeprom_u8_read
                    _sch_u8_add_task
             _sch_vid_dispatch_tasks
                       _sch_vid_init
                           _ssd_init
 ---------------------------------------------------------------------------------
 (1) _ssd_init                                             1     1      0    1658
                                             11 BANK0      1     1      0
          _dio_vid_set_pin_direction
         _dio_vid_set_port_direction
 ---------------------------------------------------------------------------------
 (2) _dio_vid_set_port_direction                           4     3      1     284
                                              6 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _dio_vid_set_pin_direction                            5     3      2    1374
                                              6 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _sch_vid_init                                         2     2      0     875
                                             12 BANK0      2     2      0
                _sch_vid_delete_task
                   _timer_vid_init_0
                _timer_vid_set_isr_0
 ---------------------------------------------------------------------------------
 (2) _timer_vid_set_isr_0                                  2     2      0      22
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer_vid_init_0                                     3     0      3     196
                                              6 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _sch_vid_dispatch_tasks                               6     6      0    6571
                                             21 BANK0      6     6      0
                   Absolute function *
                             ___bmul
                       _checkButtons *
                _sch_vid_delete_task
                       _showNumber25 *
 ---------------------------------------------------------------------------------
 (2) _showNumber25                                         0     0      0    4659
                      _ssd_set_state
 ---------------------------------------------------------------------------------
 (3) _ssd_set_state                                        6     6      0    4659
                                             15 BANK0      6     6      0
                            ___awdiv
                            ___awmod
              _dio_u8_read_pin_value
              _dio_vid_set_pin_value
             _dio_vid_set_port_value
                     _ssd_get_number
 ---------------------------------------------------------------------------------
 (4) _ssd_get_number                                       3     3      0      22
                                              6 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _dio_vid_set_port_value                               4     3      1     436
                                              9 BANK0      4     3      1
                     _ssd_get_number (ARG)
 ---------------------------------------------------------------------------------
 (4) _dio_vid_set_pin_value                                5     3      2    2590
                                              6 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     600
                                              6 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _sch_vid_delete_task                                  2     2      0     589
                                             10 BANK0      2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _checkButtons                                         2     2      0     688
                                             13 BANK0      2     2      0
              _dio_u8_read_pin_value
                   _eeprom_vid_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_vid_write                                     3     2      1     219
                                              6 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _dio_u8_read_pin_value                                4     3      1     469
                                              9 BANK0      4     3      1
             _dio_u8_read_port_value
 ---------------------------------------------------------------------------------
 (5) _dio_u8_read_port_value                               3     3      0      22
                                              6 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sch_u8_add_task                                     12     4      8    1011
                                             10 BANK0     12     4      8
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     479
                                              6 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _eeprom_u8_read                                       1     1      0      22
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _timer_isr                                            6     6      0     401
                                              0 BANK0      6     6      0
                   Absolute function *
                         _sch_update *
 ---------------------------------------------------------------------------------
 (7) _sch_update                                           7     7      0     401
                                              4 COMMON     7     7      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (8) i1___bmul                                             4     3      1     201
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
   _dio_vid_set_port_direction
   _eeprom_u8_read
   _sch_u8_add_task
     ___bmul
   _sch_vid_dispatch_tasks
     Absolute function(Fake) *
     ___bmul *
     _checkButtons *
       _dio_u8_read_pin_value
         _dio_u8_read_port_value
       _eeprom_vid_write
     _sch_vid_delete_task *
       ___bmul
     _showNumber25 *
       _ssd_set_state
         ___awdiv
         ___awmod
         _dio_u8_read_pin_value
           _dio_u8_read_port_value
         _dio_vid_set_pin_value
         _dio_vid_set_port_value
           _ssd_get_number (ARG)
         _ssd_get_number
   _sch_vid_init
     _sch_vid_delete_task
       ___bmul
     _timer_vid_init_0
     _timer_vid_set_isr_0
   _ssd_init
     _dio_vid_set_pin_direction
     _dio_vid_set_port_direction

 _timer_isr (ROOT)
   Absolute function(Fake) *
   _sch_update *
     i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      56       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      48       5       90.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      56      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jul 06 18:54:50 2020

                __end_of_checkButtons 038B              ??_sch_vid_dispatch_tasks 0060  
                                   pc 0002                        ___bmul@product 0053  
                         __CFG_CP$OFF 0000                                    l36 07F5  
                                  l45 038A                                    l86 07EC  
                                  l96 0F73                                    _RD 0C60  
                                  _WR 0C61                          ___awdiv@sign 0057  
                                  fsr 0004             __size_of_eeprom_vid_write 0032  
           timer_vid_init_0@prescaler 0051                                   l101 0F1D  
                                 l109 0ED0                                   l134 0210  
                                 l215 075A                                   l240 0426  
                                 l235 0EF4                                   l420 0FA5  
                                 l340 06B2                                   l341 06B8  
                                 l325 0E70                                   l342 06BE  
                                 l423 0EA0                                   l343 06C4  
                                 l335 069A                                   l255 0F46  
                                 l159 012F                                   l280 04B7  
                                 l273 0543                                   l417 0F77  
                                 l345 06F9                                   l337 06A0  
                                 l426 0EB6                                   l338 06A6  
                                 l339 06AC                                   l284 0694  
                                 l538 0E9C                                   l665 062E  
                                 l678 07B5                                   _GIE 005F  
                                 _PS0 0408                                   _PS1 0409  
                                 _PS2 040A                                   _PEN 048A  
                        __CFG_CPD$OFF 0000                                   _SEN 0488  
                                 _PSA 040B                                   fsr0 0004  
                                 indf 0000                _dio_u8_read_port_value 0EF5  
                        ___awmod@sign 0057                          __CFG_FOSC$HS 0000  
                      ?_ssd_set_state 0070                          __CFG_LVP$OFF 0000  
                                l2000 01D0                                  l2002 01D5  
                                l2010 01F7                                  l2100 05C9  
                                l2004 01E3                                  l2020 06FE  
                                l2110 05DD                                  l2102 05CD  
                                l2006 01E8                                  l2200 0F97  
                                l2120 05F3                                  l2112 05E1  
                                l2104 05D2                                  l2040 0708  
                                l2032 0704                                  l2024 0700  
                                l2210 0E8A                                  l2202 0F99  
                                l2130 0613                                  l2122 05F7  
                                l2114 05E3                                  l2106 05D4  
                                l2018 06FD                                  l2212 0E8E  
                                l2204 0F9A                                  l2132 061A  
                                l2124 05FB                                  l2116 05E9  
                                l2108 05D8                                  l2060 0712  
                                l2052 070E                                  l2044 070A  
                                l2036 0706                                  l2028 0702  
                                l2300 00AF                                  l2214 0E92  
                                l2206 0FA2                                  l2126 060C  
                                l2118 05EC                                  l2134 0620  
                                l2150 0769                                  l2142 075B  
                                l2222 07ED                                  l2230 02FC  
                                l2310 00EB                                  l2302 00C0  
                                l2216 0E94                                  l2208 0E89  
                                l2400 04D3                                  l2136 0625  
                                l2128 0612                                  l2160 0782  
                                l2152 076D                                  l2144 075E  
                                l2080 071C                                  l2072 0718  
                                l2064 0714                                  l2056 0710  
                                l2048 070C                                  l2240 033C  
                                l2232 0310                                  l2224 02E0  
                                l2312 00F0                                  l2304 00C5  
                                l2320 0116                                  l2218 0E9B  
                                l2402 04DB                                  l2330 0638  
                                l2138 062A                                  l2170 07A1  
                                l2162 0786                                  l2154 0772  
                                l2146 0762                                  l2090 0720  
                                l2250 0376                                  l2242 0340  
                                l2234 031D                                  l2226 02F1  
                                l2410 0427                                  l2314 0100  
                                l2306 00D5                                  l2164 078A  
                                l2156 0778                                  l2172 07A7  
                                l2148 0767                                  l2084 071E  
                                l2076 071A                                  l2068 0716  
                                l2180 038E                                  l2252 0387  
                                l2244 0354                                  l2228 02F8  
                                l2236 0324                                  l2420 045F  
                                l2340 06F0                                  l2332 0E6C  
                                l2316 0105                                  l2308 00DA  
                                l2260 07C4                                  l2406 04E4  
                                l2190 0F7D                                  l2174 07AC  
                                l2166 0794                                  l2158 077B  
                                l2182 03BA                                  l2246 0361  
                                l2238 0335                                  l2422 0481  
                                l2342 06F6                                  l2334 0695  
                                l2262 07C9                                  l2254 07B9  
                                l2192 0F89                                  l2328 0632  
                                l2176 07B1                                  l2168 079A  
                                l2184 03C9                                  l2248 0365  
                                l2424 04A5                                  l2416 042A  
                                l2280 0044                                  l2264 07CE  
                                l2256 07BA                                  l2370 0EA6  
                                l2194 0F8C                                  l2098 05C6  
                                l2186 03F8                                  l2418 044C  
                                l2426 04AB                                  l2338 06CA  
                                l2290 007F                                  l2282 0054  
                                l2258 07BF                                  l2372 0EAA  
                                l1900 0EFB                                  l2196 0F92  
                                l2188 0F77                                  l2428 04B1  
                                l2292 0084                                  l2284 0059  
                                l2276 003E                                  l2268 07D3  
                                l2374 0EB0                                  l2198 0F93  
                                l2390 0F33                                  l2294 0095  
                                l2286 006A                                  l2278 003F  
                                l2366 0ED1                                  l2368 0EA0  
                                l1912 0EFF                                  l2392 0F39  
                                l2384 0F21                                  l2296 009A  
                                l2288 006F                                  l2480 0560  
                                l2394 04BB                                  l1906 0EFD  
                                l2810 0728                                  l2386 0F27  
                                l2378 0F1E                                  l2298 00AA  
                                l2802 07DB                                  l2490 058D  
                                l2482 0566                                  l2396 04BD  
                                l1940 0EC5                                  l2812 0F62  
                                l2388 0F2D                                  l2804 011E  
                                l2492 05A5                                  l2484 056C  
                                l2476 0544                                  l2398 04C1  
                                l1918 0F01                                  l1926 0F03  
                                l2814 01FF                                  l1950 0F51  
                                l2806 06D4                                  l2494 05BD  
                                l2486 0584                                  l2478 0555  
                                l1928 0F1C                                  l2816 0F0B  
                                l1952 0F54                                  l1944 0F4A  
                                l2808 06EB                                  l2488 0588  
                                l1938 0EBA                                  l1970 0139  
                                l1954 0F57                                  l1946 0F4B  
                                l1892 0EF8                                  l1980 016E  
                                l1972 0147                                  l1948 0F4E  
                                l1894 0EF9                                  l1990 019A  
                                l1982 0173                                  l1974 014C  
                                l1966 0133                                  l1958 0F5A  
                                l1992 01A9                                  l1984 0182  
                                l1976 015B                                  l1968 0134  
                                l1994 01AE                                  l1986 0187  
                                l1978 0160                                  l1996 01BC  
                                l1988 0195                                  l1998 01C1  
                                _T0CS 040D   dio_vid_set_pin_direction@portNumber 0055  
                                u2000 04B7                                  u2001 04B6  
                                u1210 0173                                  u1211 0172  
                                u1204 0166                                  u1205 0164  
                                u1310 01D5                                  u1230 0187  
                                u1150 0139                                  u1311 01D4  
                                u1231 0186                                  u1151 0138  
                                u1144 0ECB                                  u1304 01C7  
                                u1224 0179                                  u1145 0EC9  
                                u1305 01C5                                  u1225 0177  
                                u1410 060C                                  u1330 01E8  
                                u1250 019A                                  u1170 014C  
                                u1411 060B                                  u1331 01E7  
                                u1251 0199                                  u1171 014B  
                                u1500 0794                                  u1324 01DB  
                                u1244 018D                                  u1164 013F  
                                u2060 0566                                  u1405 05FC  
                                u1501 0793                                  u1325 01D9  
                                u1245 018B                                  u1165 013D  
                                u2061 0565                                  u1430 0620  
                                u1350 05CD                                  u1270 01AE  
                                u1190 0160                                  u2070 056C  
                                u1431 061F                                  u1415 0608  
                                u1351 05CC                                  u1271 01AD  
                                u1191 015F                                  u2071 056B  
                                u1440 0625                                  u1360 05D8  
                                u1520 07A7                                  u1344 01EE  
                                u1264 01A0                                  u1184 0152  
                                u1600 02F1                                  u2080 0584  
                                u1441 0624                                  u1425 0614  
                                u1361 05D7                                  u1521 07A6  
                                u1505 0790                                  u1345 01EC  
                                u1265 019E                                  u1185 0150  
                                u1601 02F0                                  u2081 0583  
                                u1370 05E9                                  u1530 07AC  
                                u1450 0762                                  u1290 01C1  
                                u1610 02F8                                  u1371 05E8  
                                u1531 07AB                                  u1515 079B  
                                u1451 0761                                  u1291 01C0  
                                u1611 02F7                                  u1460 076D  
                                u1284 01B4                                  u1540 03C9  
                                u1620 0310                                  u1700 0059  
                                u1461 076C                                  u1285 01B2  
                                u1541 03C8                                  u1621 030F  
                                u1701 0058                                  u1550 0F7D  
                                u1390 05FB                                  u1470 0778  
                                u1630 0335                                  u1551 0F7C  
                                u1391 05FA                                  u1471 0777  
                                u1631 0334                                  u1560 0FA1  
                                u1640 033C                                  u1800 00C5  
                                u1720 006F                                  u1561 0F9F  
                                u1385 05ED                                  u1641 033B  
                                u1625 030C                                  u1801 00C4  
                                u1721 006E                                  u1490 078A  
                                u1650 0354                                  u1714 005F  
                                u1491 0789                                  u1651 0353  
                                u1715 005D                                  u1580 0E8E  
                                u1660 0376                                  u1820 00DA  
                                u1740 0084                                  u1581 0E8D  
                                u1485 077C                                  u1661 0375  
                                u1821 00D9                                  u1741 0083  
                                u1590 0E9B                                  u1574 0FA2  
                                u1670 0387                                  u1814 00CB  
                                u1734 0075                                  u1591 0E9A  
                                u1671 0386                                  u1655 0350  
                                u1815 00C9                                  u1735 0073  
                                u1920 0EA6                                  u1840 00F0  
                                u1760 009A                                  u1680 0044  
                                u1921 0EA5                                  u1841 00EF  
                                u1761 0099                                  u1681 0043  
                                u1930 0EAA                                  u1834 00E0  
                                u1754 008A                                  u1931 0EA9  
                                u1835 00DE                                  u1755 0088  
                                u1940 0F33                                  u1860 0105  
                                u1780 00AF                                  u1941 0F32  
                                u1861 0104                                  u1781 00AE  
                                u1950 04D3                                  u1854 00F6  
                                u1774 00A0                                  u1694 004A  
                                u1951 04D2                                  u1855 00F4  
                                u1775 009E                                  u1695 0048  
                                u1960 04DB                                  u1880 0638  
                                u1961 04DA                                  u1881 0637  
                                u1970 04E3                                  u1890 06F6  
                                u1874 010B                                  u1794 00B5  
                                u1971 04E2                                  u1891 06F5  
                                u1875 0109                                  u1795 00B3  
                                _PEIE 005E                                  u1980 044C  
                                u1981 044B                                  u1990 04A5  
                                u1991 04A4                                  _RCEN 048B  
                                _PIR1 000C                                  _WCOL 00A7  
                                _WREN 0C62                          __CFG_WRT$OFF 0000  
               ??_sch_vid_delete_task 0055                         fp__sch_update 0038  
                                _main 0544                   _timer_vid_set_isr_0 0E69  
                                fp_u0 002B            eeprom_vid_write@gie_Status 0053  
                                btemp 007E                         __CFG_BOREN$ON 0000  
                                start 0012                     ___bmul@multiplier 0054  
    dio_u8_read_port_value@portNumber 0053                  ?_timer_vid_set_isr_0 0070  
                               ?_main 0070                                 _ACKEN 048C  
                               _ACKDT 048D                       __end_of___awdiv 062F  
                               _EEADR 010D                         __CFG_WDTE$OFF 0000  
                     __end_of___awmod 07B6                       ___awdiv@divisor 0051  
                               i1l320 0FD4                                 i1l322 0FF5  
                               i1l264 02DF                                 i1l538 0E85  
                     ___awdiv@counter 0056                                 _PORTA 0005  
                               _PORTB 0006                                 _PORTC 0007  
                               _PORTD 0008                                 _PORTE 0009  
                               _SSPM0 00A0                                 _SSPM1 00A1  
                               _SSPM2 00A2                                 _SSPM3 00A3  
                               _TRISA 0085                                 _TRISB 0086  
                               _TRISC 0087                                 _TRISD 0088  
                               _TRISE 0089                                 _SSPEN 00A5  
                               _SSPOV 00A6                         __CFG_PWRTE$ON 0000  
                               fpbase 002A                      __end_ofi1___bmul 0E86  
                               pclath 000A                                 status 0003  
                               wtemp0 007E                      _timer_vid_init_0 0695  
                     __initialization 0015                          __end_of_main 05C6  
     __size_of_sch_vid_dispatch_tasks 0091        __size_of_dio_u8_read_pin_value 001A  
       __end_of_dio_u8_read_pin_value 0ED1                 ??_timer_vid_set_isr_0 0051  
            __size_of_sch_u8_add_task 008C                                ??_main 0066  
                    ??_eeprom_u8_read 0051                       ??_ssd_set_state 005A  
                              _EEDATA 010C                                _EECON2 018D  
                    ___awdiv@dividend 0053                       sch_update@index 007A  
                              i1l2360 0E7D                                i1l2352 0E72  
                              u201_20 0224                                u201_21 0223  
                              i1l2362 0E84                                i1l2354 0E73  
                              i1l2356 0E77                                i1l2460 0284  
                              i1l2358 0E7B                                i1l2462 02B5  
                              i1l2454 0212                                i1l2550 0FAA  
                              u202_20 0244                                i1l2456 0224  
                              i1l2464 02D5                                i1l2448 0211  
                              i1l2552 0FAB                                u202_21 0243  
                              i1l2466 02D9                                i1l2458 0244  
                              i1l2554 0FB1                                i1l2556 0FC3  
                              i1l2548 0FA6                                i1l2558 0FE4  
                              u203_20 0284                                u203_21 0283  
                              u204_20 02DF                                u204_21 02DE  
                              u220_24 0FDD                                u220_25 0FDB  
                              u221_20 0FE4                                u221_21 0FE3  
                              u222_24 0FED                                u222_25 0FEB  
                              u216_20 0FAA                                u216_21 0FA9  
dio_vid_set_port_direction@portNumber 0054                                u217_24 0FBC  
                              u217_25 0FBA                                u218_20 0FC3  
                              u218_21 0FC2                                u219_24 0FCC  
                              u219_25 0FCA                                u190_20 0E77  
                              u190_21 0E76                                u191_20 0E84  
                              u191_21 0E83                            __i1fptable 0032  
                              _TMR0IE 005D                                _TMR0IF 005A  
                              _TMR1IF 0060                                _TMR2IF 0061  
                              _SSPADD 0093                                _SSPBUF 0013  
                    __end_of__fptable 0032                 __size_of_checkButtons 00AB  
          ?_dio_vid_set_pin_direction 0051                                ___bmul 0E86  
                           ??___awdiv 0055                             ??___awmod 0055  
                    ___awdiv@quotient 0058                       ___awmod@divisor 0051  
                    _eeprom_vid_write 0F74                       ___awmod@counter 0056  
                    ??_ssd_get_number 0051                                fptable 0025  
                              fptotal 0004   dio_vid_set_port_direction@direction 0051  
                              saved_w 007E                      __end_of_ssd_init 0EF5  
                        _checkButtons 02E0                _sch_vid_dispatch_tasks 0427  
             __end_of__initialization 0021                 _dio_vid_set_pin_value 0130  
                 ___bmul@multiplicand 0051                        _setTemperature 004A  
                      __pcstackCOMMON 0070                         sch_vid_init@i 0058  
            sch_vid_delete_task@index 0056                         ?_sch_vid_init 0070  
             ?_dio_u8_read_port_value 0070                             ?i1___bmul 0070  
timer_vid_set_isr_0@callback_function 0052                     ??_sch_u8_add_task 005D  
                    i1___bmul@product 0073                            __pbssBANK0 0020  
            ??_dio_vid_set_port_value 0055                            __pmaintext 0544  
                             ?___bmul 0051                            __pintentry 0004  
      __end_of_dio_u8_read_port_value 0F1E                        ??_sch_vid_init 0057  
          dio_vid_set_pin_value@index 0051            dio_vid_set_pin_value@value 0052  
                          ??i1___bmul 0071              __end_of_timer_vid_init_0 06FA  
                  __size_of_timer_isr 005A           __end_of_sch_vid_delete_task 0695  
                             _SSPCON2 0091                               _SSPSTAT 0094  
 __size_of_dio_vid_set_port_direction 0037                       fp__showNumber25 002C  
              ?_dio_vid_set_pin_value 0051                               i1fpbase 0037  
                     __size_of___bmul 0017                             ?_ssd_init 0070  
                             ___awdiv 05C6                               ___awmod 075B  
                             __ptext1 0ED1                               __ptext2 07B6  
                             __ptext3 003B                               __ptext4 0F1E  
                             __ptext5 0E69                               __ptext6 0695  
                             __ptext7 0427                               __ptext8 02E0  
                             __ptext9 07ED                   __size_of__i1fptable 0009  
                             _counter 0047                      ___awmod@dividend 0053  
                 i1___bmul@multiplier 0072                            _sch_update 0211  
                             clrloop0 07F7                  end_of_initialization 0021  
            __end_of_eeprom_vid_write 0FA6       __size_of_dio_vid_set_port_value 002D  
         ??_dio_vid_set_pin_direction 0053                         ?_showNumber25 0070  
                   __end_of_timer_isr 1000           __end_of_timer_vid_set_isr_0 0E71  
                          _timer0_isr 007D                            _timer1_isr 007C  
                          _timer2_isr 007B                  eeprom_vid_write@data 0051  
                          ??_ssd_init 0056                 _dio_u8_read_pin_value 0EB7  
                sch_u8_add_task@delay 0055                  sch_u8_add_task@index 0060  
             ?_sch_vid_dispatch_tasks 0070                     ssd_set_state@ones 005D  
                   ssd_set_state@tens 005E                 __end_of_ssd_set_state 0427  
                __end_of_sch_vid_init 0F47             dio_u8_read_pin_value@port 0057  
                      ??_showNumber25 0060    __end_of_dio_vid_set_port_direction 07ED  
          _dio_vid_set_port_direction 07B6                        __end_of___bmul 0E9D  
                     _sch_u8_add_task 04B8                _dio_vid_set_port_value 0F47  
      __end_of_sch_vid_dispatch_tasks 04B8             _dio_vid_set_pin_direction 003B  
                   __size_ofi1___bmul 0015                   start_initialization 0015  
                         ?_sch_update 0070               __size_of_eeprom_u8_read 001A  
                            ??___bmul 0052                ?_dio_u8_read_pin_value 0054  
                  __end_of__i1fptable 003B            dio_u8_read_pin_value@index 0054  
                         __pbssCOMMON 007B                             ___latbits 0002  
                   ?_timer_vid_init_0 0051                         __pcstackBANK0 004B  
             ??_dio_vid_set_pin_value 0053                     __size_of__fptable 000D  
                  ??_timer_vid_init_0 0054               __size_of_ssd_get_number 0061  
  dio_vid_set_pin_direction@direction 0052               __end_of_sch_u8_add_task 0544  
    dio_vid_set_port_value@portNumber 0057                             __pfunctab 0025  
                            ?___awdiv 0051                              ?___awmod 0051  
                 __size_of_sch_update 00CF                     __size_of_ssd_init 0024  
                     fp__checkButtons 002F                  __end_of_showNumber25 07F6  
               __size_of_sch_vid_init 0029                     interrupt_function 0004  
                           _sch_tasks 0020                     ?_eeprom_vid_write 0051  
     dio_vid_set_pin_value@portNumber 0055          __size_of_sch_vid_delete_task 0066  
                           clear_ram0 07F6       dio_u8_read_pin_value@portNumber 0056  
                  ??_eeprom_vid_write 0052                 i1___bmul@multiplicand 0070  
         sch_vid_dispatch_tasks@index 0065          ??_dio_vid_set_port_direction 0052  
                           _timer_isr 0FA6                          _sch_vid_init 0F1E  
                            i1___bmul 0E71                         ?_checkButtons 0070  
                            i1fptable 0032                              i1fptotal 0002  
  __size_of_dio_vid_set_pin_direction 00F5                        _eeprom_u8_read 0E9D  
             eeprom_vid_write@address 0052           dio_vid_set_port_value@value 0054  
               eeprom_u8_read@address 0051        dio_vid_set_pin_direction@index 0051  
                ssd_get_number@number 0053           ?_dio_vid_set_port_direction 0051  
            ??_dio_u8_read_port_value 0051                      ?_sch_u8_add_task 0055  
             ?_dio_vid_set_port_value 0054                            ?_timer_isr 0070  
                    __size_of___awdiv 0069                      __size_of___awmod 005B  
        __size_of_timer_vid_set_isr_0 0008                              __fptable 0025  
                      ??_checkButtons 0058                __end_of_eeprom_u8_read 0EB7  
                            __ptext10 038B                              __ptext11 06FA  
                            __ptext20 04B8                              __ptext12 0F47  
                            __ptext21 0E86                              __ptext13 0130  
                            __ptext22 0E9D                              __ptext14 075B  
                            __ptext23 0FA6                              __ptext15 05C6  
                            __ptext24 0211                              __ptext16 062F  
                            __ptext25 0E71                              __ptext17 0F74  
                            __ptext18 0EB7                              __ptext19 0EF5  
                        ??_sch_update 0074                        _ssd_get_number 06FA  
   __end_of_dio_vid_set_pin_direction 0130           sch_u8_add_task@taskFunction 005F  
                       __size_of_main 0082        __end_of_dio_vid_set_port_value 0F74  
                            _ssd_init 0ED1               ??_dio_u8_read_pin_value 0055  
              __size_of_ssd_set_state 009C                 __size_of_showNumber25 0009  
                  __end_of_sch_update 02E0                       ?_eeprom_u8_read 0070  
              __end_of_ssd_get_number 075B        __size_of_dio_vid_set_pin_value 00E1  
       __end_of_dio_vid_set_pin_value 0211                              intlevel1 0025  
                        _showNumber25 07ED             __size_of_timer_vid_init_0 0065  
     __size_of_dio_u8_read_port_value 0029       timer_vid_init_0@interruptEnable 0053  
                         ??_timer_isr 004B                   _sch_vid_delete_task 062F  
                   _buttonPressedFlag 0049                       ?_ssd_get_number 0070  
                       _ssd_set_state 038B                  ?_sch_vid_delete_task 0070  
               sch_u8_add_task@period 0059                    ssd_set_state@state 005F  
